
at32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001cf8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000014e  00800060  00001cf8  00001d8c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000b  008001ae  008001ae  00001eda  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001eda  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001f38  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00001f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002224  00000000  00000000  000020b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008a7  00000000  00000000  000042d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f0d  00000000  00000000  00004b7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003bc  00000000  00000000  00005a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f2  00000000  00000000  00005e48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001556  00000000  00000000  0000643a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000148  00000000  00000000  00007990  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
       4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
       c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
      54:	07 63       	ori	r16, 0x37	; 55
      56:	42 36       	cpi	r20, 0x62	; 98
      58:	b7 9b       	sbis	0x16, 7	; 22
      5a:	d8 a7       	std	Y+40, r29	; 0x28
      5c:	1a 39       	cpi	r17, 0x9A	; 154
      5e:	68 56       	subi	r22, 0x68	; 104
      60:	18 ae       	std	Y+56, r1	; 0x38
      62:	ba ab       	std	Y+50, r27	; 0x32
      64:	55 8c       	ldd	r5, Z+29	; 0x1d
      66:	1d 3c       	cpi	r17, 0xCD	; 205
      68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
      6a:	57 63       	ori	r21, 0x37	; 55
      6c:	bd 6d       	ori	r27, 0xDD	; 221
      6e:	ed fd       	.word	0xfded	; ????
      70:	75 3e       	cpi	r23, 0xE5	; 229
      72:	f6 17       	cp	r31, r22
      74:	72 31       	cpi	r23, 0x12	; 18
      76:	bf 00       	.word	0x00bf	; ????
      78:	00 00       	nop
      7a:	80 3f       	cpi	r24, 0xF0	; 240
      7c:	08 00       	.word	0x0008	; ????
      7e:	00 00       	nop
      80:	be 92       	st	-X, r11
      82:	24 49       	sbci	r18, 0x94	; 148
      84:	12 3e       	cpi	r17, 0xE2	; 226
      86:	ab aa       	std	Y+51, r10	; 0x33
      88:	aa 2a       	or	r10, r26
      8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
      8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
      8e:	4c 3e       	cpi	r20, 0xEC	; 236
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	be ab       	std	Y+54, r27	; 0x36
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	aa 3e       	cpi	r26, 0xEA	; 234
      9a:	00 00       	nop
      9c:	00 00       	nop
      9e:	bf 00       	.word	0x00bf	; ????
      a0:	00 00       	nop
      a2:	80 3f       	cpi	r24, 0xF0	; 240
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 08       	sbc	r0, r0
      aa:	41 78       	andi	r20, 0x81	; 129
      ac:	d3 bb       	out	0x13, r29	; 19
      ae:	43 87       	std	Z+11, r20	; 0x0b
      b0:	d1 13       	cpse	r29, r17
      b2:	3d 19       	sub	r19, r13
      b4:	0e 3c       	cpi	r16, 0xCE	; 206
      b6:	c3 bd       	out	0x23, r28	; 35
      b8:	42 82       	std	Z+2, r4	; 0x02
      ba:	ad 2b       	or	r26, r29
      bc:	3e 68       	ori	r19, 0x8E	; 142
      be:	ec 82       	std	Y+4, r14	; 0x04
      c0:	76 be       	out	0x36, r7	; 54
      c2:	d9 8f       	std	Y+25, r29	; 0x19
      c4:	e1 a9       	ldd	r30, Z+49	; 0x31
      c6:	3e 4c       	sbci	r19, 0xCE	; 206
      c8:	80 ef       	ldi	r24, 0xF0	; 240
      ca:	ff be       	out	0x3f, r15	; 63
      cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <tempMin+0x20>
      ce:	ff 7f       	andi	r31, 0xFF	; 255
      d0:	3f 00       	.word	0x003f	; ????
      d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
      d6:	11 24       	eor	r1, r1
      d8:	1f be       	out	0x3f, r1	; 63
      da:	cf e5       	ldi	r28, 0x5F	; 95
      dc:	d8 e0       	ldi	r29, 0x08	; 8
      de:	de bf       	out	0x3e, r29	; 62
      e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
      e2:	11 e0       	ldi	r17, 0x01	; 1
      e4:	a0 e6       	ldi	r26, 0x60	; 96
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	e8 ef       	ldi	r30, 0xF8	; 248
      ea:	fc e1       	ldi	r31, 0x1C	; 28
      ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
      ee:	05 90       	lpm	r0, Z+
      f0:	0d 92       	st	X+, r0
      f2:	ae 3a       	cpi	r26, 0xAE	; 174
      f4:	b1 07       	cpc	r27, r17
      f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
      f8:	21 e0       	ldi	r18, 0x01	; 1
      fa:	ae ea       	ldi	r26, 0xAE	; 174
      fc:	b1 e0       	ldi	r27, 0x01	; 1
      fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
     100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
     102:	a9 3b       	cpi	r26, 0xB9	; 185
     104:	b2 07       	cpc	r27, r18
     106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
     108:	0e 94 25 07 	call	0xe4a	; 0xe4a <main>
     10c:	0c 94 7a 0e 	jmp	0x1cf4	; 0x1cf4 <_exit>

00000110 <__bad_interrupt>:
     110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <lcdcmd>:
char SPI_read()
{
	SPDR=0xFF;
	while(!(SPSR & (1<<SPIF)));
	return(SPDR);
}
     114:	82 bb       	out	0x12, r24	; 18
     116:	80 e8       	ldi	r24, 0x80	; 128
     118:	8b bb       	out	0x1b, r24	; 27
     11a:	89 ef       	ldi	r24, 0xF9	; 249
     11c:	90 e0       	ldi	r25, 0x00	; 0
     11e:	01 97       	sbiw	r24, 0x01	; 1
     120:	f1 f7       	brne	.-4      	; 0x11e <lcdcmd+0xa>
     122:	00 c0       	rjmp	.+0      	; 0x124 <lcdcmd+0x10>
     124:	00 00       	nop
     126:	1b ba       	out	0x1b, r1	; 27
     128:	83 ed       	ldi	r24, 0xD3	; 211
     12a:	90 e3       	ldi	r25, 0x30	; 48
     12c:	01 97       	sbiw	r24, 0x01	; 1
     12e:	f1 f7       	brne	.-4      	; 0x12c <lcdcmd+0x18>
     130:	00 c0       	rjmp	.+0      	; 0x132 <lcdcmd+0x1e>
     132:	00 00       	nop
     134:	08 95       	ret

00000136 <lcdint>:
     136:	88 e3       	ldi	r24, 0x38	; 56
     138:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     13c:	89 ef       	ldi	r24, 0xF9	; 249
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	01 97       	sbiw	r24, 0x01	; 1
     142:	f1 f7       	brne	.-4      	; 0x140 <lcdint+0xa>
     144:	00 c0       	rjmp	.+0      	; 0x146 <lcdint+0x10>
     146:	00 00       	nop
     148:	81 e0       	ldi	r24, 0x01	; 1
     14a:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     14e:	89 ef       	ldi	r24, 0xF9	; 249
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	01 97       	sbiw	r24, 0x01	; 1
     154:	f1 f7       	brne	.-4      	; 0x152 <lcdint+0x1c>
     156:	00 c0       	rjmp	.+0      	; 0x158 <lcdint+0x22>
     158:	00 00       	nop
     15a:	8e e0       	ldi	r24, 0x0E	; 14
     15c:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     160:	89 ef       	ldi	r24, 0xF9	; 249
     162:	90 e0       	ldi	r25, 0x00	; 0
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdint+0x2e>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdint+0x34>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcddata>:
     16e:	82 bb       	out	0x12, r24	; 18
     170:	80 ea       	ldi	r24, 0xA0	; 160
     172:	8b bb       	out	0x1b, r24	; 27
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcddata+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcddata+0x10>
     17e:	00 00       	nop
     180:	80 e2       	ldi	r24, 0x20	; 32
     182:	8b bb       	out	0x1b, r24	; 27
     184:	81 ee       	ldi	r24, 0xE1	; 225
     186:	94 e0       	ldi	r25, 0x04	; 4
     188:	01 97       	sbiw	r24, 0x01	; 1
     18a:	f1 f7       	brne	.-4      	; 0x188 <lcddata+0x1a>
     18c:	00 c0       	rjmp	.+0      	; 0x18e <lcddata+0x20>
     18e:	00 00       	nop
     190:	08 95       	ret

00000192 <lcd_string>:
     192:	ef 92       	push	r14
     194:	ff 92       	push	r15
     196:	1f 93       	push	r17
     198:	cf 93       	push	r28
     19a:	df 93       	push	r29
     19c:	7c 01       	movw	r14, r24
     19e:	16 2f       	mov	r17, r22
     1a0:	c0 e0       	ldi	r28, 0x00	; 0
     1a2:	d0 e0       	ldi	r29, 0x00	; 0
     1a4:	07 c0       	rjmp	.+14     	; 0x1b4 <lcd_string+0x22>
     1a6:	f7 01       	movw	r30, r14
     1a8:	ec 0f       	add	r30, r28
     1aa:	fd 1f       	adc	r31, r29
     1ac:	80 81       	ld	r24, Z
     1ae:	0e 94 b7 00 	call	0x16e	; 0x16e <lcddata>
     1b2:	21 96       	adiw	r28, 0x01	; 1
     1b4:	81 2f       	mov	r24, r17
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	c8 17       	cp	r28, r24
     1ba:	d9 07       	cpc	r29, r25
     1bc:	a4 f3       	brlt	.-24     	; 0x1a6 <lcd_string+0x14>
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	1f 91       	pop	r17
     1c4:	ff 90       	pop	r15
     1c6:	ef 90       	pop	r14
     1c8:	08 95       	ret

000001ca <charToInt>:
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	c0 97       	sbiw	r24, 0x30	; 48
     1ce:	08 95       	ret

000001d0 <lcd_clear>:
     1d0:	81 e0       	ldi	r24, 0x01	; 1
     1d2:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     1d6:	08 95       	ret

000001d8 <lcd_line_one>:
     1d8:	80 e8       	ldi	r24, 0x80	; 128
     1da:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     1de:	08 95       	ret

000001e0 <lcd_line_two>:
     1e0:	80 ec       	ldi	r24, 0xC0	; 192
     1e2:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
     1e6:	08 95       	ret

000001e8 <keycheck>:
     1e8:	8f ee       	ldi	r24, 0xEF	; 239
     1ea:	85 bb       	out	0x15, r24	; 21
     1ec:	83 ec       	ldi	r24, 0xC3	; 195
     1ee:	99 e0       	ldi	r25, 0x09	; 9
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <keycheck+0x8>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <keycheck+0xe>
     1f6:	00 00       	nop
     1f8:	98 9b       	sbis	0x13, 0	; 19
     1fa:	30 c0       	rjmp	.+96     	; 0x25c <keycheck+0x74>
     1fc:	99 9b       	sbis	0x13, 1	; 19
     1fe:	30 c0       	rjmp	.+96     	; 0x260 <keycheck+0x78>
     200:	9a 9b       	sbis	0x13, 2	; 19
     202:	30 c0       	rjmp	.+96     	; 0x264 <keycheck+0x7c>
     204:	8f ed       	ldi	r24, 0xDF	; 223
     206:	85 bb       	out	0x15, r24	; 21
     208:	83 ec       	ldi	r24, 0xC3	; 195
     20a:	99 e0       	ldi	r25, 0x09	; 9
     20c:	01 97       	sbiw	r24, 0x01	; 1
     20e:	f1 f7       	brne	.-4      	; 0x20c <keycheck+0x24>
     210:	00 c0       	rjmp	.+0      	; 0x212 <keycheck+0x2a>
     212:	00 00       	nop
     214:	98 9b       	sbis	0x13, 0	; 19
     216:	28 c0       	rjmp	.+80     	; 0x268 <keycheck+0x80>
     218:	99 9b       	sbis	0x13, 1	; 19
     21a:	28 c0       	rjmp	.+80     	; 0x26c <keycheck+0x84>
     21c:	9a 9b       	sbis	0x13, 2	; 19
     21e:	28 c0       	rjmp	.+80     	; 0x270 <keycheck+0x88>
     220:	8f eb       	ldi	r24, 0xBF	; 191
     222:	85 bb       	out	0x15, r24	; 21
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x40>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0x46>
     22e:	00 00       	nop
     230:	98 9b       	sbis	0x13, 0	; 19
     232:	20 c0       	rjmp	.+64     	; 0x274 <keycheck+0x8c>
     234:	99 9b       	sbis	0x13, 1	; 19
     236:	20 c0       	rjmp	.+64     	; 0x278 <keycheck+0x90>
     238:	9a 9b       	sbis	0x13, 2	; 19
     23a:	20 c0       	rjmp	.+64     	; 0x27c <keycheck+0x94>
     23c:	8f e7       	ldi	r24, 0x7F	; 127
     23e:	85 bb       	out	0x15, r24	; 21
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x5c>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x62>
     24a:	00 00       	nop
     24c:	98 9b       	sbis	0x13, 0	; 19
     24e:	18 c0       	rjmp	.+48     	; 0x280 <keycheck+0x98>
     250:	99 9b       	sbis	0x13, 1	; 19
     252:	18 c0       	rjmp	.+48     	; 0x284 <keycheck+0x9c>
     254:	9a 99       	sbic	0x13, 2	; 19
     256:	18 c0       	rjmp	.+48     	; 0x288 <keycheck+0xa0>
     258:	83 e2       	ldi	r24, 0x23	; 35
     25a:	08 95       	ret
     25c:	81 e3       	ldi	r24, 0x31	; 49
     25e:	08 95       	ret
     260:	82 e3       	ldi	r24, 0x32	; 50
     262:	08 95       	ret
     264:	83 e3       	ldi	r24, 0x33	; 51
     266:	08 95       	ret
     268:	84 e3       	ldi	r24, 0x34	; 52
     26a:	08 95       	ret
     26c:	85 e3       	ldi	r24, 0x35	; 53
     26e:	08 95       	ret
     270:	86 e3       	ldi	r24, 0x36	; 54
     272:	08 95       	ret
     274:	87 e3       	ldi	r24, 0x37	; 55
     276:	08 95       	ret
     278:	88 e3       	ldi	r24, 0x38	; 56
     27a:	08 95       	ret
     27c:	89 e3       	ldi	r24, 0x39	; 57
     27e:	08 95       	ret
     280:	8a e2       	ldi	r24, 0x2A	; 42
     282:	08 95       	ret
     284:	80 e3       	ldi	r24, 0x30	; 48
     286:	08 95       	ret
     288:	81 e6       	ldi	r24, 0x61	; 97
     28a:	08 95       	ret

0000028c <scankey>:
     28c:	81 e6       	ldi	r24, 0x61	; 97
     28e:	02 c0       	rjmp	.+4      	; 0x294 <scankey+0x8>
     290:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <keycheck>
     294:	81 36       	cpi	r24, 0x61	; 97
     296:	e1 f3       	breq	.-8      	; 0x290 <scankey+0x4>
     298:	08 95       	ret

0000029a <HCSR04Init>:
     29a:	87 b3       	in	r24, 0x17	; 23
     29c:	81 60       	ori	r24, 0x01	; 1
     29e:	87 bb       	out	0x17, r24	; 23
     2a0:	08 95       	ret

000002a2 <HCSR04Trigger>:
     2a2:	88 b3       	in	r24, 0x18	; 24
     2a4:	81 60       	ori	r24, 0x01	; 1
     2a6:	88 bb       	out	0x18, r24	; 24
     2a8:	85 e0       	ldi	r24, 0x05	; 5
     2aa:	8a 95       	dec	r24
     2ac:	f1 f7       	brne	.-4      	; 0x2aa <HCSR04Trigger+0x8>
     2ae:	88 b3       	in	r24, 0x18	; 24
     2b0:	8e 7f       	andi	r24, 0xFE	; 254
     2b2:	88 bb       	out	0x18, r24	; 24
     2b4:	08 95       	ret

000002b6 <GetPulseWidth>:
     2b6:	8f 92       	push	r8
     2b8:	9f 92       	push	r9
     2ba:	af 92       	push	r10
     2bc:	bf 92       	push	r11
     2be:	cf 92       	push	r12
     2c0:	df 92       	push	r13
     2c2:	ef 92       	push	r14
     2c4:	ff 92       	push	r15
     2c6:	0f 93       	push	r16
     2c8:	1f 93       	push	r17
     2ca:	cf 93       	push	r28
     2cc:	df 93       	push	r29
     2ce:	d0 e0       	ldi	r29, 0x00	; 0
     2d0:	c0 e0       	ldi	r28, 0x00	; 0
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	a0 e0       	ldi	r26, 0x00	; 0
     2d6:	f0 e0       	ldi	r31, 0x00	; 0
     2d8:	f1 2c       	mov	r15, r1
     2da:	00 e0       	ldi	r16, 0x00	; 0
     2dc:	10 e0       	ldi	r17, 0x00	; 0
     2de:	15 c0       	rjmp	.+42     	; 0x30a <GetPulseWidth+0x54>
     2e0:	b1 99       	sbic	0x16, 1	; 22
     2e2:	25 c0       	rjmp	.+74     	; 0x32e <GetPulseWidth+0x78>
     2e4:	2d 2f       	mov	r18, r29
     2e6:	3c 2f       	mov	r19, r28
     2e8:	4b 2f       	mov	r20, r27
     2ea:	5a 2f       	mov	r21, r26
     2ec:	6f 2f       	mov	r22, r31
     2ee:	7f 2d       	mov	r23, r15
     2f0:	80 2f       	mov	r24, r16
     2f2:	91 2f       	mov	r25, r17
     2f4:	a1 e0       	ldi	r26, 0x01	; 1
     2f6:	0e 94 4f 0b 	call	0x169e	; 0x169e <__adddi3_s8>
     2fa:	d2 2f       	mov	r29, r18
     2fc:	c3 2f       	mov	r28, r19
     2fe:	b4 2f       	mov	r27, r20
     300:	a5 2f       	mov	r26, r21
     302:	f6 2f       	mov	r31, r22
     304:	f7 2e       	mov	r15, r23
     306:	08 2f       	mov	r16, r24
     308:	19 2f       	mov	r17, r25
     30a:	2d 2f       	mov	r18, r29
     30c:	3c 2f       	mov	r19, r28
     30e:	4b 2f       	mov	r20, r27
     310:	5a 2f       	mov	r21, r26
     312:	6f 2f       	mov	r22, r31
     314:	7f 2d       	mov	r23, r15
     316:	80 2f       	mov	r24, r16
     318:	91 2f       	mov	r25, r17
     31a:	2f 3b       	cpi	r18, 0xBF	; 191
     31c:	37 42       	sbci	r19, 0x27	; 39
     31e:	49 40       	sbci	r20, 0x09	; 9
     320:	51 05       	cpc	r21, r1
     322:	61 05       	cpc	r22, r1
     324:	71 05       	cpc	r23, r1
     326:	81 05       	cpc	r24, r1
     328:	91 05       	cpc	r25, r1
     32a:	d1 f2       	breq	.-76     	; 0x2e0 <GetPulseWidth+0x2a>
     32c:	c8 f2       	brcs	.-78     	; 0x2e0 <GetPulseWidth+0x2a>
     32e:	2d 2f       	mov	r18, r29
     330:	3c 2f       	mov	r19, r28
     332:	4b 2f       	mov	r20, r27
     334:	5a 2f       	mov	r21, r26
     336:	6f 2f       	mov	r22, r31
     338:	7f 2d       	mov	r23, r15
     33a:	80 2f       	mov	r24, r16
     33c:	91 2f       	mov	r25, r17
     33e:	20 3c       	cpi	r18, 0xC0	; 192
     340:	37 42       	sbci	r19, 0x27	; 39
     342:	49 40       	sbci	r20, 0x09	; 9
     344:	51 05       	cpc	r21, r1
     346:	61 05       	cpc	r22, r1
     348:	71 05       	cpc	r23, r1
     34a:	81 05       	cpc	r24, r1
     34c:	91 05       	cpc	r25, r1
     34e:	09 f4       	brne	.+2      	; 0x352 <GetPulseWidth+0x9c>
     350:	69 c0       	rjmp	.+210    	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     352:	1f bc       	out	0x2f, r1	; 47
     354:	82 e0       	ldi	r24, 0x02	; 2
     356:	8e bd       	out	0x2e, r24	; 46
     358:	1d bc       	out	0x2d, r1	; 45
     35a:	1c bc       	out	0x2c, r1	; 44
     35c:	d0 e0       	ldi	r29, 0x00	; 0
     35e:	c0 e0       	ldi	r28, 0x00	; 0
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	a0 e0       	ldi	r26, 0x00	; 0
     364:	f0 e0       	ldi	r31, 0x00	; 0
     366:	f1 2c       	mov	r15, r1
     368:	00 e0       	ldi	r16, 0x00	; 0
     36a:	10 e0       	ldi	r17, 0x00	; 0
     36c:	1a c0       	rjmp	.+52     	; 0x3a2 <GetPulseWidth+0xec>
     36e:	b1 9b       	sbis	0x16, 1	; 22
     370:	2a c0       	rjmp	.+84     	; 0x3c6 <GetPulseWidth+0x110>
     372:	8c b5       	in	r24, 0x2c	; 44
     374:	9d b5       	in	r25, 0x2d	; 45
     376:	81 36       	cpi	r24, 0x61	; 97
     378:	9a 4e       	sbci	r25, 0xEA	; 234
     37a:	28 f5       	brcc	.+74     	; 0x3c6 <GetPulseWidth+0x110>
     37c:	2d 2f       	mov	r18, r29
     37e:	3c 2f       	mov	r19, r28
     380:	4b 2f       	mov	r20, r27
     382:	5a 2f       	mov	r21, r26
     384:	6f 2f       	mov	r22, r31
     386:	7f 2d       	mov	r23, r15
     388:	80 2f       	mov	r24, r16
     38a:	91 2f       	mov	r25, r17
     38c:	a1 e0       	ldi	r26, 0x01	; 1
     38e:	0e 94 4f 0b 	call	0x169e	; 0x169e <__adddi3_s8>
     392:	d2 2f       	mov	r29, r18
     394:	c3 2f       	mov	r28, r19
     396:	b4 2f       	mov	r27, r20
     398:	a5 2f       	mov	r26, r21
     39a:	f6 2f       	mov	r31, r22
     39c:	f7 2e       	mov	r15, r23
     39e:	08 2f       	mov	r16, r24
     3a0:	19 2f       	mov	r17, r25
     3a2:	2d 2f       	mov	r18, r29
     3a4:	3c 2f       	mov	r19, r28
     3a6:	4b 2f       	mov	r20, r27
     3a8:	5a 2f       	mov	r21, r26
     3aa:	6f 2f       	mov	r22, r31
     3ac:	7f 2d       	mov	r23, r15
     3ae:	80 2f       	mov	r24, r16
     3b0:	91 2f       	mov	r25, r17
     3b2:	2f 3b       	cpi	r18, 0xBF	; 191
     3b4:	37 42       	sbci	r19, 0x27	; 39
     3b6:	49 40       	sbci	r20, 0x09	; 9
     3b8:	51 05       	cpc	r21, r1
     3ba:	61 05       	cpc	r22, r1
     3bc:	71 05       	cpc	r23, r1
     3be:	81 05       	cpc	r24, r1
     3c0:	91 05       	cpc	r25, r1
     3c2:	a9 f2       	breq	.-86     	; 0x36e <GetPulseWidth+0xb8>
     3c4:	a0 f2       	brcs	.-88     	; 0x36e <GetPulseWidth+0xb8>
     3c6:	2d 2f       	mov	r18, r29
     3c8:	3c 2f       	mov	r19, r28
     3ca:	4b 2f       	mov	r20, r27
     3cc:	5a 2f       	mov	r21, r26
     3ce:	6f 2f       	mov	r22, r31
     3d0:	7f 2d       	mov	r23, r15
     3d2:	80 2f       	mov	r24, r16
     3d4:	91 2f       	mov	r25, r17
     3d6:	20 3c       	cpi	r18, 0xC0	; 192
     3d8:	37 42       	sbci	r19, 0x27	; 39
     3da:	49 40       	sbci	r20, 0x09	; 9
     3dc:	51 05       	cpc	r21, r1
     3de:	61 05       	cpc	r22, r1
     3e0:	71 05       	cpc	r23, r1
     3e2:	81 05       	cpc	r24, r1
     3e4:	91 05       	cpc	r25, r1
     3e6:	19 f1       	breq	.+70     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     3e8:	8c b4       	in	r8, 0x2c	; 44
     3ea:	9d b4       	in	r9, 0x2d	; 45
     3ec:	1e bc       	out	0x2e, r1	; 46
     3ee:	28 2d       	mov	r18, r8
     3f0:	39 2d       	mov	r19, r9
     3f2:	40 e0       	ldi	r20, 0x00	; 0
     3f4:	50 e0       	ldi	r21, 0x00	; 0
     3f6:	60 e0       	ldi	r22, 0x00	; 0
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	80 e0       	ldi	r24, 0x00	; 0
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	20 36       	cpi	r18, 0x60	; 96
     400:	ea ee       	ldi	r30, 0xEA	; 234
     402:	3e 07       	cpc	r19, r30
     404:	41 05       	cpc	r20, r1
     406:	51 05       	cpc	r21, r1
     408:	61 05       	cpc	r22, r1
     40a:	71 05       	cpc	r23, r1
     40c:	81 05       	cpc	r24, r1
     40e:	91 05       	cpc	r25, r1
     410:	09 f0       	breq	.+2      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
     412:	90 f4       	brcc	.+36     	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
     414:	01 e0       	ldi	r16, 0x01	; 1
     416:	0e 94 33 0b 	call	0x1666	; 0x1666 <__lshrdi3>
     41a:	62 2f       	mov	r22, r18
     41c:	73 2f       	mov	r23, r19
     41e:	84 2f       	mov	r24, r20
     420:	95 2f       	mov	r25, r21
     422:	0e c0       	rjmp	.+28     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     424:	6f ef       	ldi	r22, 0xFF	; 255
     426:	7f ef       	ldi	r23, 0xFF	; 255
     428:	8f ef       	ldi	r24, 0xFF	; 255
     42a:	9f ef       	ldi	r25, 0xFF	; 255
     42c:	09 c0       	rjmp	.+18     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     42e:	6e ef       	ldi	r22, 0xFE	; 254
     430:	7f ef       	ldi	r23, 0xFF	; 255
     432:	8f ef       	ldi	r24, 0xFF	; 255
     434:	9f ef       	ldi	r25, 0xFF	; 255
     436:	04 c0       	rjmp	.+8      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     438:	6e ef       	ldi	r22, 0xFE	; 254
     43a:	7f ef       	ldi	r23, 0xFF	; 255
     43c:	8f ef       	ldi	r24, 0xFF	; 255
     43e:	9f ef       	ldi	r25, 0xFF	; 255
     440:	df 91       	pop	r29
     442:	cf 91       	pop	r28
     444:	1f 91       	pop	r17
     446:	0f 91       	pop	r16
     448:	ff 90       	pop	r15
     44a:	ef 90       	pop	r14
     44c:	df 90       	pop	r13
     44e:	cf 90       	pop	r12
     450:	bf 90       	pop	r11
     452:	af 90       	pop	r10
     454:	9f 90       	pop	r9
     456:	8f 90       	pop	r8
     458:	08 95       	ret

0000045a <HCSR04Init_2>:
     45a:	87 b3       	in	r24, 0x17	; 23
     45c:	84 60       	ori	r24, 0x04	; 4
     45e:	87 bb       	out	0x17, r24	; 23
     460:	08 95       	ret

00000462 <HCSR04Trigger_2>:
     462:	88 b3       	in	r24, 0x18	; 24
     464:	84 60       	ori	r24, 0x04	; 4
     466:	88 bb       	out	0x18, r24	; 24
     468:	85 e0       	ldi	r24, 0x05	; 5
     46a:	8a 95       	dec	r24
     46c:	f1 f7       	brne	.-4      	; 0x46a <HCSR04Trigger_2+0x8>
     46e:	88 b3       	in	r24, 0x18	; 24
     470:	8b 7f       	andi	r24, 0xFB	; 251
     472:	88 bb       	out	0x18, r24	; 24
     474:	08 95       	ret

00000476 <GetPulseWidth_2>:
     476:	8f 92       	push	r8
     478:	9f 92       	push	r9
     47a:	af 92       	push	r10
     47c:	bf 92       	push	r11
     47e:	cf 92       	push	r12
     480:	df 92       	push	r13
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	d0 e0       	ldi	r29, 0x00	; 0
     490:	c0 e0       	ldi	r28, 0x00	; 0
     492:	b0 e0       	ldi	r27, 0x00	; 0
     494:	a0 e0       	ldi	r26, 0x00	; 0
     496:	f0 e0       	ldi	r31, 0x00	; 0
     498:	f1 2c       	mov	r15, r1
     49a:	00 e0       	ldi	r16, 0x00	; 0
     49c:	10 e0       	ldi	r17, 0x00	; 0
     49e:	15 c0       	rjmp	.+42     	; 0x4ca <GetPulseWidth_2+0x54>
     4a0:	b3 99       	sbic	0x16, 3	; 22
     4a2:	25 c0       	rjmp	.+74     	; 0x4ee <GetPulseWidth_2+0x78>
     4a4:	2d 2f       	mov	r18, r29
     4a6:	3c 2f       	mov	r19, r28
     4a8:	4b 2f       	mov	r20, r27
     4aa:	5a 2f       	mov	r21, r26
     4ac:	6f 2f       	mov	r22, r31
     4ae:	7f 2d       	mov	r23, r15
     4b0:	80 2f       	mov	r24, r16
     4b2:	91 2f       	mov	r25, r17
     4b4:	a1 e0       	ldi	r26, 0x01	; 1
     4b6:	0e 94 4f 0b 	call	0x169e	; 0x169e <__adddi3_s8>
     4ba:	d2 2f       	mov	r29, r18
     4bc:	c3 2f       	mov	r28, r19
     4be:	b4 2f       	mov	r27, r20
     4c0:	a5 2f       	mov	r26, r21
     4c2:	f6 2f       	mov	r31, r22
     4c4:	f7 2e       	mov	r15, r23
     4c6:	08 2f       	mov	r16, r24
     4c8:	19 2f       	mov	r17, r25
     4ca:	2d 2f       	mov	r18, r29
     4cc:	3c 2f       	mov	r19, r28
     4ce:	4b 2f       	mov	r20, r27
     4d0:	5a 2f       	mov	r21, r26
     4d2:	6f 2f       	mov	r22, r31
     4d4:	7f 2d       	mov	r23, r15
     4d6:	80 2f       	mov	r24, r16
     4d8:	91 2f       	mov	r25, r17
     4da:	2f 3b       	cpi	r18, 0xBF	; 191
     4dc:	37 42       	sbci	r19, 0x27	; 39
     4de:	49 40       	sbci	r20, 0x09	; 9
     4e0:	51 05       	cpc	r21, r1
     4e2:	61 05       	cpc	r22, r1
     4e4:	71 05       	cpc	r23, r1
     4e6:	81 05       	cpc	r24, r1
     4e8:	91 05       	cpc	r25, r1
     4ea:	d1 f2       	breq	.-76     	; 0x4a0 <GetPulseWidth_2+0x2a>
     4ec:	c8 f2       	brcs	.-78     	; 0x4a0 <GetPulseWidth_2+0x2a>
     4ee:	2d 2f       	mov	r18, r29
     4f0:	3c 2f       	mov	r19, r28
     4f2:	4b 2f       	mov	r20, r27
     4f4:	5a 2f       	mov	r21, r26
     4f6:	6f 2f       	mov	r22, r31
     4f8:	7f 2d       	mov	r23, r15
     4fa:	80 2f       	mov	r24, r16
     4fc:	91 2f       	mov	r25, r17
     4fe:	20 3c       	cpi	r18, 0xC0	; 192
     500:	37 42       	sbci	r19, 0x27	; 39
     502:	49 40       	sbci	r20, 0x09	; 9
     504:	51 05       	cpc	r21, r1
     506:	61 05       	cpc	r22, r1
     508:	71 05       	cpc	r23, r1
     50a:	81 05       	cpc	r24, r1
     50c:	91 05       	cpc	r25, r1
     50e:	09 f4       	brne	.+2      	; 0x512 <GetPulseWidth_2+0x9c>
     510:	69 c0       	rjmp	.+210    	; 0x5e4 <GetPulseWidth_2+0x16e>
     512:	1f bc       	out	0x2f, r1	; 47
     514:	82 e0       	ldi	r24, 0x02	; 2
     516:	8e bd       	out	0x2e, r24	; 46
     518:	1d bc       	out	0x2d, r1	; 45
     51a:	1c bc       	out	0x2c, r1	; 44
     51c:	d0 e0       	ldi	r29, 0x00	; 0
     51e:	c0 e0       	ldi	r28, 0x00	; 0
     520:	b0 e0       	ldi	r27, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	f1 2c       	mov	r15, r1
     528:	00 e0       	ldi	r16, 0x00	; 0
     52a:	10 e0       	ldi	r17, 0x00	; 0
     52c:	1a c0       	rjmp	.+52     	; 0x562 <GetPulseWidth_2+0xec>
     52e:	b3 9b       	sbis	0x16, 3	; 22
     530:	2a c0       	rjmp	.+84     	; 0x586 <GetPulseWidth_2+0x110>
     532:	8c b5       	in	r24, 0x2c	; 44
     534:	9d b5       	in	r25, 0x2d	; 45
     536:	81 36       	cpi	r24, 0x61	; 97
     538:	9a 4e       	sbci	r25, 0xEA	; 234
     53a:	28 f5       	brcc	.+74     	; 0x586 <GetPulseWidth_2+0x110>
     53c:	2d 2f       	mov	r18, r29
     53e:	3c 2f       	mov	r19, r28
     540:	4b 2f       	mov	r20, r27
     542:	5a 2f       	mov	r21, r26
     544:	6f 2f       	mov	r22, r31
     546:	7f 2d       	mov	r23, r15
     548:	80 2f       	mov	r24, r16
     54a:	91 2f       	mov	r25, r17
     54c:	a1 e0       	ldi	r26, 0x01	; 1
     54e:	0e 94 4f 0b 	call	0x169e	; 0x169e <__adddi3_s8>
     552:	d2 2f       	mov	r29, r18
     554:	c3 2f       	mov	r28, r19
     556:	b4 2f       	mov	r27, r20
     558:	a5 2f       	mov	r26, r21
     55a:	f6 2f       	mov	r31, r22
     55c:	f7 2e       	mov	r15, r23
     55e:	08 2f       	mov	r16, r24
     560:	19 2f       	mov	r17, r25
     562:	2d 2f       	mov	r18, r29
     564:	3c 2f       	mov	r19, r28
     566:	4b 2f       	mov	r20, r27
     568:	5a 2f       	mov	r21, r26
     56a:	6f 2f       	mov	r22, r31
     56c:	7f 2d       	mov	r23, r15
     56e:	80 2f       	mov	r24, r16
     570:	91 2f       	mov	r25, r17
     572:	2f 3b       	cpi	r18, 0xBF	; 191
     574:	37 42       	sbci	r19, 0x27	; 39
     576:	49 40       	sbci	r20, 0x09	; 9
     578:	51 05       	cpc	r21, r1
     57a:	61 05       	cpc	r22, r1
     57c:	71 05       	cpc	r23, r1
     57e:	81 05       	cpc	r24, r1
     580:	91 05       	cpc	r25, r1
     582:	a9 f2       	breq	.-86     	; 0x52e <GetPulseWidth_2+0xb8>
     584:	a0 f2       	brcs	.-88     	; 0x52e <GetPulseWidth_2+0xb8>
     586:	2d 2f       	mov	r18, r29
     588:	3c 2f       	mov	r19, r28
     58a:	4b 2f       	mov	r20, r27
     58c:	5a 2f       	mov	r21, r26
     58e:	6f 2f       	mov	r22, r31
     590:	7f 2d       	mov	r23, r15
     592:	80 2f       	mov	r24, r16
     594:	91 2f       	mov	r25, r17
     596:	20 3c       	cpi	r18, 0xC0	; 192
     598:	37 42       	sbci	r19, 0x27	; 39
     59a:	49 40       	sbci	r20, 0x09	; 9
     59c:	51 05       	cpc	r21, r1
     59e:	61 05       	cpc	r22, r1
     5a0:	71 05       	cpc	r23, r1
     5a2:	81 05       	cpc	r24, r1
     5a4:	91 05       	cpc	r25, r1
     5a6:	19 f1       	breq	.+70     	; 0x5ee <GetPulseWidth_2+0x178>
     5a8:	8c b4       	in	r8, 0x2c	; 44
     5aa:	9d b4       	in	r9, 0x2d	; 45
     5ac:	1e bc       	out	0x2e, r1	; 46
     5ae:	28 2d       	mov	r18, r8
     5b0:	39 2d       	mov	r19, r9
     5b2:	40 e0       	ldi	r20, 0x00	; 0
     5b4:	50 e0       	ldi	r21, 0x00	; 0
     5b6:	60 e0       	ldi	r22, 0x00	; 0
     5b8:	70 e0       	ldi	r23, 0x00	; 0
     5ba:	80 e0       	ldi	r24, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	20 36       	cpi	r18, 0x60	; 96
     5c0:	ea ee       	ldi	r30, 0xEA	; 234
     5c2:	3e 07       	cpc	r19, r30
     5c4:	41 05       	cpc	r20, r1
     5c6:	51 05       	cpc	r21, r1
     5c8:	61 05       	cpc	r22, r1
     5ca:	71 05       	cpc	r23, r1
     5cc:	81 05       	cpc	r24, r1
     5ce:	91 05       	cpc	r25, r1
     5d0:	09 f0       	breq	.+2      	; 0x5d4 <GetPulseWidth_2+0x15e>
     5d2:	90 f4       	brcc	.+36     	; 0x5f8 <GetPulseWidth_2+0x182>
     5d4:	01 e0       	ldi	r16, 0x01	; 1
     5d6:	0e 94 33 0b 	call	0x1666	; 0x1666 <__lshrdi3>
     5da:	62 2f       	mov	r22, r18
     5dc:	73 2f       	mov	r23, r19
     5de:	84 2f       	mov	r24, r20
     5e0:	95 2f       	mov	r25, r21
     5e2:	0e c0       	rjmp	.+28     	; 0x600 <GetPulseWidth_2+0x18a>
     5e4:	6f ef       	ldi	r22, 0xFF	; 255
     5e6:	7f ef       	ldi	r23, 0xFF	; 255
     5e8:	8f ef       	ldi	r24, 0xFF	; 255
     5ea:	9f ef       	ldi	r25, 0xFF	; 255
     5ec:	09 c0       	rjmp	.+18     	; 0x600 <GetPulseWidth_2+0x18a>
     5ee:	6e ef       	ldi	r22, 0xFE	; 254
     5f0:	7f ef       	ldi	r23, 0xFF	; 255
     5f2:	8f ef       	ldi	r24, 0xFF	; 255
     5f4:	9f ef       	ldi	r25, 0xFF	; 255
     5f6:	04 c0       	rjmp	.+8      	; 0x600 <GetPulseWidth_2+0x18a>
     5f8:	6e ef       	ldi	r22, 0xFE	; 254
     5fa:	7f ef       	ldi	r23, 0xFF	; 255
     5fc:	8f ef       	ldi	r24, 0xFF	; 255
     5fe:	9f ef       	ldi	r25, 0xFF	; 255
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	1f 91       	pop	r17
     606:	0f 91       	pop	r16
     608:	ff 90       	pop	r15
     60a:	ef 90       	pop	r14
     60c:	df 90       	pop	r13
     60e:	cf 90       	pop	r12
     610:	bf 90       	pop	r11
     612:	af 90       	pop	r10
     614:	9f 90       	pop	r9
     616:	8f 90       	pop	r8
     618:	08 95       	ret

0000061a <Request>:
     61a:	84 b3       	in	r24, 0x14	; 20
     61c:	88 60       	ori	r24, 0x08	; 8
     61e:	84 bb       	out	0x14, r24	; 20
     620:	85 b3       	in	r24, 0x15	; 21
     622:	87 7f       	andi	r24, 0xF7	; 247
     624:	85 bb       	out	0x15, r24	; 21
     626:	87 e8       	ldi	r24, 0x87	; 135
     628:	93 e1       	ldi	r25, 0x13	; 19
     62a:	01 97       	sbiw	r24, 0x01	; 1
     62c:	f1 f7       	brne	.-4      	; 0x62a <Request+0x10>
     62e:	00 c0       	rjmp	.+0      	; 0x630 <Request+0x16>
     630:	00 00       	nop
     632:	85 b3       	in	r24, 0x15	; 21
     634:	88 60       	ori	r24, 0x08	; 8
     636:	85 bb       	out	0x15, r24	; 21
     638:	08 95       	ret

0000063a <Response>:
     63a:	84 b3       	in	r24, 0x14	; 20
     63c:	87 7f       	andi	r24, 0xF7	; 247
     63e:	84 bb       	out	0x14, r24	; 20
     640:	9b 99       	sbic	0x13, 3	; 19
     642:	fe cf       	rjmp	.-4      	; 0x640 <Response+0x6>
     644:	9b 9b       	sbis	0x13, 3	; 19
     646:	fe cf       	rjmp	.-4      	; 0x644 <Response+0xa>
     648:	9b 99       	sbic	0x13, 3	; 19
     64a:	fe cf       	rjmp	.-4      	; 0x648 <Response+0xe>
     64c:	08 95       	ret

0000064e <Receive_data>:
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	19 c0       	rjmp	.+50     	; 0x686 <Receive_data+0x38>
     654:	9b 9b       	sbis	0x13, 3	; 19
     656:	fe cf       	rjmp	.-4      	; 0x654 <Receive_data+0x6>
     658:	8a e0       	ldi	r24, 0x0A	; 10
     65a:	8a 95       	dec	r24
     65c:	f1 f7       	brne	.-4      	; 0x65a <Receive_data+0xc>
     65e:	9b 9b       	sbis	0x13, 3	; 19
     660:	09 c0       	rjmp	.+18     	; 0x674 <Receive_data+0x26>
     662:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <__data_end>
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	88 0f       	add	r24, r24
     66a:	99 1f       	adc	r25, r25
     66c:	81 60       	ori	r24, 0x01	; 1
     66e:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <__data_end>
     672:	05 c0       	rjmp	.+10     	; 0x67e <Receive_data+0x30>
     674:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <__data_end>
     678:	88 0f       	add	r24, r24
     67a:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <__data_end>
     67e:	9b 99       	sbic	0x13, 3	; 19
     680:	fe cf       	rjmp	.-4      	; 0x67e <Receive_data+0x30>
     682:	2f 5f       	subi	r18, 0xFF	; 255
     684:	3f 4f       	sbci	r19, 0xFF	; 255
     686:	28 30       	cpi	r18, 0x08	; 8
     688:	31 05       	cpc	r19, r1
     68a:	24 f3       	brlt	.-56     	; 0x654 <Receive_data+0x6>
     68c:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <__data_end>
     690:	08 95       	ret

00000692 <SPImstr_init>:
     692:	87 b3       	in	r24, 0x17	; 23
     694:	80 6b       	ori	r24, 0xB0	; 176
     696:	87 bb       	out	0x17, r24	; 23
     698:	87 b3       	in	r24, 0x17	; 23
     69a:	8f 7b       	andi	r24, 0xBF	; 191
     69c:	87 bb       	out	0x17, r24	; 23
     69e:	88 b3       	in	r24, 0x18	; 24
     6a0:	80 61       	ori	r24, 0x10	; 16
     6a2:	88 bb       	out	0x18, r24	; 24
     6a4:	81 e5       	ldi	r24, 0x51	; 81
     6a6:	8d b9       	out	0x0d, r24	; 13
     6a8:	8e b1       	in	r24, 0x0e	; 14
     6aa:	8e 7f       	andi	r24, 0xFE	; 254
     6ac:	8e b9       	out	0x0e, r24	; 14
     6ae:	08 95       	ret

000006b0 <SPI_write>:
     6b0:	8f b9       	out	0x0f, r24	; 15
     6b2:	77 9b       	sbis	0x0e, 7	; 14
     6b4:	fe cf       	rjmp	.-4      	; 0x6b2 <SPI_write+0x2>
     6b6:	8f b1       	in	r24, 0x0f	; 15
     6b8:	08 95       	ret

000006ba <displayKey>:




int displayKey()
{
     6ba:	4f 92       	push	r4
     6bc:	5f 92       	push	r5
     6be:	6f 92       	push	r6
     6c0:	7f 92       	push	r7
     6c2:	8f 92       	push	r8
     6c4:	9f 92       	push	r9
     6c6:	af 92       	push	r10
     6c8:	bf 92       	push	r11
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	cd b7       	in	r28, 0x3d	; 61
     6dc:	de b7       	in	r29, 0x3e	; 62
     6de:	64 97       	sbiw	r28, 0x14	; 20
     6e0:	0f b6       	in	r0, 0x3f	; 63
     6e2:	f8 94       	cli
     6e4:	de bf       	out	0x3e, r29	; 62
     6e6:	0f be       	out	0x3f, r0	; 63
     6e8:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     6ea:	00 e0       	ldi	r16, 0x00	; 0
     6ec:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     6ee:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     6f2:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
		lcddata(key);
     6f6:	0e 94 b7 00 	call	0x16e	; 0x16e <lcddata>
		if(key == '#') break;
     6fa:	80 91 b3 01 	lds	r24, 0x01B3	; 0x8001b3 <key>
     6fe:	83 32       	cpi	r24, 0x23	; 35
     700:	c9 f0       	breq	.+50     	; 0x734 <displayKey+0x7a>
		tmpNum = charToInt(key);
     702:	0e 94 e5 00 	call	0x1ca	; 0x1ca <charToInt>
		data[i] = tmpNum;
     706:	f8 01       	movw	r30, r16
     708:	ee 0f       	add	r30, r30
     70a:	ff 1f       	adc	r31, r31
     70c:	21 e0       	ldi	r18, 0x01	; 1
     70e:	30 e0       	ldi	r19, 0x00	; 0
     710:	2c 0f       	add	r18, r28
     712:	3d 1f       	adc	r19, r29
     714:	e2 0f       	add	r30, r18
     716:	f3 1f       	adc	r31, r19
     718:	91 83       	std	Z+1, r25	; 0x01
     71a:	80 83       	st	Z, r24
		i++;
     71c:	0f 5f       	subi	r16, 0xFF	; 255
     71e:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     720:	3f e5       	ldi	r19, 0x5F	; 95
     722:	8a ee       	ldi	r24, 0xEA	; 234
     724:	90 e0       	ldi	r25, 0x00	; 0
     726:	31 50       	subi	r19, 0x01	; 1
     728:	80 40       	sbci	r24, 0x00	; 0
     72a:	90 40       	sbci	r25, 0x00	; 0
     72c:	e1 f7       	brne	.-8      	; 0x726 <displayKey+0x6c>
     72e:	00 c0       	rjmp	.+0      	; 0x730 <displayKey+0x76>
     730:	00 00       	nop
     732:	dd cf       	rjmp	.-70     	; 0x6ee <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     734:	58 01       	movw	r10, r16
     736:	21 e0       	ldi	r18, 0x01	; 1
     738:	a2 1a       	sub	r10, r18
     73a:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     73c:	e1 2c       	mov	r14, r1
     73e:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     740:	81 2c       	mov	r8, r1
     742:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     744:	3b c0       	rjmp	.+118    	; 0x7bc <displayKey+0x102>
		num += data[j]*pow(10,k);
     746:	f7 01       	movw	r30, r14
     748:	ee 0f       	add	r30, r30
     74a:	ff 1f       	adc	r31, r31
     74c:	81 e0       	ldi	r24, 0x01	; 1
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	8c 0f       	add	r24, r28
     752:	9d 1f       	adc	r25, r29
     754:	e8 0f       	add	r30, r24
     756:	f9 1f       	adc	r31, r25
     758:	c0 80       	ld	r12, Z
     75a:	d1 80       	ldd	r13, Z+1	; 0x01
     75c:	b5 01       	movw	r22, r10
     75e:	0b 2c       	mov	r0, r11
     760:	00 0c       	add	r0, r0
     762:	88 0b       	sbc	r24, r24
     764:	99 0b       	sbc	r25, r25
     766:	0e 94 41 08 	call	0x1082	; 0x1082 <__floatsisf>
     76a:	9b 01       	movw	r18, r22
     76c:	ac 01       	movw	r20, r24
     76e:	60 e0       	ldi	r22, 0x00	; 0
     770:	70 e0       	ldi	r23, 0x00	; 0
     772:	80 e2       	ldi	r24, 0x20	; 32
     774:	91 e4       	ldi	r25, 0x41	; 65
     776:	0e 94 3a 09 	call	0x1274	; 0x1274 <pow>
     77a:	2b 01       	movw	r4, r22
     77c:	3c 01       	movw	r6, r24
     77e:	b6 01       	movw	r22, r12
     780:	dd 0c       	add	r13, r13
     782:	88 0b       	sbc	r24, r24
     784:	99 0b       	sbc	r25, r25
     786:	0e 94 41 08 	call	0x1082	; 0x1082 <__floatsisf>
     78a:	a3 01       	movw	r20, r6
     78c:	92 01       	movw	r18, r4
     78e:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
     792:	2b 01       	movw	r4, r22
     794:	3c 01       	movw	r6, r24
     796:	b4 01       	movw	r22, r8
     798:	99 0c       	add	r9, r9
     79a:	88 0b       	sbc	r24, r24
     79c:	99 0b       	sbc	r25, r25
     79e:	0e 94 41 08 	call	0x1082	; 0x1082 <__floatsisf>
     7a2:	a3 01       	movw	r20, r6
     7a4:	92 01       	movw	r18, r4
     7a6:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__addsf3>
     7aa:	0e 94 09 08 	call	0x1012	; 0x1012 <__fixsfsi>
     7ae:	4b 01       	movw	r8, r22
		k--;
     7b0:	91 e0       	ldi	r25, 0x01	; 1
     7b2:	a9 1a       	sub	r10, r25
     7b4:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     7b6:	2f ef       	ldi	r18, 0xFF	; 255
     7b8:	e2 1a       	sub	r14, r18
     7ba:	f2 0a       	sbc	r15, r18
     7bc:	e0 16       	cp	r14, r16
     7be:	f1 06       	cpc	r15, r17
     7c0:	14 f2       	brlt	.-124    	; 0x746 <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     7c2:	81 e0       	ldi	r24, 0x01	; 1
     7c4:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
	
	return num;
}
     7c8:	c4 01       	movw	r24, r8
     7ca:	64 96       	adiw	r28, 0x14	; 20
     7cc:	0f b6       	in	r0, 0x3f	; 63
     7ce:	f8 94       	cli
     7d0:	de bf       	out	0x3e, r29	; 62
     7d2:	0f be       	out	0x3f, r0	; 63
     7d4:	cd bf       	out	0x3d, r28	; 61
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	df 90       	pop	r13
     7e4:	cf 90       	pop	r12
     7e6:	bf 90       	pop	r11
     7e8:	af 90       	pop	r10
     7ea:	9f 90       	pop	r9
     7ec:	8f 90       	pop	r8
     7ee:	7f 90       	pop	r7
     7f0:	6f 90       	pop	r6
     7f2:	5f 90       	pop	r5
     7f4:	4f 90       	pop	r4
     7f6:	08 95       	ret

000007f8 <waterPerPlant>:
int waterPerPlant(){
	lcd_clear();
     7f8:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     7fc:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER WATER ",11);
     800:	6b e0       	ldi	r22, 0x0B	; 11
     802:	80 e6       	ldi	r24, 0x60	; 96
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     80a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("AMOUNT(ml):",11);
     80e:	6b e0       	ldi	r22, 0x0B	; 11
     810:	8d e6       	ldi	r24, 0x6D	; 109
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     818:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     81c:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int wtrPerPlant = displayKey();
     820:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return wtrPerPlant;
}
     824:	08 95       	ret

00000826 <fertilizePerPlant>:

int fertilizePerPlant(){
	lcd_clear();
     826:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     82a:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER FERTILIZER",16);
     82e:	60 e1       	ldi	r22, 0x10	; 16
     830:	89 e7       	ldi	r24, 0x79	; 121
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     838:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("AMOUNT(ml):",11);
     83c:	6b e0       	ldi	r22, 0x0B	; 11
     83e:	8d e6       	ldi	r24, 0x6D	; 109
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     846:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     84a:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int fertilizePerPlant = displayKey();
     84e:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return fertilizePerPlant;
}
     852:	08 95       	ret

00000854 <humidityMin>:

int humidityMin(){
	lcd_clear();
     854:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     858:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER HUMIDITY",16);
     85c:	60 e1       	ldi	r22, 0x10	; 16
     85e:	8a e8       	ldi	r24, 0x8A	; 138
     860:	90 e0       	ldi	r25, 0x00	; 0
     862:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     866:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("MIN(%RH):",9);
     86a:	69 e0       	ldi	r22, 0x09	; 9
     86c:	89 e9       	ldi	r24, 0x99	; 153
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     874:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     878:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int humidityMin = displayKey();
     87c:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return humidityMin;
}
     880:	08 95       	ret

00000882 <humidityMax>:

int humidityMax(){
	lcd_clear();
     882:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     886:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER HUMIDITY",16);
     88a:	60 e1       	ldi	r22, 0x10	; 16
     88c:	8a e8       	ldi	r24, 0x8A	; 138
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     894:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("MAX(%RH):",9);
     898:	69 e0       	ldi	r22, 0x09	; 9
     89a:	83 ea       	ldi	r24, 0xA3	; 163
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     8a2:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     8a6:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int humidityMax = displayKey();
     8aa:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return humidityMax;
}
     8ae:	08 95       	ret

000008b0 <tempMin>:

int tempMin(){
	lcd_clear();
     8b0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     8b4:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER TEMPARAT.",15);
     8b8:	6f e0       	ldi	r22, 0x0F	; 15
     8ba:	8d ea       	ldi	r24, 0xAD	; 173
     8bc:	90 e0       	ldi	r25, 0x00	; 0
     8be:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     8c2:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("MIN(C):",7);
     8c6:	67 e0       	ldi	r22, 0x07	; 7
     8c8:	8d eb       	ldi	r24, 0xBD	; 189
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     8d0:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     8d4:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int tempMin = displayKey();
     8d8:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return tempMin;
}
     8dc:	08 95       	ret

000008de <tempMax>:

int tempMax(){
	lcd_clear();
     8de:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     8e2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER TEMPARAT.",15);
     8e6:	6f e0       	ldi	r22, 0x0F	; 15
     8e8:	8d ea       	ldi	r24, 0xAD	; 173
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     8f0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("MAX(C):",7);
     8f4:	67 e0       	ldi	r22, 0x07	; 7
     8f6:	85 ec       	ldi	r24, 0xC5	; 197
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     8fe:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     902:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int tempMax = displayKey();
     906:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	return tempMax;
     90a:	08 95       	ret

0000090c <get_plantcount>:


void get_plantcount(){
     90c:	0f 93       	push	r16
     90e:	1f 93       	push	r17
     910:	cf 93       	push	r28
     912:	df 93       	push	r29
     914:	cd b7       	in	r28, 0x3d	; 61
     916:	de b7       	in	r29, 0x3e	; 62
     918:	2a 97       	sbiw	r28, 0x0a	; 10
     91a:	0f b6       	in	r0, 0x3f	; 63
     91c:	f8 94       	cli
     91e:	de bf       	out	0x3e, r29	; 62
     920:	0f be       	out	0x3f, r0	; 63
     922:	cd bf       	out	0x3d, r28	; 61
	lcd_clear();
     924:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     928:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER PLANT",11);
     92c:	6b e0       	ldi	r22, 0x0B	; 11
     92e:	8d ec       	ldi	r24, 0xCD	; 205
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     936:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("COUNT: ",7);
     93a:	67 e0       	ldi	r22, 0x07	; 7
     93c:	89 ed       	ldi	r24, 0xD9	; 217
     93e:	90 e0       	ldi	r25, 0x00	; 0
     940:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	key = scankey();
     944:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     948:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
	//if(key == '*') break;
	int plantCount = displayKey();
     94c:	0e 94 5d 03 	call	0x6ba	; 0x6ba <displayKey>
	
	char text[10];
	sprintf(text, "%d", plantCount);
     950:	9f 93       	push	r25
     952:	8f 93       	push	r24
     954:	81 ee       	ldi	r24, 0xE1	; 225
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	9f 93       	push	r25
     95a:	8f 93       	push	r24
     95c:	8e 01       	movw	r16, r28
     95e:	0f 5f       	subi	r16, 0xFF	; 255
     960:	1f 4f       	sbci	r17, 0xFF	; 255
     962:	1f 93       	push	r17
     964:	0f 93       	push	r16
     966:	0e 94 80 0b 	call	0x1700	; 0x1700 <sprintf>
	
	lcdcmd(0x01);
     96a:	81 e0       	ldi	r24, 0x01	; 1
     96c:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
	lcd_string("PLANT COUNT IS",15);
     970:	6f e0       	ldi	r22, 0x0F	; 15
     972:	84 ee       	ldi	r24, 0xE4	; 228
     974:	90 e0       	ldi	r25, 0x00	; 0
     976:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcdcmd(0xC0);
     97a:	80 ec       	ldi	r24, 0xC0	; 192
     97c:	0e 94 8a 00 	call	0x114	; 0x114 <lcdcmd>
	lcd_string(text,10);
     980:	6a e0       	ldi	r22, 0x0A	; 10
     982:	c8 01       	movw	r24, r16
     984:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     988:	2f e3       	ldi	r18, 0x3F	; 63
     98a:	8d e0       	ldi	r24, 0x0D	; 13
     98c:	93 e0       	ldi	r25, 0x03	; 3
     98e:	21 50       	subi	r18, 0x01	; 1
     990:	80 40       	sbci	r24, 0x00	; 0
     992:	90 40       	sbci	r25, 0x00	; 0
     994:	e1 f7       	brne	.-8      	; 0x98e <get_plantcount+0x82>
     996:	00 c0       	rjmp	.+0      	; 0x998 <get_plantcount+0x8c>
     998:	00 00       	nop
	_delay_ms(1000);
}
     99a:	0f 90       	pop	r0
     99c:	0f 90       	pop	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	0f 90       	pop	r0
     9a6:	2a 96       	adiw	r28, 0x0a	; 10
     9a8:	0f b6       	in	r0, 0x3f	; 63
     9aa:	f8 94       	cli
     9ac:	de bf       	out	0x3e, r29	; 62
     9ae:	0f be       	out	0x3f, r0	; 63
     9b0:	cd bf       	out	0x3d, r28	; 61
     9b2:	df 91       	pop	r29
     9b4:	cf 91       	pop	r28
     9b6:	1f 91       	pop	r17
     9b8:	0f 91       	pop	r16
     9ba:	08 95       	ret

000009bc <water_level>:

void water_level(){
     9bc:	cf 93       	push	r28
     9be:	df 93       	push	r29
     9c0:	00 d0       	rcall	.+0      	; 0x9c2 <water_level+0x6>
     9c2:	00 d0       	rcall	.+0      	; 0x9c4 <water_level+0x8>
     9c4:	cd b7       	in	r28, 0x3d	; 61
     9c6:	de b7       	in	r29, 0x3e	; 62
     9c8:	87 ea       	ldi	r24, 0xA7	; 167
     9ca:	91 e6       	ldi	r25, 0x61	; 97
     9cc:	01 97       	sbiw	r24, 0x01	; 1
     9ce:	f1 f7       	brne	.-4      	; 0x9cc <water_level+0x10>
     9d0:	00 c0       	rjmp	.+0      	; 0x9d2 <water_level+0x16>
     9d2:	00 00       	nop
		
		uint16_t r;
		
		_delay_ms(100);

		lcd_clear();
     9d4:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
		
		
		HCSR04Init();
     9d8:	0e 94 4d 01 	call	0x29a	; 0x29a <HCSR04Init>

		while(1)
		{
			HCSR04Trigger();
     9dc:	0e 94 51 01 	call	0x2a2	; 0x2a2 <HCSR04Trigger>
			r=GetPulseWidth();
     9e0:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <GetPulseWidth>
			if(r==US_ERROR)
     9e4:	6f 3f       	cpi	r22, 0xFF	; 255
     9e6:	2f ef       	ldi	r18, 0xFF	; 255
     9e8:	72 07       	cpc	r23, r18
     9ea:	89 f4       	brne	.+34     	; 0xa0e <water_level+0x52>
			{
				lcd_clear();
     9ec:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
				lcd_string("E!",2);
     9f0:	62 e0       	ldi	r22, 0x02	; 2
     9f2:	83 ef       	ldi	r24, 0xF3	; 243
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     9fa:	8f e3       	ldi	r24, 0x3F	; 63
     9fc:	9d e0       	ldi	r25, 0x0D	; 13
     9fe:	23 e0       	ldi	r18, 0x03	; 3
     a00:	81 50       	subi	r24, 0x01	; 1
     a02:	90 40       	sbci	r25, 0x00	; 0
     a04:	20 40       	sbci	r18, 0x00	; 0
     a06:	e1 f7       	brne	.-8      	; 0xa00 <water_level+0x44>
     a08:	00 c0       	rjmp	.+0      	; 0xa0a <water_level+0x4e>
     a0a:	00 00       	nop
     a0c:	79 c0       	rjmp	.+242    	; 0xb00 <water_level+0x144>
				
			}
			else
			{
				
				distance=50-(r*0.034/2.0);
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatunsisf>
     a16:	26 e9       	ldi	r18, 0x96	; 150
     a18:	33 e4       	ldi	r19, 0x43	; 67
     a1a:	4b e0       	ldi	r20, 0x0B	; 11
     a1c:	5d e3       	ldi	r21, 0x3D	; 61
     a1e:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
     a22:	20 e0       	ldi	r18, 0x00	; 0
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	40 e0       	ldi	r20, 0x00	; 0
     a28:	5f e3       	ldi	r21, 0x3F	; 63
     a2a:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
     a2e:	9b 01       	movw	r18, r22
     a30:	ac 01       	movw	r20, r24
     a32:	60 e0       	ldi	r22, 0x00	; 0
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	88 e4       	ldi	r24, 0x48	; 72
     a38:	92 e4       	ldi	r25, 0x42	; 66
     a3a:	0e 94 9c 07 	call	0xf38	; 0xf38 <__subsf3>
     a3e:	0e 94 09 08 	call	0x1012	; 0x1012 <__fixsfsi>
     a42:	70 93 b2 01 	sts	0x01B2, r23	; 0x8001b2 <distance+0x1>
     a46:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <distance>
				
				
				
				if (distance != previous_distance)
     a4a:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <previous_distance>
     a4e:	30 91 b0 01 	lds	r19, 0x01B0	; 0x8001b0 <previous_distance+0x1>
     a52:	26 17       	cp	r18, r22
     a54:	37 07       	cpc	r19, r23
     a56:	11 f0       	breq	.+4      	; 0xa5c <water_level+0xa0>
				{
					lcd_clear();
     a58:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
				}
				
				
				
				lcd_line_one();
     a5c:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
				lcd_string("WATER LV =",11);
     a60:	6b e0       	ldi	r22, 0x0B	; 11
     a62:	86 ef       	ldi	r24, 0xF6	; 246
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     a6a:	4a e0       	ldi	r20, 0x0A	; 10
     a6c:	be 01       	movw	r22, r28
     a6e:	6f 5f       	subi	r22, 0xFF	; 255
     a70:	7f 4f       	sbci	r23, 0xFF	; 255
     a72:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     a76:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     a7a:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
				
				itoa(distance, numberString, 10);
				lcd_string(numberString,3);
     a7e:	63 e0       	ldi	r22, 0x03	; 3
     a80:	ce 01       	movw	r24, r28
     a82:	01 96       	adiw	r24, 0x01	; 1
     a84:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>

				lcd_string("cm",2);
     a88:	62 e0       	ldi	r22, 0x02	; 2
     a8a:	81 e0       	ldi	r24, 0x01	; 1
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
				
				
				previous_distance = distance;
     a92:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     a96:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     a9a:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <previous_distance+0x1>
     a9e:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <previous_distance>
     aa2:	8b e4       	ldi	r24, 0x4B	; 75
     aa4:	9d e1       	ldi	r25, 0x1D	; 29
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	f1 f7       	brne	.-4      	; 0xaa6 <water_level+0xea>
     aaa:	00 c0       	rjmp	.+0      	; 0xaac <water_level+0xf0>
     aac:	00 00       	nop
				_delay_ms(30);
				
				if(distance<10)
     aae:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     ab2:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     ab6:	8a 30       	cpi	r24, 0x0A	; 10
     ab8:	91 05       	cpc	r25, r1
     aba:	a4 f4       	brge	.+40     	; 0xae4 <water_level+0x128>
				{
					lcd_line_two();
     abc:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
					lcd_string("WATER LOW!!!",13);
     ac0:	6d e0       	ldi	r22, 0x0D	; 13
     ac2:	84 e0       	ldi	r24, 0x04	; 4
     ac4:	91 e0       	ldi	r25, 0x01	; 1
     ac6:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     aca:	9f e9       	ldi	r25, 0x9F	; 159
     acc:	26 e8       	ldi	r18, 0x86	; 134
     ace:	81 e0       	ldi	r24, 0x01	; 1
     ad0:	91 50       	subi	r25, 0x01	; 1
     ad2:	20 40       	sbci	r18, 0x00	; 0
     ad4:	80 40       	sbci	r24, 0x00	; 0
     ad6:	e1 f7       	brne	.-8      	; 0xad0 <water_level+0x114>
     ad8:	00 c0       	rjmp	.+0      	; 0xada <water_level+0x11e>
     ada:	00 00       	nop
					_delay_ms(500);
					SPI_write(spiSignal);
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	0e 94 58 03 	call	0x6b0	; 0x6b0 <SPI_write>
					break;
     ae2:	0e c0       	rjmp	.+28     	; 0xb00 <water_level+0x144>

					// PORTA=(1<<PINA0);
					
				}
				if(distance>=10)
     ae4:	0a 97       	sbiw	r24, 0x0a	; 10
     ae6:	44 f0       	brlt	.+16     	; 0xaf8 <water_level+0x13c>
				{
					lcd_line_two();
     ae8:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
					lcd_string("ENOUGH WATER",12);
     aec:	6c e0       	ldi	r22, 0x0C	; 12
     aee:	81 e1       	ldi	r24, 0x11	; 17
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
					break;
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <water_level+0x144>
					// PORTA=(0<<PINA0);
					
				}
				key = scankey();
     af8:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     afc:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
			break;
		}
		
		break;
	}
}
     b00:	0f 90       	pop	r0
     b02:	0f 90       	pop	r0
     b04:	0f 90       	pop	r0
     b06:	0f 90       	pop	r0
     b08:	df 91       	pop	r29
     b0a:	cf 91       	pop	r28
     b0c:	08 95       	ret

00000b0e <nt_level>:


void nt_level(){
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	00 d0       	rcall	.+0      	; 0xb14 <nt_level+0x6>
     b14:	00 d0       	rcall	.+0      	; 0xb16 <nt_level+0x8>
     b16:	cd b7       	in	r28, 0x3d	; 61
     b18:	de b7       	in	r29, 0x3e	; 62
     b1a:	87 ea       	ldi	r24, 0xA7	; 167
     b1c:	91 e6       	ldi	r25, 0x61	; 97
     b1e:	01 97       	sbiw	r24, 0x01	; 1
     b20:	f1 f7       	brne	.-4      	; 0xb1e <nt_level+0x10>
     b22:	00 c0       	rjmp	.+0      	; 0xb24 <nt_level+0x16>
     b24:	00 00       	nop
		
		uint16_t r;
		
		_delay_ms(100);

		lcd_clear();
     b26:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
		
		
		HCSR04Init_2();
     b2a:	0e 94 2d 02 	call	0x45a	; 0x45a <HCSR04Init_2>

		while(1)
		{
			HCSR04Trigger_2();
     b2e:	0e 94 31 02 	call	0x462	; 0x462 <HCSR04Trigger_2>
			r=GetPulseWidth_2();
     b32:	0e 94 3b 02 	call	0x476	; 0x476 <GetPulseWidth_2>
			if(r==US_ERROR)
     b36:	6f 3f       	cpi	r22, 0xFF	; 255
     b38:	2f ef       	ldi	r18, 0xFF	; 255
     b3a:	72 07       	cpc	r23, r18
     b3c:	89 f4       	brne	.+34     	; 0xb60 <nt_level+0x52>
			{
				lcd_clear();
     b3e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
				lcd_string("E!",2);
     b42:	62 e0       	ldi	r22, 0x02	; 2
     b44:	83 ef       	ldi	r24, 0xF3	; 243
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     b4c:	8f e3       	ldi	r24, 0x3F	; 63
     b4e:	9d e0       	ldi	r25, 0x0D	; 13
     b50:	23 e0       	ldi	r18, 0x03	; 3
     b52:	81 50       	subi	r24, 0x01	; 1
     b54:	90 40       	sbci	r25, 0x00	; 0
     b56:	20 40       	sbci	r18, 0x00	; 0
     b58:	e1 f7       	brne	.-8      	; 0xb52 <nt_level+0x44>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <nt_level+0x4e>
     b5c:	00 00       	nop
     b5e:	79 c0       	rjmp	.+242    	; 0xc52 <nt_level+0x144>
				
			}
			else
			{
				
				distance=50-(r*0.034/2.0);
     b60:	80 e0       	ldi	r24, 0x00	; 0
     b62:	90 e0       	ldi	r25, 0x00	; 0
     b64:	0e 94 3f 08 	call	0x107e	; 0x107e <__floatunsisf>
     b68:	26 e9       	ldi	r18, 0x96	; 150
     b6a:	33 e4       	ldi	r19, 0x43	; 67
     b6c:	4b e0       	ldi	r20, 0x0B	; 11
     b6e:	5d e3       	ldi	r21, 0x3D	; 61
     b70:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
     b74:	20 e0       	ldi	r18, 0x00	; 0
     b76:	30 e0       	ldi	r19, 0x00	; 0
     b78:	40 e0       	ldi	r20, 0x00	; 0
     b7a:	5f e3       	ldi	r21, 0x3F	; 63
     b7c:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
     b80:	9b 01       	movw	r18, r22
     b82:	ac 01       	movw	r20, r24
     b84:	60 e0       	ldi	r22, 0x00	; 0
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	88 e4       	ldi	r24, 0x48	; 72
     b8a:	92 e4       	ldi	r25, 0x42	; 66
     b8c:	0e 94 9c 07 	call	0xf38	; 0xf38 <__subsf3>
     b90:	0e 94 09 08 	call	0x1012	; 0x1012 <__fixsfsi>
     b94:	70 93 b2 01 	sts	0x01B2, r23	; 0x8001b2 <distance+0x1>
     b98:	60 93 b1 01 	sts	0x01B1, r22	; 0x8001b1 <distance>
				
				
				
				if (distance != previous_distance)
     b9c:	20 91 af 01 	lds	r18, 0x01AF	; 0x8001af <previous_distance>
     ba0:	30 91 b0 01 	lds	r19, 0x01B0	; 0x8001b0 <previous_distance+0x1>
     ba4:	26 17       	cp	r18, r22
     ba6:	37 07       	cpc	r19, r23
     ba8:	11 f0       	breq	.+4      	; 0xbae <nt_level+0xa0>
				{
					lcd_clear();
     baa:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
				}
				
				
				
				lcd_line_one();
     bae:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
				lcd_string("NT LV =",8);
     bb2:	68 e0       	ldi	r22, 0x08	; 8
     bb4:	8e e1       	ldi	r24, 0x1E	; 30
     bb6:	91 e0       	ldi	r25, 0x01	; 1
     bb8:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     bbc:	4a e0       	ldi	r20, 0x0A	; 10
     bbe:	be 01       	movw	r22, r28
     bc0:	6f 5f       	subi	r22, 0xFF	; 255
     bc2:	7f 4f       	sbci	r23, 0xFF	; 255
     bc4:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     bc8:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     bcc:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
				
				itoa(distance, numberString, 10);
				lcd_string(numberString,3);
     bd0:	63 e0       	ldi	r22, 0x03	; 3
     bd2:	ce 01       	movw	r24, r28
     bd4:	01 96       	adiw	r24, 0x01	; 1
     bd6:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>

				lcd_string("cm",2);
     bda:	62 e0       	ldi	r22, 0x02	; 2
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	91 e0       	ldi	r25, 0x01	; 1
     be0:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
				
				
				previous_distance = distance;
     be4:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     be8:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     bec:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <previous_distance+0x1>
     bf0:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <previous_distance>
     bf4:	8b e4       	ldi	r24, 0x4B	; 75
     bf6:	9d e1       	ldi	r25, 0x1D	; 29
     bf8:	01 97       	sbiw	r24, 0x01	; 1
     bfa:	f1 f7       	brne	.-4      	; 0xbf8 <nt_level+0xea>
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <nt_level+0xf0>
     bfe:	00 00       	nop
				_delay_ms(30);
				
				if(distance<10)
     c00:	80 91 b1 01 	lds	r24, 0x01B1	; 0x8001b1 <distance>
     c04:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <distance+0x1>
     c08:	8a 30       	cpi	r24, 0x0A	; 10
     c0a:	91 05       	cpc	r25, r1
     c0c:	a4 f4       	brge	.+40     	; 0xc36 <nt_level+0x128>
				{
					lcd_line_two();
     c0e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
					lcd_string("NT LEVEL LOW!!!",15);
     c12:	6f e0       	ldi	r22, 0x0F	; 15
     c14:	86 e2       	ldi	r24, 0x26	; 38
     c16:	91 e0       	ldi	r25, 0x01	; 1
     c18:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     c1c:	9f e9       	ldi	r25, 0x9F	; 159
     c1e:	26 e8       	ldi	r18, 0x86	; 134
     c20:	81 e0       	ldi	r24, 0x01	; 1
     c22:	91 50       	subi	r25, 0x01	; 1
     c24:	20 40       	sbci	r18, 0x00	; 0
     c26:	80 40       	sbci	r24, 0x00	; 0
     c28:	e1 f7       	brne	.-8      	; 0xc22 <nt_level+0x114>
     c2a:	00 c0       	rjmp	.+0      	; 0xc2c <nt_level+0x11e>
     c2c:	00 00       	nop
					_delay_ms(500);
					SPI_write(spiSignal);
     c2e:	83 e0       	ldi	r24, 0x03	; 3
     c30:	0e 94 58 03 	call	0x6b0	; 0x6b0 <SPI_write>
					break;
     c34:	0e c0       	rjmp	.+28     	; 0xc52 <nt_level+0x144>

					// PORTA=(1<<PINA0);
					
				}
				if(distance>=10)
     c36:	0a 97       	sbiw	r24, 0x0a	; 10
     c38:	44 f0       	brlt	.+16     	; 0xc4a <nt_level+0x13c>
				{
					lcd_line_two();
     c3a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
					lcd_string("ENOUGH NT LEVEL",16);
     c3e:	60 e1       	ldi	r22, 0x10	; 16
     c40:	86 e3       	ldi	r24, 0x36	; 54
     c42:	91 e0       	ldi	r25, 0x01	; 1
     c44:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
					break;
     c48:	04 c0       	rjmp	.+8      	; 0xc52 <nt_level+0x144>
					// PORTA=(0<<PINA0);
					
				}
				key = scankey();
     c4a:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>
     c4e:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <key>
			break;
		}
		
		break;
	}
}
     c52:	0f 90       	pop	r0
     c54:	0f 90       	pop	r0
     c56:	0f 90       	pop	r0
     c58:	0f 90       	pop	r0
     c5a:	df 91       	pop	r29
     c5c:	cf 91       	pop	r28
     c5e:	08 95       	ret

00000c60 <dht11_output>:

void dht11_output(int humMin, int humMax, int temprtMin, int temprtMax){
     c60:	cf 92       	push	r12
     c62:	df 92       	push	r13
     c64:	ef 92       	push	r14
     c66:	ff 92       	push	r15
     c68:	0f 93       	push	r16
     c6a:	1f 93       	push	r17
     c6c:	cf 93       	push	r28
     c6e:	df 93       	push	r29
     c70:	00 d0       	rcall	.+0      	; 0xc72 <dht11_output+0x12>
     c72:	00 d0       	rcall	.+0      	; 0xc74 <dht11_output+0x14>
     c74:	1f 92       	push	r1
     c76:	cd b7       	in	r28, 0x3d	; 61
     c78:	de b7       	in	r29, 0x3e	; 62
     c7a:	8b 01       	movw	r16, r22
     c7c:	6a 01       	movw	r12, r20
     c7e:	79 01       	movw	r14, r18
	
	char data[5];
	DDRC=0xff;
     c80:	8f ef       	ldi	r24, 0xFF	; 255
     c82:	84 bb       	out	0x14, r24	; 20
	while(1)
	{
		lcd_clear();				/* clear LCD */
     c84:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
		lcd_line_one();		/* enter column and row position */
     c88:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
		Request();				/* send start pulse */
     c8c:	0e 94 0d 03 	call	0x61a	; 0x61a <Request>
		Response();				/* receive response */
     c90:	0e 94 1d 03 	call	0x63a	; 0x63a <Response>
		I_RH=Receive_data();	/* store first eight bit in I_RH */
     c94:	0e 94 27 03 	call	0x64e	; 0x64e <Receive_data>
     c98:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <I_RH>
		D_RH=Receive_data();	/* store next eight bit in D_RH */
     c9c:	0e 94 27 03 	call	0x64e	; 0x64e <Receive_data>
     ca0:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <D_RH>
		I_Temp=Receive_data();	/* store next eight bit in I_Temp */
     ca4:	0e 94 27 03 	call	0x64e	; 0x64e <Receive_data>
     ca8:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <I_Temp>
		D_Temp=Receive_data();	/* store next eight bit in D_Temp */
     cac:	0e 94 27 03 	call	0x64e	; 0x64e <Receive_data>
     cb0:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <D_Temp>
		CheckSum=Receive_data();/* store next eight bit in CheckSum */
     cb4:	0e 94 27 03 	call	0x64e	; 0x64e <Receive_data>
     cb8:	80 93 b5 01 	sts	0x01B5, r24	; 0x8001b5 <CheckSum>
		
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
     cbc:	e0 91 b7 01 	lds	r30, 0x01B7	; 0x8001b7 <I_RH>
     cc0:	f0 e0       	ldi	r31, 0x00	; 0
     cc2:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <D_RH>
     cc6:	9f 01       	movw	r18, r30
     cc8:	29 0f       	add	r18, r25
     cca:	31 1d       	adc	r19, r1
     ccc:	90 91 b6 01 	lds	r25, 0x01B6	; 0x8001b6 <I_Temp>
     cd0:	29 0f       	add	r18, r25
     cd2:	31 1d       	adc	r19, r1
     cd4:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <D_Temp>
     cd8:	29 0f       	add	r18, r25
     cda:	31 1d       	adc	r19, r1
     cdc:	48 2f       	mov	r20, r24
     cde:	50 e0       	ldi	r21, 0x00	; 0
     ce0:	24 17       	cp	r18, r20
     ce2:	35 07       	cpc	r19, r21
     ce4:	31 f0       	breq	.+12     	; 0xcf2 <dht11_output+0x92>
		{
			//lcd_gotoxy(0,0);
			lcd_string("Error",5);
     ce6:	65 e0       	ldi	r22, 0x05	; 5
     ce8:	86 e4       	ldi	r24, 0x46	; 70
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     cf0:	59 c0       	rjmp	.+178    	; 0xda4 <dht11_output+0x144>
     cf2:	4a e0       	ldi	r20, 0x0A	; 10
     cf4:	be 01       	movw	r22, r28
     cf6:	6f 5f       	subi	r22, 0xFF	; 255
     cf8:	7f 4f       	sbci	r23, 0xFF	; 255
     cfa:	cf 01       	movw	r24, r30
     cfc:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
		
		else
		{
			itoa(I_RH,data,10);
			//lcd_gotoxy(2,0);
			lcd_string("H=",2);
     d00:	62 e0       	ldi	r22, 0x02	; 2
     d02:	8c e4       	ldi	r24, 0x4C	; 76
     d04:	91 e0       	ldi	r25, 0x01	; 1
     d06:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcd_string(data,2);
     d0a:	62 e0       	ldi	r22, 0x02	; 2
     d0c:	ce 01       	movw	r24, r28
     d0e:	01 96       	adiw	r24, 0x01	; 1
     d10:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcd_string(".",1);
     d14:	61 e0       	ldi	r22, 0x01	; 1
     d16:	8b eb       	ldi	r24, 0xBB	; 187
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			
			itoa(D_RH,data,10);
     d1e:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <D_RH>
     d22:	4a e0       	ldi	r20, 0x0A	; 10
     d24:	be 01       	movw	r22, r28
     d26:	6f 5f       	subi	r22, 0xFF	; 255
     d28:	7f 4f       	sbci	r23, 0xFF	; 255
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
						
			lcd_string(data,2);
     d30:	62 e0       	ldi	r22, 0x02	; 2
     d32:	ce 01       	movw	r24, r28
     d34:	01 96       	adiw	r24, 0x01	; 1
     d36:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcd_string("%",1);
     d3a:	61 e0       	ldi	r22, 0x01	; 1
     d3c:	8f e4       	ldi	r24, 0x4F	; 79
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>

						
			itoa(I_Temp,data,10);
     d44:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <I_Temp>
     d48:	4a e0       	ldi	r20, 0x0A	; 10
     d4a:	be 01       	movw	r22, r28
     d4c:	6f 5f       	subi	r22, 0xFF	; 255
     d4e:	7f 4f       	sbci	r23, 0xFF	; 255
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
			//lcd_gotoxy(10,0);
			lcd_string("T=",2);
     d56:	62 e0       	ldi	r22, 0x02	; 2
     d58:	81 e5       	ldi	r24, 0x51	; 81
     d5a:	91 e0       	ldi	r25, 0x01	; 1
     d5c:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcd_string(data,2);
     d60:	62 e0       	ldi	r22, 0x02	; 2
     d62:	ce 01       	movw	r24, r28
     d64:	01 96       	adiw	r24, 0x01	; 1
     d66:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcd_string(".",1);
     d6a:	61 e0       	ldi	r22, 0x01	; 1
     d6c:	8b eb       	ldi	r24, 0xBB	; 187
     d6e:	90 e0       	ldi	r25, 0x00	; 0
     d70:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			
			itoa(D_Temp,data,10);
     d74:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <D_Temp>
     d78:	4a e0       	ldi	r20, 0x0A	; 10
     d7a:	be 01       	movw	r22, r28
     d7c:	6f 5f       	subi	r22, 0xFF	; 255
     d7e:	7f 4f       	sbci	r23, 0xFF	; 255
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 5b 0b 	call	0x16b6	; 0x16b6 <__itoa_ncheck>
			lcd_string(data,2);
     d86:	62 e0       	ldi	r22, 0x02	; 2
     d88:	ce 01       	movw	r24, r28
     d8a:	01 96       	adiw	r24, 0x01	; 1
     d8c:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			lcddata(0xDF);
     d90:	8f ed       	ldi	r24, 0xDF	; 223
     d92:	0e 94 b7 00 	call	0x16e	; 0x16e <lcddata>
			lcd_string("C ",2);
     d96:	62 e0       	ldi	r22, 0x02	; 2
     d98:	84 e5       	ldi	r24, 0x54	; 84
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
						
			lcd_line_two();
     da0:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
     da4:	2f e9       	ldi	r18, 0x9F	; 159
     da6:	86 e8       	ldi	r24, 0x86	; 134
     da8:	91 e0       	ldi	r25, 0x01	; 1
     daa:	21 50       	subi	r18, 0x01	; 1
     dac:	80 40       	sbci	r24, 0x00	; 0
     dae:	90 40       	sbci	r25, 0x00	; 0
     db0:	e1 f7       	brne	.-8      	; 0xdaa <dht11_output+0x14a>
     db2:	00 c0       	rjmp	.+0      	; 0xdb4 <dht11_output+0x154>
     db4:	00 00       	nop
			lcd_print(" ");*/
		}
		
		_delay_ms(500);
		
		if ((I_Temp + D_Temp) <= temprtMin)
     db6:	20 91 b6 01 	lds	r18, 0x01B6	; 0x8001b6 <I_Temp>
     dba:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <D_Temp>
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	82 0f       	add	r24, r18
     dc2:	91 1d       	adc	r25, r1
     dc4:	c8 16       	cp	r12, r24
     dc6:	d9 06       	cpc	r13, r25
     dc8:	2c f0       	brlt	.+10     	; 0xdd4 <dht11_output+0x174>
		{
			lcd_string("H ON  ",6);
     dca:	66 e0       	ldi	r22, 0x06	; 6
     dcc:	87 e5       	ldi	r24, 0x57	; 87
     dce:	91 e0       	ldi	r25, 0x01	; 1
     dd0:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			
			//DDRB |= (1<<0);
			
			
		}
		if ((I_Temp + D_Temp) >= temprtMax)
     dd4:	20 91 b6 01 	lds	r18, 0x01B6	; 0x8001b6 <I_Temp>
     dd8:	80 91 b8 01 	lds	r24, 0x01B8	; 0x8001b8 <D_Temp>
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	82 0f       	add	r24, r18
     de0:	91 1d       	adc	r25, r1
     de2:	8e 15       	cp	r24, r14
     de4:	9f 05       	cpc	r25, r15
     de6:	2c f0       	brlt	.+10     	; 0xdf2 <dht11_output+0x192>
		{
			
			
			//lcd_gotoxy(5,1);
			lcd_string("FA ON  ",7);
     de8:	67 e0       	ldi	r22, 0x07	; 7
     dea:	8e e5       	ldi	r24, 0x5E	; 94
     dec:	91 e0       	ldi	r25, 0x01	; 1
     dee:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
			//PORTB=(1<<PINB1);
			//PORTC=(1<<PINC0);
			//DDRB |= (1<<1);
			
	}
		if ((I_RH + D_RH ) <= humMax)
     df2:	20 91 b7 01 	lds	r18, 0x01B7	; 0x8001b7 <I_RH>
     df6:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <D_RH>
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	82 0f       	add	r24, r18
     dfe:	91 1d       	adc	r25, r1
     e00:	08 17       	cp	r16, r24
     e02:	19 07       	cpc	r17, r25
     e04:	34 f0       	brlt	.+12     	; 0xe12 <dht11_output+0x1b2>
		{
			
			//lcd_gotoxy(11,1);
			lcd_string("FO ON  ",7);
     e06:	67 e0       	ldi	r22, 0x07	; 7
     e08:	86 e6       	ldi	r24, 0x66	; 102
     e0a:	91 e0       	ldi	r25, 0x01	; 1
     e0c:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     e10:	05 c0       	rjmp	.+10     	; 0xe1c <dht11_output+0x1bc>
		}
		
		else 
		{
			
			lcd_string("FO OFF  ",7);
     e12:	67 e0       	ldi	r22, 0x07	; 7
     e14:	8e e6       	ldi	r24, 0x6E	; 110
     e16:	91 e0       	ldi	r25, 0x01	; 1
     e18:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     e1c:	2f e7       	ldi	r18, 0x7F	; 127
     e1e:	8a e1       	ldi	r24, 0x1A	; 26
     e20:	96 e0       	ldi	r25, 0x06	; 6
     e22:	21 50       	subi	r18, 0x01	; 1
     e24:	80 40       	sbci	r24, 0x00	; 0
     e26:	90 40       	sbci	r25, 0x00	; 0
     e28:	e1 f7       	brne	.-8      	; 0xe22 <dht11_output+0x1c2>
     e2a:	00 c0       	rjmp	.+0      	; 0xe2c <dht11_output+0x1cc>
     e2c:	00 00       	nop
		_delay_ms(1200);
		*/
		break;
		
	}
}
     e2e:	0f 90       	pop	r0
     e30:	0f 90       	pop	r0
     e32:	0f 90       	pop	r0
     e34:	0f 90       	pop	r0
     e36:	0f 90       	pop	r0
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	ff 90       	pop	r15
     e42:	ef 90       	pop	r14
     e44:	df 90       	pop	r13
     e46:	cf 90       	pop	r12
     e48:	08 95       	ret

00000e4a <main>:

int main(void)

{

	DDRA=0xff;
     e4a:	8f ef       	ldi	r24, 0xFF	; 255
     e4c:	8a bb       	out	0x1a, r24	; 26
	DDRB=0x07;
     e4e:	87 e0       	ldi	r24, 0x07	; 7
     e50:	87 bb       	out	0x17, r24	; 23
	DDRC=0xf0;
     e52:	80 ef       	ldi	r24, 0xF0	; 240
     e54:	84 bb       	out	0x14, r24	; 20
	char buffer[5];
	char key;
	int wtrperPlant, fertilizerPlant, humMin = 0, humMax, temprtMin, temprtMax;
	

	lcdint();
     e56:	0e 94 9b 00 	call	0x136	; 0x136 <lcdint>
	
	SPImstr_init();
     e5a:	0e 94 49 03 	call	0x692	; 0x692 <SPImstr_init>
	lcd_line_two();
	lcd_string("Configure",12);
	_delay_ms(1200);
	*/
	
	lcd_clear();
     e5e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
	lcd_line_one();
     e62:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <lcd_line_one>
	lcd_string("ENTER 2 TO",10);
     e66:	6a e0       	ldi	r22, 0x0A	; 10
     e68:	87 e7       	ldi	r24, 0x77	; 119
     e6a:	91 e0       	ldi	r25, 0x01	; 1
     e6c:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
	lcd_line_two();
     e70:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <lcd_line_two>
	lcd_string("Activate system",16);
     e74:	60 e1       	ldi	r22, 0x10	; 16
     e76:	82 e8       	ldi	r24, 0x82	; 130
     e78:	91 e0       	ldi	r25, 0x01	; 1
     e7a:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
     e7e:	2f e7       	ldi	r18, 0x7F	; 127
     e80:	89 ea       	ldi	r24, 0xA9	; 169
     e82:	93 e0       	ldi	r25, 0x03	; 3
     e84:	21 50       	subi	r18, 0x01	; 1
     e86:	80 40       	sbci	r24, 0x00	; 0
     e88:	90 40       	sbci	r25, 0x00	; 0
     e8a:	e1 f7       	brne	.-8      	; 0xe84 <main+0x3a>
     e8c:	00 c0       	rjmp	.+0      	; 0xe8e <main+0x44>
     e8e:	00 00       	nop
	DDRB=0x07;
	DDRC=0xf0;

	char buffer[5];
	char key;
	int wtrperPlant, fertilizerPlant, humMin = 0, humMax, temprtMin, temprtMax;
     e90:	c0 e0       	ldi	r28, 0x00	; 0
     e92:	d0 e0       	ldi	r29, 0x00	; 0

	
	while(1)
	{
		
		lcd_clear();
     e94:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     e98:	6f e0       	ldi	r22, 0x0F	; 15
     e9a:	82 e9       	ldi	r24, 0x92	; 146
     e9c:	91 e0       	ldi	r25, 0x01	; 1
     e9e:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
		key = scankey();
     ea2:	0e 94 46 01 	call	0x28c	; 0x28c <scankey>

		
		switch(key)
     ea6:	81 33       	cpi	r24, 0x31	; 49
     ea8:	19 f0       	breq	.+6      	; 0xeb0 <main+0x66>
     eaa:	82 33       	cpi	r24, 0x32	; 50
     eac:	d9 f0       	breq	.+54     	; 0xee4 <main+0x9a>
     eae:	f2 cf       	rjmp	.-28     	; 0xe94 <main+0x4a>
		{	
			case '1':
				lcd_clear();
     eb0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     eb4:	6c e0       	ldi	r22, 0x0C	; 12
     eb6:	81 ea       	ldi	r24, 0xA1	; 161
     eb8:	91 e0       	ldi	r25, 0x01	; 1
     eba:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_string>
				get_plantcount();
     ebe:	0e 94 86 04 	call	0x90c	; 0x90c <get_plantcount>
				wtrperPlant = waterPerPlant();
     ec2:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <waterPerPlant>
				fertilizerPlant = fertilizePerPlant();
     ec6:	0e 94 13 04 	call	0x826	; 0x826 <fertilizePerPlant>
				humMin = humidityMin();
     eca:	0e 94 2a 04 	call	0x854	; 0x854 <humidityMin>
     ece:	ec 01       	movw	r28, r24
				humMax = humidityMax();
     ed0:	0e 94 41 04 	call	0x882	; 0x882 <humidityMax>
     ed4:	8c 01       	movw	r16, r24
				temprtMin = tempMin();
     ed6:	0e 94 58 04 	call	0x8b0	; 0x8b0 <tempMin>
     eda:	7c 01       	movw	r14, r24
				temprtMax = tempMax();
     edc:	0e 94 6f 04 	call	0x8de	; 0x8de <tempMax>
     ee0:	6c 01       	movw	r12, r24

				break;
     ee2:	d8 cf       	rjmp	.-80     	; 0xe94 <main+0x4a>
			case '2':
				
			while(1){
				if(!humMin == 0) {
     ee4:	20 97       	sbiw	r28, 0x00	; 0
     ee6:	39 f0       	breq	.+14     	; 0xef6 <main+0xac>
					dht11_output(humMin,humMax,temprtMin,temprtMax);
     ee8:	96 01       	movw	r18, r12
     eea:	a7 01       	movw	r20, r14
     eec:	b8 01       	movw	r22, r16
     eee:	ce 01       	movw	r24, r28
     ef0:	0e 94 30 06 	call	0xc60	; 0xc60 <dht11_output>
     ef4:	0a c0       	rjmp	.+20     	; 0xf0a <main+0xc0>

				} else dht11_output(75,85,23,29);
     ef6:	2d e1       	ldi	r18, 0x1D	; 29
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	47 e1       	ldi	r20, 0x17	; 23
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	65 e5       	ldi	r22, 0x55	; 85
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	8b e4       	ldi	r24, 0x4B	; 75
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	0e 94 30 06 	call	0xc60	; 0xc60 <dht11_output>
				water_level();
     f0a:	0e 94 de 04 	call	0x9bc	; 0x9bc <water_level>
     f0e:	2f e9       	ldi	r18, 0x9F	; 159
     f10:	86 e8       	ldi	r24, 0x86	; 134
     f12:	91 e0       	ldi	r25, 0x01	; 1
     f14:	21 50       	subi	r18, 0x01	; 1
     f16:	80 40       	sbci	r24, 0x00	; 0
     f18:	90 40       	sbci	r25, 0x00	; 0
     f1a:	e1 f7       	brne	.-8      	; 0xf14 <main+0xca>
     f1c:	00 c0       	rjmp	.+0      	; 0xf1e <main+0xd4>
     f1e:	00 00       	nop
				_delay_ms(500);
				nt_level();
     f20:	0e 94 87 05 	call	0xb0e	; 0xb0e <nt_level>
     f24:	2f e3       	ldi	r18, 0x3F	; 63
     f26:	8d e0       	ldi	r24, 0x0D	; 13
     f28:	93 e0       	ldi	r25, 0x03	; 3
     f2a:	21 50       	subi	r18, 0x01	; 1
     f2c:	80 40       	sbci	r24, 0x00	; 0
     f2e:	90 40       	sbci	r25, 0x00	; 0
     f30:	e1 f7       	brne	.-8      	; 0xf2a <main+0xe0>
     f32:	00 c0       	rjmp	.+0      	; 0xf34 <main+0xea>
     f34:	00 00       	nop
     f36:	d6 cf       	rjmp	.-84     	; 0xee4 <main+0x9a>

00000f38 <__subsf3>:
     f38:	50 58       	subi	r21, 0x80	; 128

00000f3a <__addsf3>:
     f3a:	bb 27       	eor	r27, r27
     f3c:	aa 27       	eor	r26, r26
     f3e:	0e 94 b4 07 	call	0xf68	; 0xf68 <__addsf3x>
     f42:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_round>
     f46:	0e 94 85 08 	call	0x110a	; 0x110a <__fp_pscA>
     f4a:	38 f0       	brcs	.+14     	; 0xf5a <__addsf3+0x20>
     f4c:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_pscB>
     f50:	20 f0       	brcs	.+8      	; 0xf5a <__addsf3+0x20>
     f52:	39 f4       	brne	.+14     	; 0xf62 <__addsf3+0x28>
     f54:	9f 3f       	cpi	r25, 0xFF	; 255
     f56:	19 f4       	brne	.+6      	; 0xf5e <__addsf3+0x24>
     f58:	26 f4       	brtc	.+8      	; 0xf62 <__addsf3+0x28>
     f5a:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>
     f5e:	0e f4       	brtc	.+2      	; 0xf62 <__addsf3+0x28>
     f60:	e0 95       	com	r30
     f62:	e7 fb       	bst	r30, 7
     f64:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>

00000f68 <__addsf3x>:
     f68:	e9 2f       	mov	r30, r25
     f6a:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fp_split3>
     f6e:	58 f3       	brcs	.-42     	; 0xf46 <__addsf3+0xc>
     f70:	ba 17       	cp	r27, r26
     f72:	62 07       	cpc	r22, r18
     f74:	73 07       	cpc	r23, r19
     f76:	84 07       	cpc	r24, r20
     f78:	95 07       	cpc	r25, r21
     f7a:	20 f0       	brcs	.+8      	; 0xf84 <__addsf3x+0x1c>
     f7c:	79 f4       	brne	.+30     	; 0xf9c <__addsf3x+0x34>
     f7e:	a6 f5       	brtc	.+104    	; 0xfe8 <__addsf3x+0x80>
     f80:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__fp_zero>
     f84:	0e f4       	brtc	.+2      	; 0xf88 <__addsf3x+0x20>
     f86:	e0 95       	com	r30
     f88:	0b 2e       	mov	r0, r27
     f8a:	ba 2f       	mov	r27, r26
     f8c:	a0 2d       	mov	r26, r0
     f8e:	0b 01       	movw	r0, r22
     f90:	b9 01       	movw	r22, r18
     f92:	90 01       	movw	r18, r0
     f94:	0c 01       	movw	r0, r24
     f96:	ca 01       	movw	r24, r20
     f98:	a0 01       	movw	r20, r0
     f9a:	11 24       	eor	r1, r1
     f9c:	ff 27       	eor	r31, r31
     f9e:	59 1b       	sub	r21, r25
     fa0:	99 f0       	breq	.+38     	; 0xfc8 <__addsf3x+0x60>
     fa2:	59 3f       	cpi	r21, 0xF9	; 249
     fa4:	50 f4       	brcc	.+20     	; 0xfba <__addsf3x+0x52>
     fa6:	50 3e       	cpi	r21, 0xE0	; 224
     fa8:	68 f1       	brcs	.+90     	; 0x1004 <__addsf3x+0x9c>
     faa:	1a 16       	cp	r1, r26
     fac:	f0 40       	sbci	r31, 0x00	; 0
     fae:	a2 2f       	mov	r26, r18
     fb0:	23 2f       	mov	r18, r19
     fb2:	34 2f       	mov	r19, r20
     fb4:	44 27       	eor	r20, r20
     fb6:	58 5f       	subi	r21, 0xF8	; 248
     fb8:	f3 cf       	rjmp	.-26     	; 0xfa0 <__addsf3x+0x38>
     fba:	46 95       	lsr	r20
     fbc:	37 95       	ror	r19
     fbe:	27 95       	ror	r18
     fc0:	a7 95       	ror	r26
     fc2:	f0 40       	sbci	r31, 0x00	; 0
     fc4:	53 95       	inc	r21
     fc6:	c9 f7       	brne	.-14     	; 0xfba <__addsf3x+0x52>
     fc8:	7e f4       	brtc	.+30     	; 0xfe8 <__addsf3x+0x80>
     fca:	1f 16       	cp	r1, r31
     fcc:	ba 0b       	sbc	r27, r26
     fce:	62 0b       	sbc	r22, r18
     fd0:	73 0b       	sbc	r23, r19
     fd2:	84 0b       	sbc	r24, r20
     fd4:	ba f0       	brmi	.+46     	; 0x1004 <__addsf3x+0x9c>
     fd6:	91 50       	subi	r25, 0x01	; 1
     fd8:	a1 f0       	breq	.+40     	; 0x1002 <__addsf3x+0x9a>
     fda:	ff 0f       	add	r31, r31
     fdc:	bb 1f       	adc	r27, r27
     fde:	66 1f       	adc	r22, r22
     fe0:	77 1f       	adc	r23, r23
     fe2:	88 1f       	adc	r24, r24
     fe4:	c2 f7       	brpl	.-16     	; 0xfd6 <__addsf3x+0x6e>
     fe6:	0e c0       	rjmp	.+28     	; 0x1004 <__addsf3x+0x9c>
     fe8:	ba 0f       	add	r27, r26
     fea:	62 1f       	adc	r22, r18
     fec:	73 1f       	adc	r23, r19
     fee:	84 1f       	adc	r24, r20
     ff0:	48 f4       	brcc	.+18     	; 0x1004 <__addsf3x+0x9c>
     ff2:	87 95       	ror	r24
     ff4:	77 95       	ror	r23
     ff6:	67 95       	ror	r22
     ff8:	b7 95       	ror	r27
     ffa:	f7 95       	ror	r31
     ffc:	9e 3f       	cpi	r25, 0xFE	; 254
     ffe:	08 f0       	brcs	.+2      	; 0x1002 <__addsf3x+0x9a>
    1000:	b0 cf       	rjmp	.-160    	; 0xf62 <__addsf3+0x28>
    1002:	93 95       	inc	r25
    1004:	88 0f       	add	r24, r24
    1006:	08 f0       	brcs	.+2      	; 0x100a <__addsf3x+0xa2>
    1008:	99 27       	eor	r25, r25
    100a:	ee 0f       	add	r30, r30
    100c:	97 95       	ror	r25
    100e:	87 95       	ror	r24
    1010:	08 95       	ret

00001012 <__fixsfsi>:
    1012:	0e 94 10 08 	call	0x1020	; 0x1020 <__fixunssfsi>
    1016:	68 94       	set
    1018:	b1 11       	cpse	r27, r1
    101a:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>
    101e:	08 95       	ret

00001020 <__fixunssfsi>:
    1020:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_splitA>
    1024:	88 f0       	brcs	.+34     	; 0x1048 <__fixunssfsi+0x28>
    1026:	9f 57       	subi	r25, 0x7F	; 127
    1028:	98 f0       	brcs	.+38     	; 0x1050 <__fixunssfsi+0x30>
    102a:	b9 2f       	mov	r27, r25
    102c:	99 27       	eor	r25, r25
    102e:	b7 51       	subi	r27, 0x17	; 23
    1030:	b0 f0       	brcs	.+44     	; 0x105e <__fixunssfsi+0x3e>
    1032:	e1 f0       	breq	.+56     	; 0x106c <__fixunssfsi+0x4c>
    1034:	66 0f       	add	r22, r22
    1036:	77 1f       	adc	r23, r23
    1038:	88 1f       	adc	r24, r24
    103a:	99 1f       	adc	r25, r25
    103c:	1a f0       	brmi	.+6      	; 0x1044 <__fixunssfsi+0x24>
    103e:	ba 95       	dec	r27
    1040:	c9 f7       	brne	.-14     	; 0x1034 <__fixunssfsi+0x14>
    1042:	14 c0       	rjmp	.+40     	; 0x106c <__fixunssfsi+0x4c>
    1044:	b1 30       	cpi	r27, 0x01	; 1
    1046:	91 f0       	breq	.+36     	; 0x106c <__fixunssfsi+0x4c>
    1048:	0e 94 c6 08 	call	0x118c	; 0x118c <__fp_zero>
    104c:	b1 e0       	ldi	r27, 0x01	; 1
    104e:	08 95       	ret
    1050:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__fp_zero>
    1054:	67 2f       	mov	r22, r23
    1056:	78 2f       	mov	r23, r24
    1058:	88 27       	eor	r24, r24
    105a:	b8 5f       	subi	r27, 0xF8	; 248
    105c:	39 f0       	breq	.+14     	; 0x106c <__fixunssfsi+0x4c>
    105e:	b9 3f       	cpi	r27, 0xF9	; 249
    1060:	cc f3       	brlt	.-14     	; 0x1054 <__fixunssfsi+0x34>
    1062:	86 95       	lsr	r24
    1064:	77 95       	ror	r23
    1066:	67 95       	ror	r22
    1068:	b3 95       	inc	r27
    106a:	d9 f7       	brne	.-10     	; 0x1062 <__fixunssfsi+0x42>
    106c:	3e f4       	brtc	.+14     	; 0x107c <__fixunssfsi+0x5c>
    106e:	90 95       	com	r25
    1070:	80 95       	com	r24
    1072:	70 95       	com	r23
    1074:	61 95       	neg	r22
    1076:	7f 4f       	sbci	r23, 0xFF	; 255
    1078:	8f 4f       	sbci	r24, 0xFF	; 255
    107a:	9f 4f       	sbci	r25, 0xFF	; 255
    107c:	08 95       	ret

0000107e <__floatunsisf>:
    107e:	e8 94       	clt
    1080:	09 c0       	rjmp	.+18     	; 0x1094 <__floatsisf+0x12>

00001082 <__floatsisf>:
    1082:	97 fb       	bst	r25, 7
    1084:	3e f4       	brtc	.+14     	; 0x1094 <__floatsisf+0x12>
    1086:	90 95       	com	r25
    1088:	80 95       	com	r24
    108a:	70 95       	com	r23
    108c:	61 95       	neg	r22
    108e:	7f 4f       	sbci	r23, 0xFF	; 255
    1090:	8f 4f       	sbci	r24, 0xFF	; 255
    1092:	9f 4f       	sbci	r25, 0xFF	; 255
    1094:	99 23       	and	r25, r25
    1096:	a9 f0       	breq	.+42     	; 0x10c2 <__floatsisf+0x40>
    1098:	f9 2f       	mov	r31, r25
    109a:	96 e9       	ldi	r25, 0x96	; 150
    109c:	bb 27       	eor	r27, r27
    109e:	93 95       	inc	r25
    10a0:	f6 95       	lsr	r31
    10a2:	87 95       	ror	r24
    10a4:	77 95       	ror	r23
    10a6:	67 95       	ror	r22
    10a8:	b7 95       	ror	r27
    10aa:	f1 11       	cpse	r31, r1
    10ac:	f8 cf       	rjmp	.-16     	; 0x109e <__floatsisf+0x1c>
    10ae:	fa f4       	brpl	.+62     	; 0x10ee <__floatsisf+0x6c>
    10b0:	bb 0f       	add	r27, r27
    10b2:	11 f4       	brne	.+4      	; 0x10b8 <__floatsisf+0x36>
    10b4:	60 ff       	sbrs	r22, 0
    10b6:	1b c0       	rjmp	.+54     	; 0x10ee <__floatsisf+0x6c>
    10b8:	6f 5f       	subi	r22, 0xFF	; 255
    10ba:	7f 4f       	sbci	r23, 0xFF	; 255
    10bc:	8f 4f       	sbci	r24, 0xFF	; 255
    10be:	9f 4f       	sbci	r25, 0xFF	; 255
    10c0:	16 c0       	rjmp	.+44     	; 0x10ee <__floatsisf+0x6c>
    10c2:	88 23       	and	r24, r24
    10c4:	11 f0       	breq	.+4      	; 0x10ca <__floatsisf+0x48>
    10c6:	96 e9       	ldi	r25, 0x96	; 150
    10c8:	11 c0       	rjmp	.+34     	; 0x10ec <__floatsisf+0x6a>
    10ca:	77 23       	and	r23, r23
    10cc:	21 f0       	breq	.+8      	; 0x10d6 <__floatsisf+0x54>
    10ce:	9e e8       	ldi	r25, 0x8E	; 142
    10d0:	87 2f       	mov	r24, r23
    10d2:	76 2f       	mov	r23, r22
    10d4:	05 c0       	rjmp	.+10     	; 0x10e0 <__floatsisf+0x5e>
    10d6:	66 23       	and	r22, r22
    10d8:	71 f0       	breq	.+28     	; 0x10f6 <__floatsisf+0x74>
    10da:	96 e8       	ldi	r25, 0x86	; 134
    10dc:	86 2f       	mov	r24, r22
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	60 e0       	ldi	r22, 0x00	; 0
    10e2:	2a f0       	brmi	.+10     	; 0x10ee <__floatsisf+0x6c>
    10e4:	9a 95       	dec	r25
    10e6:	66 0f       	add	r22, r22
    10e8:	77 1f       	adc	r23, r23
    10ea:	88 1f       	adc	r24, r24
    10ec:	da f7       	brpl	.-10     	; 0x10e4 <__floatsisf+0x62>
    10ee:	88 0f       	add	r24, r24
    10f0:	96 95       	lsr	r25
    10f2:	87 95       	ror	r24
    10f4:	97 f9       	bld	r25, 7
    10f6:	08 95       	ret

000010f8 <__fp_inf>:
    10f8:	97 f9       	bld	r25, 7
    10fa:	9f 67       	ori	r25, 0x7F	; 127
    10fc:	80 e8       	ldi	r24, 0x80	; 128
    10fe:	70 e0       	ldi	r23, 0x00	; 0
    1100:	60 e0       	ldi	r22, 0x00	; 0
    1102:	08 95       	ret

00001104 <__fp_nan>:
    1104:	9f ef       	ldi	r25, 0xFF	; 255
    1106:	80 ec       	ldi	r24, 0xC0	; 192
    1108:	08 95       	ret

0000110a <__fp_pscA>:
    110a:	00 24       	eor	r0, r0
    110c:	0a 94       	dec	r0
    110e:	16 16       	cp	r1, r22
    1110:	17 06       	cpc	r1, r23
    1112:	18 06       	cpc	r1, r24
    1114:	09 06       	cpc	r0, r25
    1116:	08 95       	ret

00001118 <__fp_pscB>:
    1118:	00 24       	eor	r0, r0
    111a:	0a 94       	dec	r0
    111c:	12 16       	cp	r1, r18
    111e:	13 06       	cpc	r1, r19
    1120:	14 06       	cpc	r1, r20
    1122:	05 06       	cpc	r0, r21
    1124:	08 95       	ret

00001126 <__fp_round>:
    1126:	09 2e       	mov	r0, r25
    1128:	03 94       	inc	r0
    112a:	00 0c       	add	r0, r0
    112c:	11 f4       	brne	.+4      	; 0x1132 <__fp_round+0xc>
    112e:	88 23       	and	r24, r24
    1130:	52 f0       	brmi	.+20     	; 0x1146 <__fp_round+0x20>
    1132:	bb 0f       	add	r27, r27
    1134:	40 f4       	brcc	.+16     	; 0x1146 <__fp_round+0x20>
    1136:	bf 2b       	or	r27, r31
    1138:	11 f4       	brne	.+4      	; 0x113e <__fp_round+0x18>
    113a:	60 ff       	sbrs	r22, 0
    113c:	04 c0       	rjmp	.+8      	; 0x1146 <__fp_round+0x20>
    113e:	6f 5f       	subi	r22, 0xFF	; 255
    1140:	7f 4f       	sbci	r23, 0xFF	; 255
    1142:	8f 4f       	sbci	r24, 0xFF	; 255
    1144:	9f 4f       	sbci	r25, 0xFF	; 255
    1146:	08 95       	ret

00001148 <__fp_split3>:
    1148:	57 fd       	sbrc	r21, 7
    114a:	90 58       	subi	r25, 0x80	; 128
    114c:	44 0f       	add	r20, r20
    114e:	55 1f       	adc	r21, r21
    1150:	59 f0       	breq	.+22     	; 0x1168 <__fp_splitA+0x10>
    1152:	5f 3f       	cpi	r21, 0xFF	; 255
    1154:	71 f0       	breq	.+28     	; 0x1172 <__fp_splitA+0x1a>
    1156:	47 95       	ror	r20

00001158 <__fp_splitA>:
    1158:	88 0f       	add	r24, r24
    115a:	97 fb       	bst	r25, 7
    115c:	99 1f       	adc	r25, r25
    115e:	61 f0       	breq	.+24     	; 0x1178 <__fp_splitA+0x20>
    1160:	9f 3f       	cpi	r25, 0xFF	; 255
    1162:	79 f0       	breq	.+30     	; 0x1182 <__fp_splitA+0x2a>
    1164:	87 95       	ror	r24
    1166:	08 95       	ret
    1168:	12 16       	cp	r1, r18
    116a:	13 06       	cpc	r1, r19
    116c:	14 06       	cpc	r1, r20
    116e:	55 1f       	adc	r21, r21
    1170:	f2 cf       	rjmp	.-28     	; 0x1156 <__fp_split3+0xe>
    1172:	46 95       	lsr	r20
    1174:	f1 df       	rcall	.-30     	; 0x1158 <__fp_splitA>
    1176:	08 c0       	rjmp	.+16     	; 0x1188 <__fp_splitA+0x30>
    1178:	16 16       	cp	r1, r22
    117a:	17 06       	cpc	r1, r23
    117c:	18 06       	cpc	r1, r24
    117e:	99 1f       	adc	r25, r25
    1180:	f1 cf       	rjmp	.-30     	; 0x1164 <__fp_splitA+0xc>
    1182:	86 95       	lsr	r24
    1184:	71 05       	cpc	r23, r1
    1186:	61 05       	cpc	r22, r1
    1188:	08 94       	sec
    118a:	08 95       	ret

0000118c <__fp_zero>:
    118c:	e8 94       	clt

0000118e <__fp_szero>:
    118e:	bb 27       	eor	r27, r27
    1190:	66 27       	eor	r22, r22
    1192:	77 27       	eor	r23, r23
    1194:	cb 01       	movw	r24, r22
    1196:	97 f9       	bld	r25, 7
    1198:	08 95       	ret

0000119a <__mulsf3>:
    119a:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__mulsf3x>
    119e:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_round>
    11a2:	0e 94 85 08 	call	0x110a	; 0x110a <__fp_pscA>
    11a6:	38 f0       	brcs	.+14     	; 0x11b6 <__mulsf3+0x1c>
    11a8:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_pscB>
    11ac:	20 f0       	brcs	.+8      	; 0x11b6 <__mulsf3+0x1c>
    11ae:	95 23       	and	r25, r21
    11b0:	11 f0       	breq	.+4      	; 0x11b6 <__mulsf3+0x1c>
    11b2:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    11b6:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>
    11ba:	11 24       	eor	r1, r1
    11bc:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>

000011c0 <__mulsf3x>:
    11c0:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fp_split3>
    11c4:	70 f3       	brcs	.-36     	; 0x11a2 <__mulsf3+0x8>

000011c6 <__mulsf3_pse>:
    11c6:	95 9f       	mul	r25, r21
    11c8:	c1 f3       	breq	.-16     	; 0x11ba <__mulsf3+0x20>
    11ca:	95 0f       	add	r25, r21
    11cc:	50 e0       	ldi	r21, 0x00	; 0
    11ce:	55 1f       	adc	r21, r21
    11d0:	62 9f       	mul	r22, r18
    11d2:	f0 01       	movw	r30, r0
    11d4:	72 9f       	mul	r23, r18
    11d6:	bb 27       	eor	r27, r27
    11d8:	f0 0d       	add	r31, r0
    11da:	b1 1d       	adc	r27, r1
    11dc:	63 9f       	mul	r22, r19
    11de:	aa 27       	eor	r26, r26
    11e0:	f0 0d       	add	r31, r0
    11e2:	b1 1d       	adc	r27, r1
    11e4:	aa 1f       	adc	r26, r26
    11e6:	64 9f       	mul	r22, r20
    11e8:	66 27       	eor	r22, r22
    11ea:	b0 0d       	add	r27, r0
    11ec:	a1 1d       	adc	r26, r1
    11ee:	66 1f       	adc	r22, r22
    11f0:	82 9f       	mul	r24, r18
    11f2:	22 27       	eor	r18, r18
    11f4:	b0 0d       	add	r27, r0
    11f6:	a1 1d       	adc	r26, r1
    11f8:	62 1f       	adc	r22, r18
    11fa:	73 9f       	mul	r23, r19
    11fc:	b0 0d       	add	r27, r0
    11fe:	a1 1d       	adc	r26, r1
    1200:	62 1f       	adc	r22, r18
    1202:	83 9f       	mul	r24, r19
    1204:	a0 0d       	add	r26, r0
    1206:	61 1d       	adc	r22, r1
    1208:	22 1f       	adc	r18, r18
    120a:	74 9f       	mul	r23, r20
    120c:	33 27       	eor	r19, r19
    120e:	a0 0d       	add	r26, r0
    1210:	61 1d       	adc	r22, r1
    1212:	23 1f       	adc	r18, r19
    1214:	84 9f       	mul	r24, r20
    1216:	60 0d       	add	r22, r0
    1218:	21 1d       	adc	r18, r1
    121a:	82 2f       	mov	r24, r18
    121c:	76 2f       	mov	r23, r22
    121e:	6a 2f       	mov	r22, r26
    1220:	11 24       	eor	r1, r1
    1222:	9f 57       	subi	r25, 0x7F	; 127
    1224:	50 40       	sbci	r21, 0x00	; 0
    1226:	9a f0       	brmi	.+38     	; 0x124e <__mulsf3_pse+0x88>
    1228:	f1 f0       	breq	.+60     	; 0x1266 <__mulsf3_pse+0xa0>
    122a:	88 23       	and	r24, r24
    122c:	4a f0       	brmi	.+18     	; 0x1240 <__mulsf3_pse+0x7a>
    122e:	ee 0f       	add	r30, r30
    1230:	ff 1f       	adc	r31, r31
    1232:	bb 1f       	adc	r27, r27
    1234:	66 1f       	adc	r22, r22
    1236:	77 1f       	adc	r23, r23
    1238:	88 1f       	adc	r24, r24
    123a:	91 50       	subi	r25, 0x01	; 1
    123c:	50 40       	sbci	r21, 0x00	; 0
    123e:	a9 f7       	brne	.-22     	; 0x122a <__mulsf3_pse+0x64>
    1240:	9e 3f       	cpi	r25, 0xFE	; 254
    1242:	51 05       	cpc	r21, r1
    1244:	80 f0       	brcs	.+32     	; 0x1266 <__mulsf3_pse+0xa0>
    1246:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    124a:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>
    124e:	5f 3f       	cpi	r21, 0xFF	; 255
    1250:	e4 f3       	brlt	.-8      	; 0x124a <__mulsf3_pse+0x84>
    1252:	98 3e       	cpi	r25, 0xE8	; 232
    1254:	d4 f3       	brlt	.-12     	; 0x124a <__mulsf3_pse+0x84>
    1256:	86 95       	lsr	r24
    1258:	77 95       	ror	r23
    125a:	67 95       	ror	r22
    125c:	b7 95       	ror	r27
    125e:	f7 95       	ror	r31
    1260:	e7 95       	ror	r30
    1262:	9f 5f       	subi	r25, 0xFF	; 255
    1264:	c1 f7       	brne	.-16     	; 0x1256 <__mulsf3_pse+0x90>
    1266:	fe 2b       	or	r31, r30
    1268:	88 0f       	add	r24, r24
    126a:	91 1d       	adc	r25, r1
    126c:	96 95       	lsr	r25
    126e:	87 95       	ror	r24
    1270:	97 f9       	bld	r25, 7
    1272:	08 95       	ret

00001274 <pow>:
    1274:	fa 01       	movw	r30, r20
    1276:	ee 0f       	add	r30, r30
    1278:	ff 1f       	adc	r31, r31
    127a:	30 96       	adiw	r30, 0x00	; 0
    127c:	21 05       	cpc	r18, r1
    127e:	31 05       	cpc	r19, r1
    1280:	a1 f1       	breq	.+104    	; 0x12ea <pow+0x76>
    1282:	61 15       	cp	r22, r1
    1284:	71 05       	cpc	r23, r1
    1286:	61 f4       	brne	.+24     	; 0x12a0 <pow+0x2c>
    1288:	80 38       	cpi	r24, 0x80	; 128
    128a:	bf e3       	ldi	r27, 0x3F	; 63
    128c:	9b 07       	cpc	r25, r27
    128e:	49 f1       	breq	.+82     	; 0x12e2 <pow+0x6e>
    1290:	68 94       	set
    1292:	90 38       	cpi	r25, 0x80	; 128
    1294:	81 05       	cpc	r24, r1
    1296:	61 f0       	breq	.+24     	; 0x12b0 <pow+0x3c>
    1298:	80 38       	cpi	r24, 0x80	; 128
    129a:	bf ef       	ldi	r27, 0xFF	; 255
    129c:	9b 07       	cpc	r25, r27
    129e:	41 f0       	breq	.+16     	; 0x12b0 <pow+0x3c>
    12a0:	99 23       	and	r25, r25
    12a2:	4a f5       	brpl	.+82     	; 0x12f6 <pow+0x82>
    12a4:	ff 3f       	cpi	r31, 0xFF	; 255
    12a6:	e1 05       	cpc	r30, r1
    12a8:	31 05       	cpc	r19, r1
    12aa:	21 05       	cpc	r18, r1
    12ac:	19 f1       	breq	.+70     	; 0x12f4 <pow+0x80>
    12ae:	e8 94       	clt
    12b0:	08 94       	sec
    12b2:	e7 95       	ror	r30
    12b4:	d9 01       	movw	r26, r18
    12b6:	aa 23       	and	r26, r26
    12b8:	29 f4       	brne	.+10     	; 0x12c4 <pow+0x50>
    12ba:	ab 2f       	mov	r26, r27
    12bc:	be 2f       	mov	r27, r30
    12be:	f8 5f       	subi	r31, 0xF8	; 248
    12c0:	d0 f3       	brcs	.-12     	; 0x12b6 <pow+0x42>
    12c2:	10 c0       	rjmp	.+32     	; 0x12e4 <pow+0x70>
    12c4:	ff 5f       	subi	r31, 0xFF	; 255
    12c6:	70 f4       	brcc	.+28     	; 0x12e4 <pow+0x70>
    12c8:	a6 95       	lsr	r26
    12ca:	e0 f7       	brcc	.-8      	; 0x12c4 <pow+0x50>
    12cc:	f7 39       	cpi	r31, 0x97	; 151
    12ce:	50 f0       	brcs	.+20     	; 0x12e4 <pow+0x70>
    12d0:	19 f0       	breq	.+6      	; 0x12d8 <pow+0x64>
    12d2:	ff 3a       	cpi	r31, 0xAF	; 175
    12d4:	38 f4       	brcc	.+14     	; 0x12e4 <pow+0x70>
    12d6:	9f 77       	andi	r25, 0x7F	; 127
    12d8:	9f 93       	push	r25
    12da:	0d d0       	rcall	.+26     	; 0x12f6 <pow+0x82>
    12dc:	0f 90       	pop	r0
    12de:	07 fc       	sbrc	r0, 7
    12e0:	90 58       	subi	r25, 0x80	; 128
    12e2:	08 95       	ret
    12e4:	46 f0       	brts	.+16     	; 0x12f6 <pow+0x82>
    12e6:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>
    12ea:	60 e0       	ldi	r22, 0x00	; 0
    12ec:	70 e0       	ldi	r23, 0x00	; 0
    12ee:	80 e8       	ldi	r24, 0x80	; 128
    12f0:	9f e3       	ldi	r25, 0x3F	; 63
    12f2:	08 95       	ret
    12f4:	4f e7       	ldi	r20, 0x7F	; 127
    12f6:	9f 77       	andi	r25, 0x7F	; 127
    12f8:	5f 93       	push	r21
    12fa:	4f 93       	push	r20
    12fc:	3f 93       	push	r19
    12fe:	2f 93       	push	r18
    1300:	0e 94 35 0a 	call	0x146a	; 0x146a <log>
    1304:	2f 91       	pop	r18
    1306:	3f 91       	pop	r19
    1308:	4f 91       	pop	r20
    130a:	5f 91       	pop	r21
    130c:	0e 94 cd 08 	call	0x119a	; 0x119a <__mulsf3>
    1310:	0c 94 92 09 	jmp	0x1324	; 0x1324 <exp>
    1314:	29 f4       	brne	.+10     	; 0x1320 <pow+0xac>
    1316:	16 f0       	brts	.+4      	; 0x131c <pow+0xa8>
    1318:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    131c:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__fp_zero>
    1320:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>

00001324 <exp>:
    1324:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_splitA>
    1328:	a8 f3       	brcs	.-22     	; 0x1314 <pow+0xa0>
    132a:	96 38       	cpi	r25, 0x86	; 134
    132c:	a0 f7       	brcc	.-24     	; 0x1316 <pow+0xa2>
    132e:	07 f8       	bld	r0, 7
    1330:	0f 92       	push	r0
    1332:	e8 94       	clt
    1334:	2b e3       	ldi	r18, 0x3B	; 59
    1336:	3a ea       	ldi	r19, 0xAA	; 170
    1338:	48 eb       	ldi	r20, 0xB8	; 184
    133a:	5f e7       	ldi	r21, 0x7F	; 127
    133c:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <__mulsf3_pse>
    1340:	0f 92       	push	r0
    1342:	0f 92       	push	r0
    1344:	0f 92       	push	r0
    1346:	4d b7       	in	r20, 0x3d	; 61
    1348:	5e b7       	in	r21, 0x3e	; 62
    134a:	0f 92       	push	r0
    134c:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <modf>
    1350:	e4 e5       	ldi	r30, 0x54	; 84
    1352:	f0 e0       	ldi	r31, 0x00	; 0
    1354:	0e 94 c4 09 	call	0x1388	; 0x1388 <__fp_powser>
    1358:	4f 91       	pop	r20
    135a:	5f 91       	pop	r21
    135c:	ef 91       	pop	r30
    135e:	ff 91       	pop	r31
    1360:	e5 95       	asr	r30
    1362:	ee 1f       	adc	r30, r30
    1364:	ff 1f       	adc	r31, r31
    1366:	49 f0       	breq	.+18     	; 0x137a <exp+0x56>
    1368:	fe 57       	subi	r31, 0x7E	; 126
    136a:	e0 68       	ori	r30, 0x80	; 128
    136c:	44 27       	eor	r20, r20
    136e:	ee 0f       	add	r30, r30
    1370:	44 1f       	adc	r20, r20
    1372:	fa 95       	dec	r31
    1374:	e1 f7       	brne	.-8      	; 0x136e <exp+0x4a>
    1376:	41 95       	neg	r20
    1378:	55 0b       	sbc	r21, r21
    137a:	0e 94 f7 09 	call	0x13ee	; 0x13ee <ldexp>
    137e:	0f 90       	pop	r0
    1380:	07 fe       	sbrs	r0, 7
    1382:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <inverse>
    1386:	08 95       	ret

00001388 <__fp_powser>:
    1388:	df 93       	push	r29
    138a:	cf 93       	push	r28
    138c:	1f 93       	push	r17
    138e:	0f 93       	push	r16
    1390:	ff 92       	push	r15
    1392:	ef 92       	push	r14
    1394:	df 92       	push	r13
    1396:	7b 01       	movw	r14, r22
    1398:	8c 01       	movw	r16, r24
    139a:	68 94       	set
    139c:	06 c0       	rjmp	.+12     	; 0x13aa <__fp_powser+0x22>
    139e:	da 2e       	mov	r13, r26
    13a0:	ef 01       	movw	r28, r30
    13a2:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__mulsf3x>
    13a6:	fe 01       	movw	r30, r28
    13a8:	e8 94       	clt
    13aa:	a5 91       	lpm	r26, Z+
    13ac:	25 91       	lpm	r18, Z+
    13ae:	35 91       	lpm	r19, Z+
    13b0:	45 91       	lpm	r20, Z+
    13b2:	55 91       	lpm	r21, Z+
    13b4:	a6 f3       	brts	.-24     	; 0x139e <__fp_powser+0x16>
    13b6:	ef 01       	movw	r28, r30
    13b8:	0e 94 b4 07 	call	0xf68	; 0xf68 <__addsf3x>
    13bc:	fe 01       	movw	r30, r28
    13be:	97 01       	movw	r18, r14
    13c0:	a8 01       	movw	r20, r16
    13c2:	da 94       	dec	r13
    13c4:	69 f7       	brne	.-38     	; 0x13a0 <__fp_powser+0x18>
    13c6:	df 90       	pop	r13
    13c8:	ef 90       	pop	r14
    13ca:	ff 90       	pop	r15
    13cc:	0f 91       	pop	r16
    13ce:	1f 91       	pop	r17
    13d0:	cf 91       	pop	r28
    13d2:	df 91       	pop	r29
    13d4:	08 95       	ret

000013d6 <inverse>:
    13d6:	9b 01       	movw	r18, r22
    13d8:	ac 01       	movw	r20, r24
    13da:	60 e0       	ldi	r22, 0x00	; 0
    13dc:	70 e0       	ldi	r23, 0x00	; 0
    13de:	80 e8       	ldi	r24, 0x80	; 128
    13e0:	9f e3       	ldi	r25, 0x3F	; 63
    13e2:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__divsf3>
    13e6:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    13ea:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_mpack>

000013ee <ldexp>:
    13ee:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_splitA>
    13f2:	d8 f3       	brcs	.-10     	; 0x13ea <inverse+0x14>
    13f4:	99 23       	and	r25, r25
    13f6:	c9 f3       	breq	.-14     	; 0x13ea <inverse+0x14>
    13f8:	94 0f       	add	r25, r20
    13fa:	51 1d       	adc	r21, r1
    13fc:	a3 f3       	brvs	.-24     	; 0x13e6 <inverse+0x10>
    13fe:	91 50       	subi	r25, 0x01	; 1
    1400:	50 40       	sbci	r21, 0x00	; 0
    1402:	94 f0       	brlt	.+36     	; 0x1428 <ldexp+0x3a>
    1404:	59 f0       	breq	.+22     	; 0x141c <ldexp+0x2e>
    1406:	88 23       	and	r24, r24
    1408:	32 f0       	brmi	.+12     	; 0x1416 <ldexp+0x28>
    140a:	66 0f       	add	r22, r22
    140c:	77 1f       	adc	r23, r23
    140e:	88 1f       	adc	r24, r24
    1410:	91 50       	subi	r25, 0x01	; 1
    1412:	50 40       	sbci	r21, 0x00	; 0
    1414:	c1 f7       	brne	.-16     	; 0x1406 <ldexp+0x18>
    1416:	9e 3f       	cpi	r25, 0xFE	; 254
    1418:	51 05       	cpc	r21, r1
    141a:	2c f7       	brge	.-54     	; 0x13e6 <inverse+0x10>
    141c:	88 0f       	add	r24, r24
    141e:	91 1d       	adc	r25, r1
    1420:	96 95       	lsr	r25
    1422:	87 95       	ror	r24
    1424:	97 f9       	bld	r25, 7
    1426:	08 95       	ret
    1428:	5f 3f       	cpi	r21, 0xFF	; 255
    142a:	ac f0       	brlt	.+42     	; 0x1456 <ldexp+0x68>
    142c:	98 3e       	cpi	r25, 0xE8	; 232
    142e:	9c f0       	brlt	.+38     	; 0x1456 <ldexp+0x68>
    1430:	bb 27       	eor	r27, r27
    1432:	86 95       	lsr	r24
    1434:	77 95       	ror	r23
    1436:	67 95       	ror	r22
    1438:	b7 95       	ror	r27
    143a:	08 f4       	brcc	.+2      	; 0x143e <ldexp+0x50>
    143c:	b1 60       	ori	r27, 0x01	; 1
    143e:	93 95       	inc	r25
    1440:	c1 f7       	brne	.-16     	; 0x1432 <ldexp+0x44>
    1442:	bb 0f       	add	r27, r27
    1444:	58 f7       	brcc	.-42     	; 0x141c <ldexp+0x2e>
    1446:	11 f4       	brne	.+4      	; 0x144c <ldexp+0x5e>
    1448:	60 ff       	sbrs	r22, 0
    144a:	e8 cf       	rjmp	.-48     	; 0x141c <ldexp+0x2e>
    144c:	6f 5f       	subi	r22, 0xFF	; 255
    144e:	7f 4f       	sbci	r23, 0xFF	; 255
    1450:	8f 4f       	sbci	r24, 0xFF	; 255
    1452:	9f 4f       	sbci	r25, 0xFF	; 255
    1454:	e3 cf       	rjmp	.-58     	; 0x141c <ldexp+0x2e>
    1456:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>
    145a:	16 f0       	brts	.+4      	; 0x1460 <ldexp+0x72>
    145c:	0c 94 23 0b 	jmp	0x1646	; 0x1646 <__fp_mpack>
    1460:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>
    1464:	68 94       	set
    1466:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>

0000146a <log>:
    146a:	0e 94 ac 08 	call	0x1158	; 0x1158 <__fp_splitA>
    146e:	a8 f3       	brcs	.-22     	; 0x145a <ldexp+0x6c>
    1470:	99 23       	and	r25, r25
    1472:	c1 f3       	breq	.-16     	; 0x1464 <ldexp+0x76>
    1474:	ae f3       	brts	.-22     	; 0x1460 <ldexp+0x72>
    1476:	df 93       	push	r29
    1478:	cf 93       	push	r28
    147a:	1f 93       	push	r17
    147c:	0f 93       	push	r16
    147e:	ff 92       	push	r15
    1480:	c9 2f       	mov	r28, r25
    1482:	dd 27       	eor	r29, r29
    1484:	88 23       	and	r24, r24
    1486:	2a f0       	brmi	.+10     	; 0x1492 <log+0x28>
    1488:	21 97       	sbiw	r28, 0x01	; 1
    148a:	66 0f       	add	r22, r22
    148c:	77 1f       	adc	r23, r23
    148e:	88 1f       	adc	r24, r24
    1490:	da f7       	brpl	.-10     	; 0x1488 <log+0x1e>
    1492:	20 e0       	ldi	r18, 0x00	; 0
    1494:	30 e0       	ldi	r19, 0x00	; 0
    1496:	40 e8       	ldi	r20, 0x80	; 128
    1498:	5f eb       	ldi	r21, 0xBF	; 191
    149a:	9f e3       	ldi	r25, 0x3F	; 63
    149c:	88 39       	cpi	r24, 0x98	; 152
    149e:	20 f0       	brcs	.+8      	; 0x14a8 <log+0x3e>
    14a0:	80 3e       	cpi	r24, 0xE0	; 224
    14a2:	38 f0       	brcs	.+14     	; 0x14b2 <log+0x48>
    14a4:	21 96       	adiw	r28, 0x01	; 1
    14a6:	8f 77       	andi	r24, 0x7F	; 127
    14a8:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__addsf3>
    14ac:	ec e7       	ldi	r30, 0x7C	; 124
    14ae:	f0 e0       	ldi	r31, 0x00	; 0
    14b0:	04 c0       	rjmp	.+8      	; 0x14ba <log+0x50>
    14b2:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__addsf3>
    14b6:	e9 ea       	ldi	r30, 0xA9	; 169
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	0e 94 c4 09 	call	0x1388	; 0x1388 <__fp_powser>
    14be:	8b 01       	movw	r16, r22
    14c0:	be 01       	movw	r22, r28
    14c2:	ec 01       	movw	r28, r24
    14c4:	fb 2e       	mov	r15, r27
    14c6:	6f 57       	subi	r22, 0x7F	; 127
    14c8:	71 09       	sbc	r23, r1
    14ca:	75 95       	asr	r23
    14cc:	77 1f       	adc	r23, r23
    14ce:	88 0b       	sbc	r24, r24
    14d0:	99 0b       	sbc	r25, r25
    14d2:	0e 94 41 08 	call	0x1082	; 0x1082 <__floatsisf>
    14d6:	28 e1       	ldi	r18, 0x18	; 24
    14d8:	32 e7       	ldi	r19, 0x72	; 114
    14da:	41 e3       	ldi	r20, 0x31	; 49
    14dc:	5f e3       	ldi	r21, 0x3F	; 63
    14de:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__mulsf3x>
    14e2:	af 2d       	mov	r26, r15
    14e4:	98 01       	movw	r18, r16
    14e6:	ae 01       	movw	r20, r28
    14e8:	ff 90       	pop	r15
    14ea:	0f 91       	pop	r16
    14ec:	1f 91       	pop	r17
    14ee:	cf 91       	pop	r28
    14f0:	df 91       	pop	r29
    14f2:	0e 94 b4 07 	call	0xf68	; 0xf68 <__addsf3x>
    14f6:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_round>

000014fa <modf>:
    14fa:	fa 01       	movw	r30, r20
    14fc:	dc 01       	movw	r26, r24
    14fe:	aa 0f       	add	r26, r26
    1500:	bb 1f       	adc	r27, r27
    1502:	9b 01       	movw	r18, r22
    1504:	ac 01       	movw	r20, r24
    1506:	bf 57       	subi	r27, 0x7F	; 127
    1508:	28 f4       	brcc	.+10     	; 0x1514 <modf+0x1a>
    150a:	22 27       	eor	r18, r18
    150c:	33 27       	eor	r19, r19
    150e:	44 27       	eor	r20, r20
    1510:	50 78       	andi	r21, 0x80	; 128
    1512:	20 c0       	rjmp	.+64     	; 0x1554 <modf+0x5a>
    1514:	b7 51       	subi	r27, 0x17	; 23
    1516:	90 f4       	brcc	.+36     	; 0x153c <modf+0x42>
    1518:	ab 2f       	mov	r26, r27
    151a:	00 24       	eor	r0, r0
    151c:	46 95       	lsr	r20
    151e:	37 95       	ror	r19
    1520:	27 95       	ror	r18
    1522:	01 1c       	adc	r0, r1
    1524:	a3 95       	inc	r26
    1526:	d2 f3       	brmi	.-12     	; 0x151c <modf+0x22>
    1528:	00 20       	and	r0, r0
    152a:	71 f0       	breq	.+28     	; 0x1548 <modf+0x4e>
    152c:	22 0f       	add	r18, r18
    152e:	33 1f       	adc	r19, r19
    1530:	44 1f       	adc	r20, r20
    1532:	b3 95       	inc	r27
    1534:	da f3       	brmi	.-10     	; 0x152c <modf+0x32>
    1536:	0e d0       	rcall	.+28     	; 0x1554 <modf+0x5a>
    1538:	0c 94 9c 07 	jmp	0xf38	; 0xf38 <__subsf3>
    153c:	61 30       	cpi	r22, 0x01	; 1
    153e:	71 05       	cpc	r23, r1
    1540:	a0 e8       	ldi	r26, 0x80	; 128
    1542:	8a 07       	cpc	r24, r26
    1544:	b9 46       	sbci	r27, 0x69	; 105
    1546:	30 f4       	brcc	.+12     	; 0x1554 <modf+0x5a>
    1548:	9b 01       	movw	r18, r22
    154a:	ac 01       	movw	r20, r24
    154c:	66 27       	eor	r22, r22
    154e:	77 27       	eor	r23, r23
    1550:	88 27       	eor	r24, r24
    1552:	90 78       	andi	r25, 0x80	; 128
    1554:	30 96       	adiw	r30, 0x00	; 0
    1556:	21 f0       	breq	.+8      	; 0x1560 <modf+0x66>
    1558:	20 83       	st	Z, r18
    155a:	31 83       	std	Z+1, r19	; 0x01
    155c:	42 83       	std	Z+2, r20	; 0x02
    155e:	53 83       	std	Z+3, r21	; 0x03
    1560:	08 95       	ret

00001562 <__divsf3>:
    1562:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3x>
    1566:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_round>
    156a:	0e 94 8c 08 	call	0x1118	; 0x1118 <__fp_pscB>
    156e:	58 f0       	brcs	.+22     	; 0x1586 <__divsf3+0x24>
    1570:	0e 94 85 08 	call	0x110a	; 0x110a <__fp_pscA>
    1574:	40 f0       	brcs	.+16     	; 0x1586 <__divsf3+0x24>
    1576:	29 f4       	brne	.+10     	; 0x1582 <__divsf3+0x20>
    1578:	5f 3f       	cpi	r21, 0xFF	; 255
    157a:	29 f0       	breq	.+10     	; 0x1586 <__divsf3+0x24>
    157c:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    1580:	51 11       	cpse	r21, r1
    1582:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>
    1586:	0c 94 82 08 	jmp	0x1104	; 0x1104 <__fp_nan>

0000158a <__divsf3x>:
    158a:	0e 94 a4 08 	call	0x1148	; 0x1148 <__fp_split3>
    158e:	68 f3       	brcs	.-38     	; 0x156a <__divsf3+0x8>

00001590 <__divsf3_pse>:
    1590:	99 23       	and	r25, r25
    1592:	b1 f3       	breq	.-20     	; 0x1580 <__divsf3+0x1e>
    1594:	55 23       	and	r21, r21
    1596:	91 f3       	breq	.-28     	; 0x157c <__divsf3+0x1a>
    1598:	95 1b       	sub	r25, r21
    159a:	55 0b       	sbc	r21, r21
    159c:	bb 27       	eor	r27, r27
    159e:	aa 27       	eor	r26, r26
    15a0:	62 17       	cp	r22, r18
    15a2:	73 07       	cpc	r23, r19
    15a4:	84 07       	cpc	r24, r20
    15a6:	38 f0       	brcs	.+14     	; 0x15b6 <__divsf3_pse+0x26>
    15a8:	9f 5f       	subi	r25, 0xFF	; 255
    15aa:	5f 4f       	sbci	r21, 0xFF	; 255
    15ac:	22 0f       	add	r18, r18
    15ae:	33 1f       	adc	r19, r19
    15b0:	44 1f       	adc	r20, r20
    15b2:	aa 1f       	adc	r26, r26
    15b4:	a9 f3       	breq	.-22     	; 0x15a0 <__divsf3_pse+0x10>
    15b6:	35 d0       	rcall	.+106    	; 0x1622 <__divsf3_pse+0x92>
    15b8:	0e 2e       	mov	r0, r30
    15ba:	3a f0       	brmi	.+14     	; 0x15ca <__divsf3_pse+0x3a>
    15bc:	e0 e8       	ldi	r30, 0x80	; 128
    15be:	32 d0       	rcall	.+100    	; 0x1624 <__divsf3_pse+0x94>
    15c0:	91 50       	subi	r25, 0x01	; 1
    15c2:	50 40       	sbci	r21, 0x00	; 0
    15c4:	e6 95       	lsr	r30
    15c6:	00 1c       	adc	r0, r0
    15c8:	ca f7       	brpl	.-14     	; 0x15bc <__divsf3_pse+0x2c>
    15ca:	2b d0       	rcall	.+86     	; 0x1622 <__divsf3_pse+0x92>
    15cc:	fe 2f       	mov	r31, r30
    15ce:	29 d0       	rcall	.+82     	; 0x1622 <__divsf3_pse+0x92>
    15d0:	66 0f       	add	r22, r22
    15d2:	77 1f       	adc	r23, r23
    15d4:	88 1f       	adc	r24, r24
    15d6:	bb 1f       	adc	r27, r27
    15d8:	26 17       	cp	r18, r22
    15da:	37 07       	cpc	r19, r23
    15dc:	48 07       	cpc	r20, r24
    15de:	ab 07       	cpc	r26, r27
    15e0:	b0 e8       	ldi	r27, 0x80	; 128
    15e2:	09 f0       	breq	.+2      	; 0x15e6 <__divsf3_pse+0x56>
    15e4:	bb 0b       	sbc	r27, r27
    15e6:	80 2d       	mov	r24, r0
    15e8:	bf 01       	movw	r22, r30
    15ea:	ff 27       	eor	r31, r31
    15ec:	93 58       	subi	r25, 0x83	; 131
    15ee:	5f 4f       	sbci	r21, 0xFF	; 255
    15f0:	3a f0       	brmi	.+14     	; 0x1600 <__divsf3_pse+0x70>
    15f2:	9e 3f       	cpi	r25, 0xFE	; 254
    15f4:	51 05       	cpc	r21, r1
    15f6:	78 f0       	brcs	.+30     	; 0x1616 <__divsf3_pse+0x86>
    15f8:	0c 94 7c 08 	jmp	0x10f8	; 0x10f8 <__fp_inf>
    15fc:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__fp_szero>
    1600:	5f 3f       	cpi	r21, 0xFF	; 255
    1602:	e4 f3       	brlt	.-8      	; 0x15fc <__divsf3_pse+0x6c>
    1604:	98 3e       	cpi	r25, 0xE8	; 232
    1606:	d4 f3       	brlt	.-12     	; 0x15fc <__divsf3_pse+0x6c>
    1608:	86 95       	lsr	r24
    160a:	77 95       	ror	r23
    160c:	67 95       	ror	r22
    160e:	b7 95       	ror	r27
    1610:	f7 95       	ror	r31
    1612:	9f 5f       	subi	r25, 0xFF	; 255
    1614:	c9 f7       	brne	.-14     	; 0x1608 <__divsf3_pse+0x78>
    1616:	88 0f       	add	r24, r24
    1618:	91 1d       	adc	r25, r1
    161a:	96 95       	lsr	r25
    161c:	87 95       	ror	r24
    161e:	97 f9       	bld	r25, 7
    1620:	08 95       	ret
    1622:	e1 e0       	ldi	r30, 0x01	; 1
    1624:	66 0f       	add	r22, r22
    1626:	77 1f       	adc	r23, r23
    1628:	88 1f       	adc	r24, r24
    162a:	bb 1f       	adc	r27, r27
    162c:	62 17       	cp	r22, r18
    162e:	73 07       	cpc	r23, r19
    1630:	84 07       	cpc	r24, r20
    1632:	ba 07       	cpc	r27, r26
    1634:	20 f0       	brcs	.+8      	; 0x163e <__divsf3_pse+0xae>
    1636:	62 1b       	sub	r22, r18
    1638:	73 0b       	sbc	r23, r19
    163a:	84 0b       	sbc	r24, r20
    163c:	ba 0b       	sbc	r27, r26
    163e:	ee 1f       	adc	r30, r30
    1640:	88 f7       	brcc	.-30     	; 0x1624 <__divsf3_pse+0x94>
    1642:	e0 95       	com	r30
    1644:	08 95       	ret

00001646 <__fp_mpack>:
    1646:	9f 3f       	cpi	r25, 0xFF	; 255
    1648:	31 f0       	breq	.+12     	; 0x1656 <__fp_mpack_finite+0xc>

0000164a <__fp_mpack_finite>:
    164a:	91 50       	subi	r25, 0x01	; 1
    164c:	20 f4       	brcc	.+8      	; 0x1656 <__fp_mpack_finite+0xc>
    164e:	87 95       	ror	r24
    1650:	77 95       	ror	r23
    1652:	67 95       	ror	r22
    1654:	b7 95       	ror	r27
    1656:	88 0f       	add	r24, r24
    1658:	91 1d       	adc	r25, r1
    165a:	96 95       	lsr	r25
    165c:	87 95       	ror	r24
    165e:	97 f9       	bld	r25, 7
    1660:	08 95       	ret

00001662 <__ashrdi3>:
    1662:	97 fb       	bst	r25, 7
    1664:	10 f8       	bld	r1, 0

00001666 <__lshrdi3>:
    1666:	16 94       	lsr	r1
    1668:	00 08       	sbc	r0, r0
    166a:	0f 93       	push	r16
    166c:	08 30       	cpi	r16, 0x08	; 8
    166e:	98 f0       	brcs	.+38     	; 0x1696 <__lshrdi3+0x30>
    1670:	08 50       	subi	r16, 0x08	; 8
    1672:	23 2f       	mov	r18, r19
    1674:	34 2f       	mov	r19, r20
    1676:	45 2f       	mov	r20, r21
    1678:	56 2f       	mov	r21, r22
    167a:	67 2f       	mov	r22, r23
    167c:	78 2f       	mov	r23, r24
    167e:	89 2f       	mov	r24, r25
    1680:	90 2d       	mov	r25, r0
    1682:	f4 cf       	rjmp	.-24     	; 0x166c <__lshrdi3+0x6>
    1684:	05 94       	asr	r0
    1686:	97 95       	ror	r25
    1688:	87 95       	ror	r24
    168a:	77 95       	ror	r23
    168c:	67 95       	ror	r22
    168e:	57 95       	ror	r21
    1690:	47 95       	ror	r20
    1692:	37 95       	ror	r19
    1694:	27 95       	ror	r18
    1696:	0a 95       	dec	r16
    1698:	aa f7       	brpl	.-22     	; 0x1684 <__lshrdi3+0x1e>
    169a:	0f 91       	pop	r16
    169c:	08 95       	ret

0000169e <__adddi3_s8>:
    169e:	00 24       	eor	r0, r0
    16a0:	a7 fd       	sbrc	r26, 7
    16a2:	00 94       	com	r0
    16a4:	2a 0f       	add	r18, r26
    16a6:	30 1d       	adc	r19, r0
    16a8:	40 1d       	adc	r20, r0
    16aa:	50 1d       	adc	r21, r0
    16ac:	60 1d       	adc	r22, r0
    16ae:	70 1d       	adc	r23, r0
    16b0:	80 1d       	adc	r24, r0
    16b2:	90 1d       	adc	r25, r0
    16b4:	08 95       	ret

000016b6 <__itoa_ncheck>:
    16b6:	bb 27       	eor	r27, r27
    16b8:	4a 30       	cpi	r20, 0x0A	; 10
    16ba:	31 f4       	brne	.+12     	; 0x16c8 <__itoa_ncheck+0x12>
    16bc:	99 23       	and	r25, r25
    16be:	22 f4       	brpl	.+8      	; 0x16c8 <__itoa_ncheck+0x12>
    16c0:	bd e2       	ldi	r27, 0x2D	; 45
    16c2:	90 95       	com	r25
    16c4:	81 95       	neg	r24
    16c6:	9f 4f       	sbci	r25, 0xFF	; 255
    16c8:	0c 94 67 0b 	jmp	0x16ce	; 0x16ce <__utoa_common>

000016cc <__utoa_ncheck>:
    16cc:	bb 27       	eor	r27, r27

000016ce <__utoa_common>:
    16ce:	fb 01       	movw	r30, r22
    16d0:	55 27       	eor	r21, r21
    16d2:	aa 27       	eor	r26, r26
    16d4:	88 0f       	add	r24, r24
    16d6:	99 1f       	adc	r25, r25
    16d8:	aa 1f       	adc	r26, r26
    16da:	a4 17       	cp	r26, r20
    16dc:	10 f0       	brcs	.+4      	; 0x16e2 <__utoa_common+0x14>
    16de:	a4 1b       	sub	r26, r20
    16e0:	83 95       	inc	r24
    16e2:	50 51       	subi	r21, 0x10	; 16
    16e4:	b9 f7       	brne	.-18     	; 0x16d4 <__utoa_common+0x6>
    16e6:	a0 5d       	subi	r26, 0xD0	; 208
    16e8:	aa 33       	cpi	r26, 0x3A	; 58
    16ea:	08 f0       	brcs	.+2      	; 0x16ee <__utoa_common+0x20>
    16ec:	a9 5d       	subi	r26, 0xD9	; 217
    16ee:	a1 93       	st	Z+, r26
    16f0:	00 97       	sbiw	r24, 0x00	; 0
    16f2:	79 f7       	brne	.-34     	; 0x16d2 <__utoa_common+0x4>
    16f4:	b1 11       	cpse	r27, r1
    16f6:	b1 93       	st	Z+, r27
    16f8:	11 92       	st	Z+, r1
    16fa:	cb 01       	movw	r24, r22
    16fc:	0c 94 99 0d 	jmp	0x1b32	; 0x1b32 <strrev>

00001700 <sprintf>:
    1700:	ae e0       	ldi	r26, 0x0E	; 14
    1702:	b0 e0       	ldi	r27, 0x00	; 0
    1704:	e6 e8       	ldi	r30, 0x86	; 134
    1706:	fb e0       	ldi	r31, 0x0B	; 11
    1708:	0c 94 51 0e 	jmp	0x1ca2	; 0x1ca2 <__prologue_saves__+0x1c>
    170c:	0d 89       	ldd	r16, Y+21	; 0x15
    170e:	1e 89       	ldd	r17, Y+22	; 0x16
    1710:	86 e0       	ldi	r24, 0x06	; 6
    1712:	8c 83       	std	Y+4, r24	; 0x04
    1714:	1a 83       	std	Y+2, r17	; 0x02
    1716:	09 83       	std	Y+1, r16	; 0x01
    1718:	8f ef       	ldi	r24, 0xFF	; 255
    171a:	9f e7       	ldi	r25, 0x7F	; 127
    171c:	9e 83       	std	Y+6, r25	; 0x06
    171e:	8d 83       	std	Y+5, r24	; 0x05
    1720:	ae 01       	movw	r20, r28
    1722:	47 5e       	subi	r20, 0xE7	; 231
    1724:	5f 4f       	sbci	r21, 0xFF	; 255
    1726:	6f 89       	ldd	r22, Y+23	; 0x17
    1728:	78 8d       	ldd	r23, Y+24	; 0x18
    172a:	ce 01       	movw	r24, r28
    172c:	01 96       	adiw	r24, 0x01	; 1
    172e:	0e 94 a2 0b 	call	0x1744	; 0x1744 <vfprintf>
    1732:	ef 81       	ldd	r30, Y+7	; 0x07
    1734:	f8 85       	ldd	r31, Y+8	; 0x08
    1736:	e0 0f       	add	r30, r16
    1738:	f1 1f       	adc	r31, r17
    173a:	10 82       	st	Z, r1
    173c:	2e 96       	adiw	r28, 0x0e	; 14
    173e:	e4 e0       	ldi	r30, 0x04	; 4
    1740:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__epilogue_restores__+0x1c>

00001744 <vfprintf>:
    1744:	ab e0       	ldi	r26, 0x0B	; 11
    1746:	b0 e0       	ldi	r27, 0x00	; 0
    1748:	e8 ea       	ldi	r30, 0xA8	; 168
    174a:	fb e0       	ldi	r31, 0x0B	; 11
    174c:	0c 94 43 0e 	jmp	0x1c86	; 0x1c86 <__prologue_saves__>
    1750:	6c 01       	movw	r12, r24
    1752:	7b 01       	movw	r14, r22
    1754:	8a 01       	movw	r16, r20
    1756:	fc 01       	movw	r30, r24
    1758:	17 82       	std	Z+7, r1	; 0x07
    175a:	16 82       	std	Z+6, r1	; 0x06
    175c:	83 81       	ldd	r24, Z+3	; 0x03
    175e:	81 ff       	sbrs	r24, 1
    1760:	cc c1       	rjmp	.+920    	; 0x1afa <vfprintf+0x3b6>
    1762:	ce 01       	movw	r24, r28
    1764:	01 96       	adiw	r24, 0x01	; 1
    1766:	3c 01       	movw	r6, r24
    1768:	f6 01       	movw	r30, r12
    176a:	93 81       	ldd	r25, Z+3	; 0x03
    176c:	f7 01       	movw	r30, r14
    176e:	93 fd       	sbrc	r25, 3
    1770:	85 91       	lpm	r24, Z+
    1772:	93 ff       	sbrs	r25, 3
    1774:	81 91       	ld	r24, Z+
    1776:	7f 01       	movw	r14, r30
    1778:	88 23       	and	r24, r24
    177a:	09 f4       	brne	.+2      	; 0x177e <vfprintf+0x3a>
    177c:	ba c1       	rjmp	.+884    	; 0x1af2 <vfprintf+0x3ae>
    177e:	85 32       	cpi	r24, 0x25	; 37
    1780:	39 f4       	brne	.+14     	; 0x1790 <vfprintf+0x4c>
    1782:	93 fd       	sbrc	r25, 3
    1784:	85 91       	lpm	r24, Z+
    1786:	93 ff       	sbrs	r25, 3
    1788:	81 91       	ld	r24, Z+
    178a:	7f 01       	movw	r14, r30
    178c:	85 32       	cpi	r24, 0x25	; 37
    178e:	29 f4       	brne	.+10     	; 0x179a <vfprintf+0x56>
    1790:	b6 01       	movw	r22, r12
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1798:	e7 cf       	rjmp	.-50     	; 0x1768 <vfprintf+0x24>
    179a:	91 2c       	mov	r9, r1
    179c:	21 2c       	mov	r2, r1
    179e:	31 2c       	mov	r3, r1
    17a0:	ff e1       	ldi	r31, 0x1F	; 31
    17a2:	f3 15       	cp	r31, r3
    17a4:	d8 f0       	brcs	.+54     	; 0x17dc <vfprintf+0x98>
    17a6:	8b 32       	cpi	r24, 0x2B	; 43
    17a8:	79 f0       	breq	.+30     	; 0x17c8 <vfprintf+0x84>
    17aa:	38 f4       	brcc	.+14     	; 0x17ba <vfprintf+0x76>
    17ac:	80 32       	cpi	r24, 0x20	; 32
    17ae:	79 f0       	breq	.+30     	; 0x17ce <vfprintf+0x8a>
    17b0:	83 32       	cpi	r24, 0x23	; 35
    17b2:	a1 f4       	brne	.+40     	; 0x17dc <vfprintf+0x98>
    17b4:	23 2d       	mov	r18, r3
    17b6:	20 61       	ori	r18, 0x10	; 16
    17b8:	1d c0       	rjmp	.+58     	; 0x17f4 <vfprintf+0xb0>
    17ba:	8d 32       	cpi	r24, 0x2D	; 45
    17bc:	61 f0       	breq	.+24     	; 0x17d6 <vfprintf+0x92>
    17be:	80 33       	cpi	r24, 0x30	; 48
    17c0:	69 f4       	brne	.+26     	; 0x17dc <vfprintf+0x98>
    17c2:	23 2d       	mov	r18, r3
    17c4:	21 60       	ori	r18, 0x01	; 1
    17c6:	16 c0       	rjmp	.+44     	; 0x17f4 <vfprintf+0xb0>
    17c8:	83 2d       	mov	r24, r3
    17ca:	82 60       	ori	r24, 0x02	; 2
    17cc:	38 2e       	mov	r3, r24
    17ce:	e3 2d       	mov	r30, r3
    17d0:	e4 60       	ori	r30, 0x04	; 4
    17d2:	3e 2e       	mov	r3, r30
    17d4:	2a c0       	rjmp	.+84     	; 0x182a <vfprintf+0xe6>
    17d6:	f3 2d       	mov	r31, r3
    17d8:	f8 60       	ori	r31, 0x08	; 8
    17da:	1d c0       	rjmp	.+58     	; 0x1816 <vfprintf+0xd2>
    17dc:	37 fc       	sbrc	r3, 7
    17de:	2d c0       	rjmp	.+90     	; 0x183a <vfprintf+0xf6>
    17e0:	20 ed       	ldi	r18, 0xD0	; 208
    17e2:	28 0f       	add	r18, r24
    17e4:	2a 30       	cpi	r18, 0x0A	; 10
    17e6:	40 f0       	brcs	.+16     	; 0x17f8 <vfprintf+0xb4>
    17e8:	8e 32       	cpi	r24, 0x2E	; 46
    17ea:	b9 f4       	brne	.+46     	; 0x181a <vfprintf+0xd6>
    17ec:	36 fc       	sbrc	r3, 6
    17ee:	81 c1       	rjmp	.+770    	; 0x1af2 <vfprintf+0x3ae>
    17f0:	23 2d       	mov	r18, r3
    17f2:	20 64       	ori	r18, 0x40	; 64
    17f4:	32 2e       	mov	r3, r18
    17f6:	19 c0       	rjmp	.+50     	; 0x182a <vfprintf+0xe6>
    17f8:	36 fe       	sbrs	r3, 6
    17fa:	06 c0       	rjmp	.+12     	; 0x1808 <vfprintf+0xc4>
    17fc:	8a e0       	ldi	r24, 0x0A	; 10
    17fe:	98 9e       	mul	r9, r24
    1800:	20 0d       	add	r18, r0
    1802:	11 24       	eor	r1, r1
    1804:	92 2e       	mov	r9, r18
    1806:	11 c0       	rjmp	.+34     	; 0x182a <vfprintf+0xe6>
    1808:	ea e0       	ldi	r30, 0x0A	; 10
    180a:	2e 9e       	mul	r2, r30
    180c:	20 0d       	add	r18, r0
    180e:	11 24       	eor	r1, r1
    1810:	22 2e       	mov	r2, r18
    1812:	f3 2d       	mov	r31, r3
    1814:	f0 62       	ori	r31, 0x20	; 32
    1816:	3f 2e       	mov	r3, r31
    1818:	08 c0       	rjmp	.+16     	; 0x182a <vfprintf+0xe6>
    181a:	8c 36       	cpi	r24, 0x6C	; 108
    181c:	21 f4       	brne	.+8      	; 0x1826 <vfprintf+0xe2>
    181e:	83 2d       	mov	r24, r3
    1820:	80 68       	ori	r24, 0x80	; 128
    1822:	38 2e       	mov	r3, r24
    1824:	02 c0       	rjmp	.+4      	; 0x182a <vfprintf+0xe6>
    1826:	88 36       	cpi	r24, 0x68	; 104
    1828:	41 f4       	brne	.+16     	; 0x183a <vfprintf+0xf6>
    182a:	f7 01       	movw	r30, r14
    182c:	93 fd       	sbrc	r25, 3
    182e:	85 91       	lpm	r24, Z+
    1830:	93 ff       	sbrs	r25, 3
    1832:	81 91       	ld	r24, Z+
    1834:	7f 01       	movw	r14, r30
    1836:	81 11       	cpse	r24, r1
    1838:	b3 cf       	rjmp	.-154    	; 0x17a0 <vfprintf+0x5c>
    183a:	98 2f       	mov	r25, r24
    183c:	9f 7d       	andi	r25, 0xDF	; 223
    183e:	95 54       	subi	r25, 0x45	; 69
    1840:	93 30       	cpi	r25, 0x03	; 3
    1842:	28 f4       	brcc	.+10     	; 0x184e <vfprintf+0x10a>
    1844:	0c 5f       	subi	r16, 0xFC	; 252
    1846:	1f 4f       	sbci	r17, 0xFF	; 255
    1848:	9f e3       	ldi	r25, 0x3F	; 63
    184a:	99 83       	std	Y+1, r25	; 0x01
    184c:	0d c0       	rjmp	.+26     	; 0x1868 <vfprintf+0x124>
    184e:	83 36       	cpi	r24, 0x63	; 99
    1850:	31 f0       	breq	.+12     	; 0x185e <vfprintf+0x11a>
    1852:	83 37       	cpi	r24, 0x73	; 115
    1854:	71 f0       	breq	.+28     	; 0x1872 <vfprintf+0x12e>
    1856:	83 35       	cpi	r24, 0x53	; 83
    1858:	09 f0       	breq	.+2      	; 0x185c <vfprintf+0x118>
    185a:	59 c0       	rjmp	.+178    	; 0x190e <vfprintf+0x1ca>
    185c:	21 c0       	rjmp	.+66     	; 0x18a0 <vfprintf+0x15c>
    185e:	f8 01       	movw	r30, r16
    1860:	80 81       	ld	r24, Z
    1862:	89 83       	std	Y+1, r24	; 0x01
    1864:	0e 5f       	subi	r16, 0xFE	; 254
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	88 24       	eor	r8, r8
    186a:	83 94       	inc	r8
    186c:	91 2c       	mov	r9, r1
    186e:	53 01       	movw	r10, r6
    1870:	13 c0       	rjmp	.+38     	; 0x1898 <vfprintf+0x154>
    1872:	28 01       	movw	r4, r16
    1874:	f2 e0       	ldi	r31, 0x02	; 2
    1876:	4f 0e       	add	r4, r31
    1878:	51 1c       	adc	r5, r1
    187a:	f8 01       	movw	r30, r16
    187c:	a0 80       	ld	r10, Z
    187e:	b1 80       	ldd	r11, Z+1	; 0x01
    1880:	36 fe       	sbrs	r3, 6
    1882:	03 c0       	rjmp	.+6      	; 0x188a <vfprintf+0x146>
    1884:	69 2d       	mov	r22, r9
    1886:	70 e0       	ldi	r23, 0x00	; 0
    1888:	02 c0       	rjmp	.+4      	; 0x188e <vfprintf+0x14a>
    188a:	6f ef       	ldi	r22, 0xFF	; 255
    188c:	7f ef       	ldi	r23, 0xFF	; 255
    188e:	c5 01       	movw	r24, r10
    1890:	0e 94 8e 0d 	call	0x1b1c	; 0x1b1c <strnlen>
    1894:	4c 01       	movw	r8, r24
    1896:	82 01       	movw	r16, r4
    1898:	f3 2d       	mov	r31, r3
    189a:	ff 77       	andi	r31, 0x7F	; 127
    189c:	3f 2e       	mov	r3, r31
    189e:	16 c0       	rjmp	.+44     	; 0x18cc <vfprintf+0x188>
    18a0:	28 01       	movw	r4, r16
    18a2:	22 e0       	ldi	r18, 0x02	; 2
    18a4:	42 0e       	add	r4, r18
    18a6:	51 1c       	adc	r5, r1
    18a8:	f8 01       	movw	r30, r16
    18aa:	a0 80       	ld	r10, Z
    18ac:	b1 80       	ldd	r11, Z+1	; 0x01
    18ae:	36 fe       	sbrs	r3, 6
    18b0:	03 c0       	rjmp	.+6      	; 0x18b8 <vfprintf+0x174>
    18b2:	69 2d       	mov	r22, r9
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	02 c0       	rjmp	.+4      	; 0x18bc <vfprintf+0x178>
    18b8:	6f ef       	ldi	r22, 0xFF	; 255
    18ba:	7f ef       	ldi	r23, 0xFF	; 255
    18bc:	c5 01       	movw	r24, r10
    18be:	0e 94 83 0d 	call	0x1b06	; 0x1b06 <strnlen_P>
    18c2:	4c 01       	movw	r8, r24
    18c4:	f3 2d       	mov	r31, r3
    18c6:	f0 68       	ori	r31, 0x80	; 128
    18c8:	3f 2e       	mov	r3, r31
    18ca:	82 01       	movw	r16, r4
    18cc:	33 fc       	sbrc	r3, 3
    18ce:	1b c0       	rjmp	.+54     	; 0x1906 <vfprintf+0x1c2>
    18d0:	82 2d       	mov	r24, r2
    18d2:	90 e0       	ldi	r25, 0x00	; 0
    18d4:	88 16       	cp	r8, r24
    18d6:	99 06       	cpc	r9, r25
    18d8:	b0 f4       	brcc	.+44     	; 0x1906 <vfprintf+0x1c2>
    18da:	b6 01       	movw	r22, r12
    18dc:	80 e2       	ldi	r24, 0x20	; 32
    18de:	90 e0       	ldi	r25, 0x00	; 0
    18e0:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    18e4:	2a 94       	dec	r2
    18e6:	f4 cf       	rjmp	.-24     	; 0x18d0 <vfprintf+0x18c>
    18e8:	f5 01       	movw	r30, r10
    18ea:	37 fc       	sbrc	r3, 7
    18ec:	85 91       	lpm	r24, Z+
    18ee:	37 fe       	sbrs	r3, 7
    18f0:	81 91       	ld	r24, Z+
    18f2:	5f 01       	movw	r10, r30
    18f4:	b6 01       	movw	r22, r12
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    18fc:	21 10       	cpse	r2, r1
    18fe:	2a 94       	dec	r2
    1900:	21 e0       	ldi	r18, 0x01	; 1
    1902:	82 1a       	sub	r8, r18
    1904:	91 08       	sbc	r9, r1
    1906:	81 14       	cp	r8, r1
    1908:	91 04       	cpc	r9, r1
    190a:	71 f7       	brne	.-36     	; 0x18e8 <vfprintf+0x1a4>
    190c:	e8 c0       	rjmp	.+464    	; 0x1ade <vfprintf+0x39a>
    190e:	84 36       	cpi	r24, 0x64	; 100
    1910:	11 f0       	breq	.+4      	; 0x1916 <vfprintf+0x1d2>
    1912:	89 36       	cpi	r24, 0x69	; 105
    1914:	41 f5       	brne	.+80     	; 0x1966 <vfprintf+0x222>
    1916:	f8 01       	movw	r30, r16
    1918:	37 fe       	sbrs	r3, 7
    191a:	07 c0       	rjmp	.+14     	; 0x192a <vfprintf+0x1e6>
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	82 81       	ldd	r24, Z+2	; 0x02
    1922:	93 81       	ldd	r25, Z+3	; 0x03
    1924:	0c 5f       	subi	r16, 0xFC	; 252
    1926:	1f 4f       	sbci	r17, 0xFF	; 255
    1928:	08 c0       	rjmp	.+16     	; 0x193a <vfprintf+0x1f6>
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	07 2e       	mov	r0, r23
    1930:	00 0c       	add	r0, r0
    1932:	88 0b       	sbc	r24, r24
    1934:	99 0b       	sbc	r25, r25
    1936:	0e 5f       	subi	r16, 0xFE	; 254
    1938:	1f 4f       	sbci	r17, 0xFF	; 255
    193a:	f3 2d       	mov	r31, r3
    193c:	ff 76       	andi	r31, 0x6F	; 111
    193e:	3f 2e       	mov	r3, r31
    1940:	97 ff       	sbrs	r25, 7
    1942:	09 c0       	rjmp	.+18     	; 0x1956 <vfprintf+0x212>
    1944:	90 95       	com	r25
    1946:	80 95       	com	r24
    1948:	70 95       	com	r23
    194a:	61 95       	neg	r22
    194c:	7f 4f       	sbci	r23, 0xFF	; 255
    194e:	8f 4f       	sbci	r24, 0xFF	; 255
    1950:	9f 4f       	sbci	r25, 0xFF	; 255
    1952:	f0 68       	ori	r31, 0x80	; 128
    1954:	3f 2e       	mov	r3, r31
    1956:	2a e0       	ldi	r18, 0x0A	; 10
    1958:	30 e0       	ldi	r19, 0x00	; 0
    195a:	a3 01       	movw	r20, r6
    195c:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <__ultoa_invert>
    1960:	88 2e       	mov	r8, r24
    1962:	86 18       	sub	r8, r6
    1964:	45 c0       	rjmp	.+138    	; 0x19f0 <vfprintf+0x2ac>
    1966:	85 37       	cpi	r24, 0x75	; 117
    1968:	31 f4       	brne	.+12     	; 0x1976 <vfprintf+0x232>
    196a:	23 2d       	mov	r18, r3
    196c:	2f 7e       	andi	r18, 0xEF	; 239
    196e:	b2 2e       	mov	r11, r18
    1970:	2a e0       	ldi	r18, 0x0A	; 10
    1972:	30 e0       	ldi	r19, 0x00	; 0
    1974:	25 c0       	rjmp	.+74     	; 0x19c0 <vfprintf+0x27c>
    1976:	93 2d       	mov	r25, r3
    1978:	99 7f       	andi	r25, 0xF9	; 249
    197a:	b9 2e       	mov	r11, r25
    197c:	8f 36       	cpi	r24, 0x6F	; 111
    197e:	c1 f0       	breq	.+48     	; 0x19b0 <vfprintf+0x26c>
    1980:	18 f4       	brcc	.+6      	; 0x1988 <vfprintf+0x244>
    1982:	88 35       	cpi	r24, 0x58	; 88
    1984:	79 f0       	breq	.+30     	; 0x19a4 <vfprintf+0x260>
    1986:	b5 c0       	rjmp	.+362    	; 0x1af2 <vfprintf+0x3ae>
    1988:	80 37       	cpi	r24, 0x70	; 112
    198a:	19 f0       	breq	.+6      	; 0x1992 <vfprintf+0x24e>
    198c:	88 37       	cpi	r24, 0x78	; 120
    198e:	21 f0       	breq	.+8      	; 0x1998 <vfprintf+0x254>
    1990:	b0 c0       	rjmp	.+352    	; 0x1af2 <vfprintf+0x3ae>
    1992:	e9 2f       	mov	r30, r25
    1994:	e0 61       	ori	r30, 0x10	; 16
    1996:	be 2e       	mov	r11, r30
    1998:	b4 fe       	sbrs	r11, 4
    199a:	0d c0       	rjmp	.+26     	; 0x19b6 <vfprintf+0x272>
    199c:	fb 2d       	mov	r31, r11
    199e:	f4 60       	ori	r31, 0x04	; 4
    19a0:	bf 2e       	mov	r11, r31
    19a2:	09 c0       	rjmp	.+18     	; 0x19b6 <vfprintf+0x272>
    19a4:	34 fe       	sbrs	r3, 4
    19a6:	0a c0       	rjmp	.+20     	; 0x19bc <vfprintf+0x278>
    19a8:	29 2f       	mov	r18, r25
    19aa:	26 60       	ori	r18, 0x06	; 6
    19ac:	b2 2e       	mov	r11, r18
    19ae:	06 c0       	rjmp	.+12     	; 0x19bc <vfprintf+0x278>
    19b0:	28 e0       	ldi	r18, 0x08	; 8
    19b2:	30 e0       	ldi	r19, 0x00	; 0
    19b4:	05 c0       	rjmp	.+10     	; 0x19c0 <vfprintf+0x27c>
    19b6:	20 e1       	ldi	r18, 0x10	; 16
    19b8:	30 e0       	ldi	r19, 0x00	; 0
    19ba:	02 c0       	rjmp	.+4      	; 0x19c0 <vfprintf+0x27c>
    19bc:	20 e1       	ldi	r18, 0x10	; 16
    19be:	32 e0       	ldi	r19, 0x02	; 2
    19c0:	f8 01       	movw	r30, r16
    19c2:	b7 fe       	sbrs	r11, 7
    19c4:	07 c0       	rjmp	.+14     	; 0x19d4 <vfprintf+0x290>
    19c6:	60 81       	ld	r22, Z
    19c8:	71 81       	ldd	r23, Z+1	; 0x01
    19ca:	82 81       	ldd	r24, Z+2	; 0x02
    19cc:	93 81       	ldd	r25, Z+3	; 0x03
    19ce:	0c 5f       	subi	r16, 0xFC	; 252
    19d0:	1f 4f       	sbci	r17, 0xFF	; 255
    19d2:	06 c0       	rjmp	.+12     	; 0x19e0 <vfprintf+0x29c>
    19d4:	60 81       	ld	r22, Z
    19d6:	71 81       	ldd	r23, Z+1	; 0x01
    19d8:	80 e0       	ldi	r24, 0x00	; 0
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 5f       	subi	r16, 0xFE	; 254
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	a3 01       	movw	r20, r6
    19e2:	0e 94 e5 0d 	call	0x1bca	; 0x1bca <__ultoa_invert>
    19e6:	88 2e       	mov	r8, r24
    19e8:	86 18       	sub	r8, r6
    19ea:	fb 2d       	mov	r31, r11
    19ec:	ff 77       	andi	r31, 0x7F	; 127
    19ee:	3f 2e       	mov	r3, r31
    19f0:	36 fe       	sbrs	r3, 6
    19f2:	0d c0       	rjmp	.+26     	; 0x1a0e <vfprintf+0x2ca>
    19f4:	23 2d       	mov	r18, r3
    19f6:	2e 7f       	andi	r18, 0xFE	; 254
    19f8:	a2 2e       	mov	r10, r18
    19fa:	89 14       	cp	r8, r9
    19fc:	58 f4       	brcc	.+22     	; 0x1a14 <vfprintf+0x2d0>
    19fe:	34 fe       	sbrs	r3, 4
    1a00:	0b c0       	rjmp	.+22     	; 0x1a18 <vfprintf+0x2d4>
    1a02:	32 fc       	sbrc	r3, 2
    1a04:	09 c0       	rjmp	.+18     	; 0x1a18 <vfprintf+0x2d4>
    1a06:	83 2d       	mov	r24, r3
    1a08:	8e 7e       	andi	r24, 0xEE	; 238
    1a0a:	a8 2e       	mov	r10, r24
    1a0c:	05 c0       	rjmp	.+10     	; 0x1a18 <vfprintf+0x2d4>
    1a0e:	b8 2c       	mov	r11, r8
    1a10:	a3 2c       	mov	r10, r3
    1a12:	03 c0       	rjmp	.+6      	; 0x1a1a <vfprintf+0x2d6>
    1a14:	b8 2c       	mov	r11, r8
    1a16:	01 c0       	rjmp	.+2      	; 0x1a1a <vfprintf+0x2d6>
    1a18:	b9 2c       	mov	r11, r9
    1a1a:	a4 fe       	sbrs	r10, 4
    1a1c:	0f c0       	rjmp	.+30     	; 0x1a3c <vfprintf+0x2f8>
    1a1e:	fe 01       	movw	r30, r28
    1a20:	e8 0d       	add	r30, r8
    1a22:	f1 1d       	adc	r31, r1
    1a24:	80 81       	ld	r24, Z
    1a26:	80 33       	cpi	r24, 0x30	; 48
    1a28:	21 f4       	brne	.+8      	; 0x1a32 <vfprintf+0x2ee>
    1a2a:	9a 2d       	mov	r25, r10
    1a2c:	99 7e       	andi	r25, 0xE9	; 233
    1a2e:	a9 2e       	mov	r10, r25
    1a30:	09 c0       	rjmp	.+18     	; 0x1a44 <vfprintf+0x300>
    1a32:	a2 fe       	sbrs	r10, 2
    1a34:	06 c0       	rjmp	.+12     	; 0x1a42 <vfprintf+0x2fe>
    1a36:	b3 94       	inc	r11
    1a38:	b3 94       	inc	r11
    1a3a:	04 c0       	rjmp	.+8      	; 0x1a44 <vfprintf+0x300>
    1a3c:	8a 2d       	mov	r24, r10
    1a3e:	86 78       	andi	r24, 0x86	; 134
    1a40:	09 f0       	breq	.+2      	; 0x1a44 <vfprintf+0x300>
    1a42:	b3 94       	inc	r11
    1a44:	a3 fc       	sbrc	r10, 3
    1a46:	11 c0       	rjmp	.+34     	; 0x1a6a <vfprintf+0x326>
    1a48:	a0 fe       	sbrs	r10, 0
    1a4a:	06 c0       	rjmp	.+12     	; 0x1a58 <vfprintf+0x314>
    1a4c:	b2 14       	cp	r11, r2
    1a4e:	88 f4       	brcc	.+34     	; 0x1a72 <vfprintf+0x32e>
    1a50:	28 0c       	add	r2, r8
    1a52:	92 2c       	mov	r9, r2
    1a54:	9b 18       	sub	r9, r11
    1a56:	0e c0       	rjmp	.+28     	; 0x1a74 <vfprintf+0x330>
    1a58:	b2 14       	cp	r11, r2
    1a5a:	60 f4       	brcc	.+24     	; 0x1a74 <vfprintf+0x330>
    1a5c:	b6 01       	movw	r22, r12
    1a5e:	80 e2       	ldi	r24, 0x20	; 32
    1a60:	90 e0       	ldi	r25, 0x00	; 0
    1a62:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1a66:	b3 94       	inc	r11
    1a68:	f7 cf       	rjmp	.-18     	; 0x1a58 <vfprintf+0x314>
    1a6a:	b2 14       	cp	r11, r2
    1a6c:	18 f4       	brcc	.+6      	; 0x1a74 <vfprintf+0x330>
    1a6e:	2b 18       	sub	r2, r11
    1a70:	02 c0       	rjmp	.+4      	; 0x1a76 <vfprintf+0x332>
    1a72:	98 2c       	mov	r9, r8
    1a74:	21 2c       	mov	r2, r1
    1a76:	a4 fe       	sbrs	r10, 4
    1a78:	10 c0       	rjmp	.+32     	; 0x1a9a <vfprintf+0x356>
    1a7a:	b6 01       	movw	r22, r12
    1a7c:	80 e3       	ldi	r24, 0x30	; 48
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1a84:	a2 fe       	sbrs	r10, 2
    1a86:	17 c0       	rjmp	.+46     	; 0x1ab6 <vfprintf+0x372>
    1a88:	a1 fc       	sbrc	r10, 1
    1a8a:	03 c0       	rjmp	.+6      	; 0x1a92 <vfprintf+0x34e>
    1a8c:	88 e7       	ldi	r24, 0x78	; 120
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	02 c0       	rjmp	.+4      	; 0x1a96 <vfprintf+0x352>
    1a92:	88 e5       	ldi	r24, 0x58	; 88
    1a94:	90 e0       	ldi	r25, 0x00	; 0
    1a96:	b6 01       	movw	r22, r12
    1a98:	0c c0       	rjmp	.+24     	; 0x1ab2 <vfprintf+0x36e>
    1a9a:	8a 2d       	mov	r24, r10
    1a9c:	86 78       	andi	r24, 0x86	; 134
    1a9e:	59 f0       	breq	.+22     	; 0x1ab6 <vfprintf+0x372>
    1aa0:	a1 fe       	sbrs	r10, 1
    1aa2:	02 c0       	rjmp	.+4      	; 0x1aa8 <vfprintf+0x364>
    1aa4:	8b e2       	ldi	r24, 0x2B	; 43
    1aa6:	01 c0       	rjmp	.+2      	; 0x1aaa <vfprintf+0x366>
    1aa8:	80 e2       	ldi	r24, 0x20	; 32
    1aaa:	a7 fc       	sbrc	r10, 7
    1aac:	8d e2       	ldi	r24, 0x2D	; 45
    1aae:	b6 01       	movw	r22, r12
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1ab6:	89 14       	cp	r8, r9
    1ab8:	38 f4       	brcc	.+14     	; 0x1ac8 <vfprintf+0x384>
    1aba:	b6 01       	movw	r22, r12
    1abc:	80 e3       	ldi	r24, 0x30	; 48
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1ac4:	9a 94       	dec	r9
    1ac6:	f7 cf       	rjmp	.-18     	; 0x1ab6 <vfprintf+0x372>
    1ac8:	8a 94       	dec	r8
    1aca:	f3 01       	movw	r30, r6
    1acc:	e8 0d       	add	r30, r8
    1ace:	f1 1d       	adc	r31, r1
    1ad0:	80 81       	ld	r24, Z
    1ad2:	b6 01       	movw	r22, r12
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1ada:	81 10       	cpse	r8, r1
    1adc:	f5 cf       	rjmp	.-22     	; 0x1ac8 <vfprintf+0x384>
    1ade:	22 20       	and	r2, r2
    1ae0:	09 f4       	brne	.+2      	; 0x1ae4 <vfprintf+0x3a0>
    1ae2:	42 ce       	rjmp	.-892    	; 0x1768 <vfprintf+0x24>
    1ae4:	b6 01       	movw	r22, r12
    1ae6:	80 e2       	ldi	r24, 0x20	; 32
    1ae8:	90 e0       	ldi	r25, 0x00	; 0
    1aea:	0e 94 a9 0d 	call	0x1b52	; 0x1b52 <fputc>
    1aee:	2a 94       	dec	r2
    1af0:	f6 cf       	rjmp	.-20     	; 0x1ade <vfprintf+0x39a>
    1af2:	f6 01       	movw	r30, r12
    1af4:	86 81       	ldd	r24, Z+6	; 0x06
    1af6:	97 81       	ldd	r25, Z+7	; 0x07
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <vfprintf+0x3ba>
    1afa:	8f ef       	ldi	r24, 0xFF	; 255
    1afc:	9f ef       	ldi	r25, 0xFF	; 255
    1afe:	2b 96       	adiw	r28, 0x0b	; 11
    1b00:	e2 e1       	ldi	r30, 0x12	; 18
    1b02:	0c 94 5f 0e 	jmp	0x1cbe	; 0x1cbe <__epilogue_restores__>

00001b06 <strnlen_P>:
    1b06:	fc 01       	movw	r30, r24
    1b08:	05 90       	lpm	r0, Z+
    1b0a:	61 50       	subi	r22, 0x01	; 1
    1b0c:	70 40       	sbci	r23, 0x00	; 0
    1b0e:	01 10       	cpse	r0, r1
    1b10:	d8 f7       	brcc	.-10     	; 0x1b08 <strnlen_P+0x2>
    1b12:	80 95       	com	r24
    1b14:	90 95       	com	r25
    1b16:	8e 0f       	add	r24, r30
    1b18:	9f 1f       	adc	r25, r31
    1b1a:	08 95       	ret

00001b1c <strnlen>:
    1b1c:	fc 01       	movw	r30, r24
    1b1e:	61 50       	subi	r22, 0x01	; 1
    1b20:	70 40       	sbci	r23, 0x00	; 0
    1b22:	01 90       	ld	r0, Z+
    1b24:	01 10       	cpse	r0, r1
    1b26:	d8 f7       	brcc	.-10     	; 0x1b1e <strnlen+0x2>
    1b28:	80 95       	com	r24
    1b2a:	90 95       	com	r25
    1b2c:	8e 0f       	add	r24, r30
    1b2e:	9f 1f       	adc	r25, r31
    1b30:	08 95       	ret

00001b32 <strrev>:
    1b32:	dc 01       	movw	r26, r24
    1b34:	fc 01       	movw	r30, r24
    1b36:	67 2f       	mov	r22, r23
    1b38:	71 91       	ld	r23, Z+
    1b3a:	77 23       	and	r23, r23
    1b3c:	e1 f7       	brne	.-8      	; 0x1b36 <strrev+0x4>
    1b3e:	32 97       	sbiw	r30, 0x02	; 2
    1b40:	04 c0       	rjmp	.+8      	; 0x1b4a <strrev+0x18>
    1b42:	7c 91       	ld	r23, X
    1b44:	6d 93       	st	X+, r22
    1b46:	70 83       	st	Z, r23
    1b48:	62 91       	ld	r22, -Z
    1b4a:	ae 17       	cp	r26, r30
    1b4c:	bf 07       	cpc	r27, r31
    1b4e:	c8 f3       	brcs	.-14     	; 0x1b42 <strrev+0x10>
    1b50:	08 95       	ret

00001b52 <fputc>:
    1b52:	0f 93       	push	r16
    1b54:	1f 93       	push	r17
    1b56:	cf 93       	push	r28
    1b58:	df 93       	push	r29
    1b5a:	fb 01       	movw	r30, r22
    1b5c:	23 81       	ldd	r18, Z+3	; 0x03
    1b5e:	21 fd       	sbrc	r18, 1
    1b60:	03 c0       	rjmp	.+6      	; 0x1b68 <fputc+0x16>
    1b62:	8f ef       	ldi	r24, 0xFF	; 255
    1b64:	9f ef       	ldi	r25, 0xFF	; 255
    1b66:	2c c0       	rjmp	.+88     	; 0x1bc0 <fputc+0x6e>
    1b68:	22 ff       	sbrs	r18, 2
    1b6a:	16 c0       	rjmp	.+44     	; 0x1b98 <fputc+0x46>
    1b6c:	46 81       	ldd	r20, Z+6	; 0x06
    1b6e:	57 81       	ldd	r21, Z+7	; 0x07
    1b70:	24 81       	ldd	r18, Z+4	; 0x04
    1b72:	35 81       	ldd	r19, Z+5	; 0x05
    1b74:	42 17       	cp	r20, r18
    1b76:	53 07       	cpc	r21, r19
    1b78:	44 f4       	brge	.+16     	; 0x1b8a <fputc+0x38>
    1b7a:	a0 81       	ld	r26, Z
    1b7c:	b1 81       	ldd	r27, Z+1	; 0x01
    1b7e:	9d 01       	movw	r18, r26
    1b80:	2f 5f       	subi	r18, 0xFF	; 255
    1b82:	3f 4f       	sbci	r19, 0xFF	; 255
    1b84:	31 83       	std	Z+1, r19	; 0x01
    1b86:	20 83       	st	Z, r18
    1b88:	8c 93       	st	X, r24
    1b8a:	26 81       	ldd	r18, Z+6	; 0x06
    1b8c:	37 81       	ldd	r19, Z+7	; 0x07
    1b8e:	2f 5f       	subi	r18, 0xFF	; 255
    1b90:	3f 4f       	sbci	r19, 0xFF	; 255
    1b92:	37 83       	std	Z+7, r19	; 0x07
    1b94:	26 83       	std	Z+6, r18	; 0x06
    1b96:	14 c0       	rjmp	.+40     	; 0x1bc0 <fputc+0x6e>
    1b98:	8b 01       	movw	r16, r22
    1b9a:	ec 01       	movw	r28, r24
    1b9c:	fb 01       	movw	r30, r22
    1b9e:	00 84       	ldd	r0, Z+8	; 0x08
    1ba0:	f1 85       	ldd	r31, Z+9	; 0x09
    1ba2:	e0 2d       	mov	r30, r0
    1ba4:	09 95       	icall
    1ba6:	89 2b       	or	r24, r25
    1ba8:	e1 f6       	brne	.-72     	; 0x1b62 <fputc+0x10>
    1baa:	d8 01       	movw	r26, r16
    1bac:	16 96       	adiw	r26, 0x06	; 6
    1bae:	8d 91       	ld	r24, X+
    1bb0:	9c 91       	ld	r25, X
    1bb2:	17 97       	sbiw	r26, 0x07	; 7
    1bb4:	01 96       	adiw	r24, 0x01	; 1
    1bb6:	17 96       	adiw	r26, 0x07	; 7
    1bb8:	9c 93       	st	X, r25
    1bba:	8e 93       	st	-X, r24
    1bbc:	16 97       	sbiw	r26, 0x06	; 6
    1bbe:	ce 01       	movw	r24, r28
    1bc0:	df 91       	pop	r29
    1bc2:	cf 91       	pop	r28
    1bc4:	1f 91       	pop	r17
    1bc6:	0f 91       	pop	r16
    1bc8:	08 95       	ret

00001bca <__ultoa_invert>:
    1bca:	fa 01       	movw	r30, r20
    1bcc:	aa 27       	eor	r26, r26
    1bce:	28 30       	cpi	r18, 0x08	; 8
    1bd0:	51 f1       	breq	.+84     	; 0x1c26 <__ultoa_invert+0x5c>
    1bd2:	20 31       	cpi	r18, 0x10	; 16
    1bd4:	81 f1       	breq	.+96     	; 0x1c36 <__ultoa_invert+0x6c>
    1bd6:	e8 94       	clt
    1bd8:	6f 93       	push	r22
    1bda:	6e 7f       	andi	r22, 0xFE	; 254
    1bdc:	6e 5f       	subi	r22, 0xFE	; 254
    1bde:	7f 4f       	sbci	r23, 0xFF	; 255
    1be0:	8f 4f       	sbci	r24, 0xFF	; 255
    1be2:	9f 4f       	sbci	r25, 0xFF	; 255
    1be4:	af 4f       	sbci	r26, 0xFF	; 255
    1be6:	b1 e0       	ldi	r27, 0x01	; 1
    1be8:	3e d0       	rcall	.+124    	; 0x1c66 <__ultoa_invert+0x9c>
    1bea:	b4 e0       	ldi	r27, 0x04	; 4
    1bec:	3c d0       	rcall	.+120    	; 0x1c66 <__ultoa_invert+0x9c>
    1bee:	67 0f       	add	r22, r23
    1bf0:	78 1f       	adc	r23, r24
    1bf2:	89 1f       	adc	r24, r25
    1bf4:	9a 1f       	adc	r25, r26
    1bf6:	a1 1d       	adc	r26, r1
    1bf8:	68 0f       	add	r22, r24
    1bfa:	79 1f       	adc	r23, r25
    1bfc:	8a 1f       	adc	r24, r26
    1bfe:	91 1d       	adc	r25, r1
    1c00:	a1 1d       	adc	r26, r1
    1c02:	6a 0f       	add	r22, r26
    1c04:	71 1d       	adc	r23, r1
    1c06:	81 1d       	adc	r24, r1
    1c08:	91 1d       	adc	r25, r1
    1c0a:	a1 1d       	adc	r26, r1
    1c0c:	20 d0       	rcall	.+64     	; 0x1c4e <__ultoa_invert+0x84>
    1c0e:	09 f4       	brne	.+2      	; 0x1c12 <__ultoa_invert+0x48>
    1c10:	68 94       	set
    1c12:	3f 91       	pop	r19
    1c14:	2a e0       	ldi	r18, 0x0A	; 10
    1c16:	26 9f       	mul	r18, r22
    1c18:	11 24       	eor	r1, r1
    1c1a:	30 19       	sub	r19, r0
    1c1c:	30 5d       	subi	r19, 0xD0	; 208
    1c1e:	31 93       	st	Z+, r19
    1c20:	de f6       	brtc	.-74     	; 0x1bd8 <__ultoa_invert+0xe>
    1c22:	cf 01       	movw	r24, r30
    1c24:	08 95       	ret
    1c26:	46 2f       	mov	r20, r22
    1c28:	47 70       	andi	r20, 0x07	; 7
    1c2a:	40 5d       	subi	r20, 0xD0	; 208
    1c2c:	41 93       	st	Z+, r20
    1c2e:	b3 e0       	ldi	r27, 0x03	; 3
    1c30:	0f d0       	rcall	.+30     	; 0x1c50 <__ultoa_invert+0x86>
    1c32:	c9 f7       	brne	.-14     	; 0x1c26 <__ultoa_invert+0x5c>
    1c34:	f6 cf       	rjmp	.-20     	; 0x1c22 <__ultoa_invert+0x58>
    1c36:	46 2f       	mov	r20, r22
    1c38:	4f 70       	andi	r20, 0x0F	; 15
    1c3a:	40 5d       	subi	r20, 0xD0	; 208
    1c3c:	4a 33       	cpi	r20, 0x3A	; 58
    1c3e:	18 f0       	brcs	.+6      	; 0x1c46 <__ultoa_invert+0x7c>
    1c40:	49 5d       	subi	r20, 0xD9	; 217
    1c42:	31 fd       	sbrc	r19, 1
    1c44:	40 52       	subi	r20, 0x20	; 32
    1c46:	41 93       	st	Z+, r20
    1c48:	02 d0       	rcall	.+4      	; 0x1c4e <__ultoa_invert+0x84>
    1c4a:	a9 f7       	brne	.-22     	; 0x1c36 <__ultoa_invert+0x6c>
    1c4c:	ea cf       	rjmp	.-44     	; 0x1c22 <__ultoa_invert+0x58>
    1c4e:	b4 e0       	ldi	r27, 0x04	; 4
    1c50:	a6 95       	lsr	r26
    1c52:	97 95       	ror	r25
    1c54:	87 95       	ror	r24
    1c56:	77 95       	ror	r23
    1c58:	67 95       	ror	r22
    1c5a:	ba 95       	dec	r27
    1c5c:	c9 f7       	brne	.-14     	; 0x1c50 <__ultoa_invert+0x86>
    1c5e:	00 97       	sbiw	r24, 0x00	; 0
    1c60:	61 05       	cpc	r22, r1
    1c62:	71 05       	cpc	r23, r1
    1c64:	08 95       	ret
    1c66:	9b 01       	movw	r18, r22
    1c68:	ac 01       	movw	r20, r24
    1c6a:	0a 2e       	mov	r0, r26
    1c6c:	06 94       	lsr	r0
    1c6e:	57 95       	ror	r21
    1c70:	47 95       	ror	r20
    1c72:	37 95       	ror	r19
    1c74:	27 95       	ror	r18
    1c76:	ba 95       	dec	r27
    1c78:	c9 f7       	brne	.-14     	; 0x1c6c <__ultoa_invert+0xa2>
    1c7a:	62 0f       	add	r22, r18
    1c7c:	73 1f       	adc	r23, r19
    1c7e:	84 1f       	adc	r24, r20
    1c80:	95 1f       	adc	r25, r21
    1c82:	a0 1d       	adc	r26, r0
    1c84:	08 95       	ret

00001c86 <__prologue_saves__>:
    1c86:	2f 92       	push	r2
    1c88:	3f 92       	push	r3
    1c8a:	4f 92       	push	r4
    1c8c:	5f 92       	push	r5
    1c8e:	6f 92       	push	r6
    1c90:	7f 92       	push	r7
    1c92:	8f 92       	push	r8
    1c94:	9f 92       	push	r9
    1c96:	af 92       	push	r10
    1c98:	bf 92       	push	r11
    1c9a:	cf 92       	push	r12
    1c9c:	df 92       	push	r13
    1c9e:	ef 92       	push	r14
    1ca0:	ff 92       	push	r15
    1ca2:	0f 93       	push	r16
    1ca4:	1f 93       	push	r17
    1ca6:	cf 93       	push	r28
    1ca8:	df 93       	push	r29
    1caa:	cd b7       	in	r28, 0x3d	; 61
    1cac:	de b7       	in	r29, 0x3e	; 62
    1cae:	ca 1b       	sub	r28, r26
    1cb0:	db 0b       	sbc	r29, r27
    1cb2:	0f b6       	in	r0, 0x3f	; 63
    1cb4:	f8 94       	cli
    1cb6:	de bf       	out	0x3e, r29	; 62
    1cb8:	0f be       	out	0x3f, r0	; 63
    1cba:	cd bf       	out	0x3d, r28	; 61
    1cbc:	09 94       	ijmp

00001cbe <__epilogue_restores__>:
    1cbe:	2a 88       	ldd	r2, Y+18	; 0x12
    1cc0:	39 88       	ldd	r3, Y+17	; 0x11
    1cc2:	48 88       	ldd	r4, Y+16	; 0x10
    1cc4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cc6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cc8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cca:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ccc:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cce:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cd0:	b9 84       	ldd	r11, Y+9	; 0x09
    1cd2:	c8 84       	ldd	r12, Y+8	; 0x08
    1cd4:	df 80       	ldd	r13, Y+7	; 0x07
    1cd6:	ee 80       	ldd	r14, Y+6	; 0x06
    1cd8:	fd 80       	ldd	r15, Y+5	; 0x05
    1cda:	0c 81       	ldd	r16, Y+4	; 0x04
    1cdc:	1b 81       	ldd	r17, Y+3	; 0x03
    1cde:	aa 81       	ldd	r26, Y+2	; 0x02
    1ce0:	b9 81       	ldd	r27, Y+1	; 0x01
    1ce2:	ce 0f       	add	r28, r30
    1ce4:	d1 1d       	adc	r29, r1
    1ce6:	0f b6       	in	r0, 0x3f	; 63
    1ce8:	f8 94       	cli
    1cea:	de bf       	out	0x3e, r29	; 62
    1cec:	0f be       	out	0x3f, r0	; 63
    1cee:	cd bf       	out	0x3d, r28	; 61
    1cf0:	ed 01       	movw	r28, r26
    1cf2:	08 95       	ret

00001cf4 <_exit>:
    1cf4:	f8 94       	cli

00001cf6 <__stop_program>:
    1cf6:	ff cf       	rjmp	.-2      	; 0x1cf6 <__stop_program>
