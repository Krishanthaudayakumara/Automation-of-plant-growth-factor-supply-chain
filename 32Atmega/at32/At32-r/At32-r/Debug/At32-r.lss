
At32-r.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006dc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  000006dc  00000750  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000075a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000078c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000007c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c8a  00000000  00000000  00000848  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000077c  00000000  00000000  000014d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004b2  00000000  00000000  00001c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  00002100  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041a  00000000  00000000  00002210  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000051a  00000000  00000000  0000262a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002b44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ed       	ldi	r30, 0xDC	; 220
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1f 01 	call	0x23e	; 0x23e <main>
  8a:	0c 94 6c 03 	jmp	0x6d8	; 0x6d8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcdcmd>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  92:	82 bb       	out	0x12, r24	; 18
  94:	84 e0       	ldi	r24, 0x04	; 4
  96:	88 bb       	out	0x18, r24	; 24
  98:	89 ef       	ldi	r24, 0xF9	; 249
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	01 97       	sbiw	r24, 0x01	; 1
  9e:	f1 f7       	brne	.-4      	; 0x9c <lcdcmd+0xa>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <lcdcmd+0x10>
  a2:	00 00       	nop
  a4:	18 ba       	out	0x18, r1	; 24
  a6:	83 ed       	ldi	r24, 0xD3	; 211
  a8:	90 e3       	ldi	r25, 0x30	; 48
  aa:	01 97       	sbiw	r24, 0x01	; 1
  ac:	f1 f7       	brne	.-4      	; 0xaa <lcdcmd+0x18>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <lcdcmd+0x1e>
  b0:	00 00       	nop
  b2:	08 95       	ret

000000b4 <lcdint>:
  b4:	88 e3       	ldi	r24, 0x38	; 56
  b6:	0e 94 49 00 	call	0x92	; 0x92 <lcdcmd>
  ba:	89 ef       	ldi	r24, 0xF9	; 249
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <lcdint+0xa>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <lcdint+0x10>
  c4:	00 00       	nop
  c6:	81 e0       	ldi	r24, 0x01	; 1
  c8:	0e 94 49 00 	call	0x92	; 0x92 <lcdcmd>
  cc:	89 ef       	ldi	r24, 0xF9	; 249
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	01 97       	sbiw	r24, 0x01	; 1
  d2:	f1 f7       	brne	.-4      	; 0xd0 <lcdint+0x1c>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <lcdint+0x22>
  d6:	00 00       	nop
  d8:	8e e0       	ldi	r24, 0x0E	; 14
  da:	0e 94 49 00 	call	0x92	; 0x92 <lcdcmd>
  de:	89 ef       	ldi	r24, 0xF9	; 249
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <lcdint+0x2e>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <lcdint+0x34>
  e8:	00 00       	nop
  ea:	08 95       	ret

000000ec <lcddata>:
  ec:	82 bb       	out	0x12, r24	; 18
  ee:	85 e0       	ldi	r24, 0x05	; 5
  f0:	88 bb       	out	0x18, r24	; 24
  f2:	89 ef       	ldi	r24, 0xF9	; 249
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	01 97       	sbiw	r24, 0x01	; 1
  f8:	f1 f7       	brne	.-4      	; 0xf6 <lcddata+0xa>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <lcddata+0x10>
  fc:	00 00       	nop
  fe:	81 e0       	ldi	r24, 0x01	; 1
 100:	88 bb       	out	0x18, r24	; 24
 102:	81 ee       	ldi	r24, 0xE1	; 225
 104:	94 e0       	ldi	r25, 0x04	; 4
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <lcddata+0x1a>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <lcddata+0x20>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <lcd_string>:
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	1f 93       	push	r17
 116:	cf 93       	push	r28
 118:	df 93       	push	r29
 11a:	7c 01       	movw	r14, r24
 11c:	16 2f       	mov	r17, r22
 11e:	c0 e0       	ldi	r28, 0x00	; 0
 120:	d0 e0       	ldi	r29, 0x00	; 0
 122:	07 c0       	rjmp	.+14     	; 0x132 <lcd_string+0x22>
 124:	f7 01       	movw	r30, r14
 126:	ec 0f       	add	r30, r28
 128:	fd 1f       	adc	r31, r29
 12a:	80 81       	ld	r24, Z
 12c:	0e 94 76 00 	call	0xec	; 0xec <lcddata>
 130:	21 96       	adiw	r28, 0x01	; 1
 132:	81 2f       	mov	r24, r17
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	c8 17       	cp	r28, r24
 138:	d9 07       	cpc	r29, r25
 13a:	a4 f3       	brlt	.-24     	; 0x124 <lcd_string+0x14>
 13c:	df 91       	pop	r29
 13e:	cf 91       	pop	r28
 140:	1f 91       	pop	r17
 142:	ff 90       	pop	r15
 144:	ef 90       	pop	r14
 146:	08 95       	ret

00000148 <lcd_clear>:
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	0e 94 49 00 	call	0x92	; 0x92 <lcdcmd>
 14e:	08 95       	ret

00000150 <lcd_line_one>:
 150:	80 e8       	ldi	r24, 0x80	; 128
 152:	0e 94 49 00 	call	0x92	; 0x92 <lcdcmd>
 156:	08 95       	ret

00000158 <adc_init>:

// initialize adc
void adc_init()
{
	// AREF = AVcc
	ADMUX = (1<<REFS0);
 158:	80 e4       	ldi	r24, 0x40	; 64
 15a:	87 b9       	out	0x07, r24	; 7
	
	// ADC Enable and prescaler of 128
	// 16000000/128 = 125000
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
 15c:	87 e8       	ldi	r24, 0x87	; 135
 15e:	86 b9       	out	0x06, r24	; 6
 160:	08 95       	ret

00000162 <adc_read>:
uint16_t adc_read(uint8_t ch)
{
	// select the corresponding channel 0~7
	// ANDing with '7' will always keep the value
	// of 'ch' between 0 and 7
	ch &= 0b00000111;  // AND operation with 7
 162:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;     // clears the bottom 3 bits before ORing
 164:	97 b1       	in	r25, 0x07	; 7
 166:	98 7f       	andi	r25, 0xF8	; 248
 168:	89 2b       	or	r24, r25
 16a:	87 b9       	out	0x07, r24	; 7
	
	// start single conversion
	// write '1' to ADSC
	ADCSRA |= (1<<ADSC);
 16c:	86 b1       	in	r24, 0x06	; 6
 16e:	80 64       	ori	r24, 0x40	; 64
 170:	86 b9       	out	0x06, r24	; 6
	
	// wait for conversion to complete
	// ADSC becomes '0' again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));
 172:	36 99       	sbic	0x06, 6	; 6
 174:	fe cf       	rjmp	.-4      	; 0x172 <adc_read+0x10>
	
	return (ADC);
 176:	84 b1       	in	r24, 0x04	; 4
 178:	95 b1       	in	r25, 0x05	; 5
 17a:	08 95       	ret

0000017c <ldrconfig>:
}



int ldrconfig()
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
 180:	cd b7       	in	r28, 0x3d	; 61
 182:	de b7       	in	r29, 0x3e	; 62
 184:	2a 97       	sbiw	r28, 0x0a	; 10
 186:	0f b6       	in	r0, 0x3f	; 63
 188:	f8 94       	cli
 18a:	de bf       	out	0x3e, r29	; 62
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	cd bf       	out	0x3d, r28	; 61
	float i, ldr, temp;
	char buffer[10];
	//DDRC = 0x01;           // to connect led to PC0
	
	// initialize adc and lcd
	adc_init();
 190:	0e 94 ac 00 	call	0x158	; 0x158 <adc_init>
	lcd_clear();
 194:	0e 94 a4 00 	call	0x148	; 0x148 <lcd_clear>
 198:	81 ee       	ldi	r24, 0xE1	; 225
 19a:	94 e0       	ldi	r25, 0x04	; 4
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <ldrconfig+0x20>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <ldrconfig+0x26>
 1a2:	00 00       	nop
	
	_delay_ms(5);
	
	while(1)
	{
		adc_result0 = adc_read(0);
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	0e 94 b1 00 	call	0x162	; 0x162 <adc_read>
		i=(adc_result0*0.01/2.1);
 1aa:	bc 01       	movw	r22, r24
 1ac:	80 e0       	ldi	r24, 0x00	; 0
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 3c 02 	call	0x478	; 0x478 <__floatunsisf>
 1b4:	2a e0       	ldi	r18, 0x0A	; 10
 1b6:	37 ed       	ldi	r19, 0xD7	; 215
 1b8:	43 e2       	ldi	r20, 0x23	; 35
 1ba:	5c e3       	ldi	r21, 0x3C	; 60
 1bc:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 1c0:	26 e6       	ldi	r18, 0x66	; 102
 1c2:	36 e6       	ldi	r19, 0x66	; 102
 1c4:	46 e0       	ldi	r20, 0x06	; 6
 1c6:	50 e4       	ldi	r21, 0x40	; 64
 1c8:	0e 94 94 01 	call	0x328	; 0x328 <__divsf3>
 1cc:	6b 01       	movw	r12, r22
 1ce:	7c 01       	movw	r14, r24
		ldr = (i*10.0/(5.0-i));     // read adc value at PA0
 1d0:	20 e0       	ldi	r18, 0x00	; 0
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	40 e2       	ldi	r20, 0x20	; 32
 1d6:	51 e4       	ldi	r21, 0x41	; 65
 1d8:	0e 94 ca 02 	call	0x594	; 0x594 <__mulsf3>
 1dc:	4b 01       	movw	r8, r22
 1de:	5c 01       	movw	r10, r24
 1e0:	a7 01       	movw	r20, r14
 1e2:	96 01       	movw	r18, r12
 1e4:	60 e0       	ldi	r22, 0x00	; 0
 1e6:	70 e0       	ldi	r23, 0x00	; 0
 1e8:	80 ea       	ldi	r24, 0xA0	; 160
 1ea:	90 e4       	ldi	r25, 0x40	; 64
 1ec:	0e 94 27 01 	call	0x24e	; 0x24e <__subsf3>
 1f0:	9b 01       	movw	r18, r22
 1f2:	ac 01       	movw	r20, r24
 1f4:	c5 01       	movw	r24, r10
 1f6:	b4 01       	movw	r22, r8
 1f8:	0e 94 94 01 	call	0x328	; 0x328 <__divsf3>
 1fc:	6b 01       	movw	r12, r22
 1fe:	7c 01       	movw	r14, r24
		

		//i=(adc_result0*0.01/2.1);
		//ldr = (i*10/(5-i));
		
		lcd_line_one();
 200:	0e 94 a8 00 	call	0x150	; 0x150 <lcd_line_one>
		lcd_string("LDR VAL:",9);
 204:	69 e0       	ldi	r22, 0x09	; 9
 206:	80 e6       	ldi	r24, 0x60	; 96
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	0e 94 88 00 	call	0x110	; 0x110 <lcd_string>
		itoa(ldr,buffer,10);   //display ADC value
 20e:	c7 01       	movw	r24, r14
 210:	b6 01       	movw	r22, r12
 212:	0e 94 06 02 	call	0x40c	; 0x40c <__fixsfsi>
 216:	dc 01       	movw	r26, r24
 218:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
 21a:	4a e0       	ldi	r20, 0x0A	; 10
 21c:	be 01       	movw	r22, r28
 21e:	6f 5f       	subi	r22, 0xFF	; 255
 220:	7f 4f       	sbci	r23, 0xFF	; 255
 222:	0e 94 37 03 	call	0x66e	; 0x66e <__itoa_ncheck>
		lcd_string(buffer,5);
 226:	65 e0       	ldi	r22, 0x05	; 5
 228:	ce 01       	movw	r24, r28
 22a:	01 96       	adiw	r24, 0x01	; 1
 22c:	0e 94 88 00 	call	0x110	; 0x110 <lcd_string>
 230:	83 ec       	ldi	r24, 0xC3	; 195
 232:	99 e0       	ldi	r25, 0x09	; 9
 234:	01 97       	sbiw	r24, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <ldrconfig+0xb8>
 238:	00 c0       	rjmp	.+0      	; 0x23a <ldrconfig+0xbe>
 23a:	00 00       	nop
 23c:	b3 cf       	rjmp	.-154    	; 0x1a4 <ldrconfig+0x28>

0000023e <main>:

int ldrconfig();

int main(void)
{
	DDRB=0xff;
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	87 bb       	out	0x17, r24	; 23
	DDRD=0x07;
 242:	87 e0       	ldi	r24, 0x07	; 7
 244:	81 bb       	out	0x11, r24	; 17
    /* Replace with your application code */
	lcdint();
 246:	0e 94 5a 00 	call	0xb4	; 0xb4 <lcdint>
	ldrconfig();
 24a:	0e 94 be 00 	call	0x17c	; 0x17c <ldrconfig>

0000024e <__subsf3>:
 24e:	50 58       	subi	r21, 0x80	; 128

00000250 <__addsf3>:
 250:	bb 27       	eor	r27, r27
 252:	aa 27       	eor	r26, r26
 254:	0e 94 3f 01 	call	0x27e	; 0x27e <__addsf3x>
 258:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_round>
 25c:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscA>
 260:	38 f0       	brcs	.+14     	; 0x270 <__addsf3+0x20>
 262:	0e 94 89 02 	call	0x512	; 0x512 <__fp_pscB>
 266:	20 f0       	brcs	.+8      	; 0x270 <__addsf3+0x20>
 268:	39 f4       	brne	.+14     	; 0x278 <__addsf3+0x28>
 26a:	9f 3f       	cpi	r25, 0xFF	; 255
 26c:	19 f4       	brne	.+6      	; 0x274 <__addsf3+0x24>
 26e:	26 f4       	brtc	.+8      	; 0x278 <__addsf3+0x28>
 270:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_nan>
 274:	0e f4       	brtc	.+2      	; 0x278 <__addsf3+0x28>
 276:	e0 95       	com	r30
 278:	e7 fb       	bst	r30, 7
 27a:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_inf>

0000027e <__addsf3x>:
 27e:	e9 2f       	mov	r30, r25
 280:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_split3>
 284:	58 f3       	brcs	.-42     	; 0x25c <__addsf3+0xc>
 286:	ba 17       	cp	r27, r26
 288:	62 07       	cpc	r22, r18
 28a:	73 07       	cpc	r23, r19
 28c:	84 07       	cpc	r24, r20
 28e:	95 07       	cpc	r25, r21
 290:	20 f0       	brcs	.+8      	; 0x29a <__addsf3x+0x1c>
 292:	79 f4       	brne	.+30     	; 0x2b2 <__addsf3x+0x34>
 294:	a6 f5       	brtc	.+104    	; 0x2fe <__addsf3x+0x80>
 296:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_zero>
 29a:	0e f4       	brtc	.+2      	; 0x29e <__addsf3x+0x20>
 29c:	e0 95       	com	r30
 29e:	0b 2e       	mov	r0, r27
 2a0:	ba 2f       	mov	r27, r26
 2a2:	a0 2d       	mov	r26, r0
 2a4:	0b 01       	movw	r0, r22
 2a6:	b9 01       	movw	r22, r18
 2a8:	90 01       	movw	r18, r0
 2aa:	0c 01       	movw	r0, r24
 2ac:	ca 01       	movw	r24, r20
 2ae:	a0 01       	movw	r20, r0
 2b0:	11 24       	eor	r1, r1
 2b2:	ff 27       	eor	r31, r31
 2b4:	59 1b       	sub	r21, r25
 2b6:	99 f0       	breq	.+38     	; 0x2de <__addsf3x+0x60>
 2b8:	59 3f       	cpi	r21, 0xF9	; 249
 2ba:	50 f4       	brcc	.+20     	; 0x2d0 <__addsf3x+0x52>
 2bc:	50 3e       	cpi	r21, 0xE0	; 224
 2be:	68 f1       	brcs	.+90     	; 0x31a <__addsf3x+0x9c>
 2c0:	1a 16       	cp	r1, r26
 2c2:	f0 40       	sbci	r31, 0x00	; 0
 2c4:	a2 2f       	mov	r26, r18
 2c6:	23 2f       	mov	r18, r19
 2c8:	34 2f       	mov	r19, r20
 2ca:	44 27       	eor	r20, r20
 2cc:	58 5f       	subi	r21, 0xF8	; 248
 2ce:	f3 cf       	rjmp	.-26     	; 0x2b6 <__addsf3x+0x38>
 2d0:	46 95       	lsr	r20
 2d2:	37 95       	ror	r19
 2d4:	27 95       	ror	r18
 2d6:	a7 95       	ror	r26
 2d8:	f0 40       	sbci	r31, 0x00	; 0
 2da:	53 95       	inc	r21
 2dc:	c9 f7       	brne	.-14     	; 0x2d0 <__addsf3x+0x52>
 2de:	7e f4       	brtc	.+30     	; 0x2fe <__addsf3x+0x80>
 2e0:	1f 16       	cp	r1, r31
 2e2:	ba 0b       	sbc	r27, r26
 2e4:	62 0b       	sbc	r22, r18
 2e6:	73 0b       	sbc	r23, r19
 2e8:	84 0b       	sbc	r24, r20
 2ea:	ba f0       	brmi	.+46     	; 0x31a <__addsf3x+0x9c>
 2ec:	91 50       	subi	r25, 0x01	; 1
 2ee:	a1 f0       	breq	.+40     	; 0x318 <__addsf3x+0x9a>
 2f0:	ff 0f       	add	r31, r31
 2f2:	bb 1f       	adc	r27, r27
 2f4:	66 1f       	adc	r22, r22
 2f6:	77 1f       	adc	r23, r23
 2f8:	88 1f       	adc	r24, r24
 2fa:	c2 f7       	brpl	.-16     	; 0x2ec <__addsf3x+0x6e>
 2fc:	0e c0       	rjmp	.+28     	; 0x31a <__addsf3x+0x9c>
 2fe:	ba 0f       	add	r27, r26
 300:	62 1f       	adc	r22, r18
 302:	73 1f       	adc	r23, r19
 304:	84 1f       	adc	r24, r20
 306:	48 f4       	brcc	.+18     	; 0x31a <__addsf3x+0x9c>
 308:	87 95       	ror	r24
 30a:	77 95       	ror	r23
 30c:	67 95       	ror	r22
 30e:	b7 95       	ror	r27
 310:	f7 95       	ror	r31
 312:	9e 3f       	cpi	r25, 0xFE	; 254
 314:	08 f0       	brcs	.+2      	; 0x318 <__addsf3x+0x9a>
 316:	b0 cf       	rjmp	.-160    	; 0x278 <__addsf3+0x28>
 318:	93 95       	inc	r25
 31a:	88 0f       	add	r24, r24
 31c:	08 f0       	brcs	.+2      	; 0x320 <__addsf3x+0xa2>
 31e:	99 27       	eor	r25, r25
 320:	ee 0f       	add	r30, r30
 322:	97 95       	ror	r25
 324:	87 95       	ror	r24
 326:	08 95       	ret

00000328 <__divsf3>:
 328:	0e 94 a8 01 	call	0x350	; 0x350 <__divsf3x>
 32c:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_round>
 330:	0e 94 89 02 	call	0x512	; 0x512 <__fp_pscB>
 334:	58 f0       	brcs	.+22     	; 0x34c <__divsf3+0x24>
 336:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscA>
 33a:	40 f0       	brcs	.+16     	; 0x34c <__divsf3+0x24>
 33c:	29 f4       	brne	.+10     	; 0x348 <__divsf3+0x20>
 33e:	5f 3f       	cpi	r21, 0xFF	; 255
 340:	29 f0       	breq	.+10     	; 0x34c <__divsf3+0x24>
 342:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_inf>
 346:	51 11       	cpse	r21, r1
 348:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_szero>
 34c:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_nan>

00000350 <__divsf3x>:
 350:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_split3>
 354:	68 f3       	brcs	.-38     	; 0x330 <__divsf3+0x8>

00000356 <__divsf3_pse>:
 356:	99 23       	and	r25, r25
 358:	b1 f3       	breq	.-20     	; 0x346 <__divsf3+0x1e>
 35a:	55 23       	and	r21, r21
 35c:	91 f3       	breq	.-28     	; 0x342 <__divsf3+0x1a>
 35e:	95 1b       	sub	r25, r21
 360:	55 0b       	sbc	r21, r21
 362:	bb 27       	eor	r27, r27
 364:	aa 27       	eor	r26, r26
 366:	62 17       	cp	r22, r18
 368:	73 07       	cpc	r23, r19
 36a:	84 07       	cpc	r24, r20
 36c:	38 f0       	brcs	.+14     	; 0x37c <__divsf3_pse+0x26>
 36e:	9f 5f       	subi	r25, 0xFF	; 255
 370:	5f 4f       	sbci	r21, 0xFF	; 255
 372:	22 0f       	add	r18, r18
 374:	33 1f       	adc	r19, r19
 376:	44 1f       	adc	r20, r20
 378:	aa 1f       	adc	r26, r26
 37a:	a9 f3       	breq	.-22     	; 0x366 <__divsf3_pse+0x10>
 37c:	35 d0       	rcall	.+106    	; 0x3e8 <__divsf3_pse+0x92>
 37e:	0e 2e       	mov	r0, r30
 380:	3a f0       	brmi	.+14     	; 0x390 <__divsf3_pse+0x3a>
 382:	e0 e8       	ldi	r30, 0x80	; 128
 384:	32 d0       	rcall	.+100    	; 0x3ea <__divsf3_pse+0x94>
 386:	91 50       	subi	r25, 0x01	; 1
 388:	50 40       	sbci	r21, 0x00	; 0
 38a:	e6 95       	lsr	r30
 38c:	00 1c       	adc	r0, r0
 38e:	ca f7       	brpl	.-14     	; 0x382 <__divsf3_pse+0x2c>
 390:	2b d0       	rcall	.+86     	; 0x3e8 <__divsf3_pse+0x92>
 392:	fe 2f       	mov	r31, r30
 394:	29 d0       	rcall	.+82     	; 0x3e8 <__divsf3_pse+0x92>
 396:	66 0f       	add	r22, r22
 398:	77 1f       	adc	r23, r23
 39a:	88 1f       	adc	r24, r24
 39c:	bb 1f       	adc	r27, r27
 39e:	26 17       	cp	r18, r22
 3a0:	37 07       	cpc	r19, r23
 3a2:	48 07       	cpc	r20, r24
 3a4:	ab 07       	cpc	r26, r27
 3a6:	b0 e8       	ldi	r27, 0x80	; 128
 3a8:	09 f0       	breq	.+2      	; 0x3ac <__divsf3_pse+0x56>
 3aa:	bb 0b       	sbc	r27, r27
 3ac:	80 2d       	mov	r24, r0
 3ae:	bf 01       	movw	r22, r30
 3b0:	ff 27       	eor	r31, r31
 3b2:	93 58       	subi	r25, 0x83	; 131
 3b4:	5f 4f       	sbci	r21, 0xFF	; 255
 3b6:	3a f0       	brmi	.+14     	; 0x3c6 <__divsf3_pse+0x70>
 3b8:	9e 3f       	cpi	r25, 0xFE	; 254
 3ba:	51 05       	cpc	r21, r1
 3bc:	78 f0       	brcs	.+30     	; 0x3dc <__divsf3_pse+0x86>
 3be:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_inf>
 3c2:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_szero>
 3c6:	5f 3f       	cpi	r21, 0xFF	; 255
 3c8:	e4 f3       	brlt	.-8      	; 0x3c2 <__divsf3_pse+0x6c>
 3ca:	98 3e       	cpi	r25, 0xE8	; 232
 3cc:	d4 f3       	brlt	.-12     	; 0x3c2 <__divsf3_pse+0x6c>
 3ce:	86 95       	lsr	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b7 95       	ror	r27
 3d6:	f7 95       	ror	r31
 3d8:	9f 5f       	subi	r25, 0xFF	; 255
 3da:	c9 f7       	brne	.-14     	; 0x3ce <__divsf3_pse+0x78>
 3dc:	88 0f       	add	r24, r24
 3de:	91 1d       	adc	r25, r1
 3e0:	96 95       	lsr	r25
 3e2:	87 95       	ror	r24
 3e4:	97 f9       	bld	r25, 7
 3e6:	08 95       	ret
 3e8:	e1 e0       	ldi	r30, 0x01	; 1
 3ea:	66 0f       	add	r22, r22
 3ec:	77 1f       	adc	r23, r23
 3ee:	88 1f       	adc	r24, r24
 3f0:	bb 1f       	adc	r27, r27
 3f2:	62 17       	cp	r22, r18
 3f4:	73 07       	cpc	r23, r19
 3f6:	84 07       	cpc	r24, r20
 3f8:	ba 07       	cpc	r27, r26
 3fa:	20 f0       	brcs	.+8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 3fc:	62 1b       	sub	r22, r18
 3fe:	73 0b       	sbc	r23, r19
 400:	84 0b       	sbc	r24, r20
 402:	ba 0b       	sbc	r27, r26
 404:	ee 1f       	adc	r30, r30
 406:	88 f7       	brcc	.-30     	; 0x3ea <__divsf3_pse+0x94>
 408:	e0 95       	com	r30
 40a:	08 95       	ret

0000040c <__fixsfsi>:
 40c:	0e 94 0d 02 	call	0x41a	; 0x41a <__fixunssfsi>
 410:	68 94       	set
 412:	b1 11       	cpse	r27, r1
 414:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_szero>
 418:	08 95       	ret

0000041a <__fixunssfsi>:
 41a:	0e 94 a9 02 	call	0x552	; 0x552 <__fp_splitA>
 41e:	88 f0       	brcs	.+34     	; 0x442 <__fixunssfsi+0x28>
 420:	9f 57       	subi	r25, 0x7F	; 127
 422:	98 f0       	brcs	.+38     	; 0x44a <__fixunssfsi+0x30>
 424:	b9 2f       	mov	r27, r25
 426:	99 27       	eor	r25, r25
 428:	b7 51       	subi	r27, 0x17	; 23
 42a:	b0 f0       	brcs	.+44     	; 0x458 <__fixunssfsi+0x3e>
 42c:	e1 f0       	breq	.+56     	; 0x466 <__fixunssfsi+0x4c>
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	1a f0       	brmi	.+6      	; 0x43e <__fixunssfsi+0x24>
 438:	ba 95       	dec	r27
 43a:	c9 f7       	brne	.-14     	; 0x42e <__fixunssfsi+0x14>
 43c:	14 c0       	rjmp	.+40     	; 0x466 <__fixunssfsi+0x4c>
 43e:	b1 30       	cpi	r27, 0x01	; 1
 440:	91 f0       	breq	.+36     	; 0x466 <__fixunssfsi+0x4c>
 442:	0e 94 c3 02 	call	0x586	; 0x586 <__fp_zero>
 446:	b1 e0       	ldi	r27, 0x01	; 1
 448:	08 95       	ret
 44a:	0c 94 c3 02 	jmp	0x586	; 0x586 <__fp_zero>
 44e:	67 2f       	mov	r22, r23
 450:	78 2f       	mov	r23, r24
 452:	88 27       	eor	r24, r24
 454:	b8 5f       	subi	r27, 0xF8	; 248
 456:	39 f0       	breq	.+14     	; 0x466 <__fixunssfsi+0x4c>
 458:	b9 3f       	cpi	r27, 0xF9	; 249
 45a:	cc f3       	brlt	.-14     	; 0x44e <__fixunssfsi+0x34>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b3 95       	inc	r27
 464:	d9 f7       	brne	.-10     	; 0x45c <__fixunssfsi+0x42>
 466:	3e f4       	brtc	.+14     	; 0x476 <__fixunssfsi+0x5c>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	08 95       	ret

00000478 <__floatunsisf>:
 478:	e8 94       	clt
 47a:	09 c0       	rjmp	.+18     	; 0x48e <__floatsisf+0x12>

0000047c <__floatsisf>:
 47c:	97 fb       	bst	r25, 7
 47e:	3e f4       	brtc	.+14     	; 0x48e <__floatsisf+0x12>
 480:	90 95       	com	r25
 482:	80 95       	com	r24
 484:	70 95       	com	r23
 486:	61 95       	neg	r22
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	99 23       	and	r25, r25
 490:	a9 f0       	breq	.+42     	; 0x4bc <__floatsisf+0x40>
 492:	f9 2f       	mov	r31, r25
 494:	96 e9       	ldi	r25, 0x96	; 150
 496:	bb 27       	eor	r27, r27
 498:	93 95       	inc	r25
 49a:	f6 95       	lsr	r31
 49c:	87 95       	ror	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f1 11       	cpse	r31, r1
 4a6:	f8 cf       	rjmp	.-16     	; 0x498 <__floatsisf+0x1c>
 4a8:	fa f4       	brpl	.+62     	; 0x4e8 <__floatsisf+0x6c>
 4aa:	bb 0f       	add	r27, r27
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <__floatsisf+0x36>
 4ae:	60 ff       	sbrs	r22, 0
 4b0:	1b c0       	rjmp	.+54     	; 0x4e8 <__floatsisf+0x6c>
 4b2:	6f 5f       	subi	r22, 0xFF	; 255
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	8f 4f       	sbci	r24, 0xFF	; 255
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	16 c0       	rjmp	.+44     	; 0x4e8 <__floatsisf+0x6c>
 4bc:	88 23       	and	r24, r24
 4be:	11 f0       	breq	.+4      	; 0x4c4 <__floatsisf+0x48>
 4c0:	96 e9       	ldi	r25, 0x96	; 150
 4c2:	11 c0       	rjmp	.+34     	; 0x4e6 <__floatsisf+0x6a>
 4c4:	77 23       	and	r23, r23
 4c6:	21 f0       	breq	.+8      	; 0x4d0 <__floatsisf+0x54>
 4c8:	9e e8       	ldi	r25, 0x8E	; 142
 4ca:	87 2f       	mov	r24, r23
 4cc:	76 2f       	mov	r23, r22
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <__floatsisf+0x5e>
 4d0:	66 23       	and	r22, r22
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <__floatsisf+0x74>
 4d4:	96 e8       	ldi	r25, 0x86	; 134
 4d6:	86 2f       	mov	r24, r22
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	60 e0       	ldi	r22, 0x00	; 0
 4dc:	2a f0       	brmi	.+10     	; 0x4e8 <__floatsisf+0x6c>
 4de:	9a 95       	dec	r25
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	da f7       	brpl	.-10     	; 0x4de <__floatsisf+0x62>
 4e8:	88 0f       	add	r24, r24
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret

000004f2 <__fp_inf>:
 4f2:	97 f9       	bld	r25, 7
 4f4:	9f 67       	ori	r25, 0x7F	; 127
 4f6:	80 e8       	ldi	r24, 0x80	; 128
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	60 e0       	ldi	r22, 0x00	; 0
 4fc:	08 95       	ret

000004fe <__fp_nan>:
 4fe:	9f ef       	ldi	r25, 0xFF	; 255
 500:	80 ec       	ldi	r24, 0xC0	; 192
 502:	08 95       	ret

00000504 <__fp_pscA>:
 504:	00 24       	eor	r0, r0
 506:	0a 94       	dec	r0
 508:	16 16       	cp	r1, r22
 50a:	17 06       	cpc	r1, r23
 50c:	18 06       	cpc	r1, r24
 50e:	09 06       	cpc	r0, r25
 510:	08 95       	ret

00000512 <__fp_pscB>:
 512:	00 24       	eor	r0, r0
 514:	0a 94       	dec	r0
 516:	12 16       	cp	r1, r18
 518:	13 06       	cpc	r1, r19
 51a:	14 06       	cpc	r1, r20
 51c:	05 06       	cpc	r0, r21
 51e:	08 95       	ret

00000520 <__fp_round>:
 520:	09 2e       	mov	r0, r25
 522:	03 94       	inc	r0
 524:	00 0c       	add	r0, r0
 526:	11 f4       	brne	.+4      	; 0x52c <__fp_round+0xc>
 528:	88 23       	and	r24, r24
 52a:	52 f0       	brmi	.+20     	; 0x540 <__fp_round+0x20>
 52c:	bb 0f       	add	r27, r27
 52e:	40 f4       	brcc	.+16     	; 0x540 <__fp_round+0x20>
 530:	bf 2b       	or	r27, r31
 532:	11 f4       	brne	.+4      	; 0x538 <__fp_round+0x18>
 534:	60 ff       	sbrs	r22, 0
 536:	04 c0       	rjmp	.+8      	; 0x540 <__fp_round+0x20>
 538:	6f 5f       	subi	r22, 0xFF	; 255
 53a:	7f 4f       	sbci	r23, 0xFF	; 255
 53c:	8f 4f       	sbci	r24, 0xFF	; 255
 53e:	9f 4f       	sbci	r25, 0xFF	; 255
 540:	08 95       	ret

00000542 <__fp_split3>:
 542:	57 fd       	sbrc	r21, 7
 544:	90 58       	subi	r25, 0x80	; 128
 546:	44 0f       	add	r20, r20
 548:	55 1f       	adc	r21, r21
 54a:	59 f0       	breq	.+22     	; 0x562 <__fp_splitA+0x10>
 54c:	5f 3f       	cpi	r21, 0xFF	; 255
 54e:	71 f0       	breq	.+28     	; 0x56c <__fp_splitA+0x1a>
 550:	47 95       	ror	r20

00000552 <__fp_splitA>:
 552:	88 0f       	add	r24, r24
 554:	97 fb       	bst	r25, 7
 556:	99 1f       	adc	r25, r25
 558:	61 f0       	breq	.+24     	; 0x572 <__fp_splitA+0x20>
 55a:	9f 3f       	cpi	r25, 0xFF	; 255
 55c:	79 f0       	breq	.+30     	; 0x57c <__fp_splitA+0x2a>
 55e:	87 95       	ror	r24
 560:	08 95       	ret
 562:	12 16       	cp	r1, r18
 564:	13 06       	cpc	r1, r19
 566:	14 06       	cpc	r1, r20
 568:	55 1f       	adc	r21, r21
 56a:	f2 cf       	rjmp	.-28     	; 0x550 <__fp_split3+0xe>
 56c:	46 95       	lsr	r20
 56e:	f1 df       	rcall	.-30     	; 0x552 <__fp_splitA>
 570:	08 c0       	rjmp	.+16     	; 0x582 <__fp_splitA+0x30>
 572:	16 16       	cp	r1, r22
 574:	17 06       	cpc	r1, r23
 576:	18 06       	cpc	r1, r24
 578:	99 1f       	adc	r25, r25
 57a:	f1 cf       	rjmp	.-30     	; 0x55e <__fp_splitA+0xc>
 57c:	86 95       	lsr	r24
 57e:	71 05       	cpc	r23, r1
 580:	61 05       	cpc	r22, r1
 582:	08 94       	sec
 584:	08 95       	ret

00000586 <__fp_zero>:
 586:	e8 94       	clt

00000588 <__fp_szero>:
 588:	bb 27       	eor	r27, r27
 58a:	66 27       	eor	r22, r22
 58c:	77 27       	eor	r23, r23
 58e:	cb 01       	movw	r24, r22
 590:	97 f9       	bld	r25, 7
 592:	08 95       	ret

00000594 <__mulsf3>:
 594:	0e 94 dd 02 	call	0x5ba	; 0x5ba <__mulsf3x>
 598:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_round>
 59c:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscA>
 5a0:	38 f0       	brcs	.+14     	; 0x5b0 <__mulsf3+0x1c>
 5a2:	0e 94 89 02 	call	0x512	; 0x512 <__fp_pscB>
 5a6:	20 f0       	brcs	.+8      	; 0x5b0 <__mulsf3+0x1c>
 5a8:	95 23       	and	r25, r21
 5aa:	11 f0       	breq	.+4      	; 0x5b0 <__mulsf3+0x1c>
 5ac:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_inf>
 5b0:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <__fp_nan>
 5b4:	11 24       	eor	r1, r1
 5b6:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_szero>

000005ba <__mulsf3x>:
 5ba:	0e 94 a1 02 	call	0x542	; 0x542 <__fp_split3>
 5be:	70 f3       	brcs	.-36     	; 0x59c <__mulsf3+0x8>

000005c0 <__mulsf3_pse>:
 5c0:	95 9f       	mul	r25, r21
 5c2:	c1 f3       	breq	.-16     	; 0x5b4 <__mulsf3+0x20>
 5c4:	95 0f       	add	r25, r21
 5c6:	50 e0       	ldi	r21, 0x00	; 0
 5c8:	55 1f       	adc	r21, r21
 5ca:	62 9f       	mul	r22, r18
 5cc:	f0 01       	movw	r30, r0
 5ce:	72 9f       	mul	r23, r18
 5d0:	bb 27       	eor	r27, r27
 5d2:	f0 0d       	add	r31, r0
 5d4:	b1 1d       	adc	r27, r1
 5d6:	63 9f       	mul	r22, r19
 5d8:	aa 27       	eor	r26, r26
 5da:	f0 0d       	add	r31, r0
 5dc:	b1 1d       	adc	r27, r1
 5de:	aa 1f       	adc	r26, r26
 5e0:	64 9f       	mul	r22, r20
 5e2:	66 27       	eor	r22, r22
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	66 1f       	adc	r22, r22
 5ea:	82 9f       	mul	r24, r18
 5ec:	22 27       	eor	r18, r18
 5ee:	b0 0d       	add	r27, r0
 5f0:	a1 1d       	adc	r26, r1
 5f2:	62 1f       	adc	r22, r18
 5f4:	73 9f       	mul	r23, r19
 5f6:	b0 0d       	add	r27, r0
 5f8:	a1 1d       	adc	r26, r1
 5fa:	62 1f       	adc	r22, r18
 5fc:	83 9f       	mul	r24, r19
 5fe:	a0 0d       	add	r26, r0
 600:	61 1d       	adc	r22, r1
 602:	22 1f       	adc	r18, r18
 604:	74 9f       	mul	r23, r20
 606:	33 27       	eor	r19, r19
 608:	a0 0d       	add	r26, r0
 60a:	61 1d       	adc	r22, r1
 60c:	23 1f       	adc	r18, r19
 60e:	84 9f       	mul	r24, r20
 610:	60 0d       	add	r22, r0
 612:	21 1d       	adc	r18, r1
 614:	82 2f       	mov	r24, r18
 616:	76 2f       	mov	r23, r22
 618:	6a 2f       	mov	r22, r26
 61a:	11 24       	eor	r1, r1
 61c:	9f 57       	subi	r25, 0x7F	; 127
 61e:	50 40       	sbci	r21, 0x00	; 0
 620:	9a f0       	brmi	.+38     	; 0x648 <__mulsf3_pse+0x88>
 622:	f1 f0       	breq	.+60     	; 0x660 <__mulsf3_pse+0xa0>
 624:	88 23       	and	r24, r24
 626:	4a f0       	brmi	.+18     	; 0x63a <__mulsf3_pse+0x7a>
 628:	ee 0f       	add	r30, r30
 62a:	ff 1f       	adc	r31, r31
 62c:	bb 1f       	adc	r27, r27
 62e:	66 1f       	adc	r22, r22
 630:	77 1f       	adc	r23, r23
 632:	88 1f       	adc	r24, r24
 634:	91 50       	subi	r25, 0x01	; 1
 636:	50 40       	sbci	r21, 0x00	; 0
 638:	a9 f7       	brne	.-22     	; 0x624 <__mulsf3_pse+0x64>
 63a:	9e 3f       	cpi	r25, 0xFE	; 254
 63c:	51 05       	cpc	r21, r1
 63e:	80 f0       	brcs	.+32     	; 0x660 <__mulsf3_pse+0xa0>
 640:	0c 94 79 02 	jmp	0x4f2	; 0x4f2 <__fp_inf>
 644:	0c 94 c4 02 	jmp	0x588	; 0x588 <__fp_szero>
 648:	5f 3f       	cpi	r21, 0xFF	; 255
 64a:	e4 f3       	brlt	.-8      	; 0x644 <__mulsf3_pse+0x84>
 64c:	98 3e       	cpi	r25, 0xE8	; 232
 64e:	d4 f3       	brlt	.-12     	; 0x644 <__mulsf3_pse+0x84>
 650:	86 95       	lsr	r24
 652:	77 95       	ror	r23
 654:	67 95       	ror	r22
 656:	b7 95       	ror	r27
 658:	f7 95       	ror	r31
 65a:	e7 95       	ror	r30
 65c:	9f 5f       	subi	r25, 0xFF	; 255
 65e:	c1 f7       	brne	.-16     	; 0x650 <__mulsf3_pse+0x90>
 660:	fe 2b       	or	r31, r30
 662:	88 0f       	add	r24, r24
 664:	91 1d       	adc	r25, r1
 666:	96 95       	lsr	r25
 668:	87 95       	ror	r24
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <__itoa_ncheck>:
 66e:	bb 27       	eor	r27, r27
 670:	4a 30       	cpi	r20, 0x0A	; 10
 672:	31 f4       	brne	.+12     	; 0x680 <__itoa_ncheck+0x12>
 674:	99 23       	and	r25, r25
 676:	22 f4       	brpl	.+8      	; 0x680 <__itoa_ncheck+0x12>
 678:	bd e2       	ldi	r27, 0x2D	; 45
 67a:	90 95       	com	r25
 67c:	81 95       	neg	r24
 67e:	9f 4f       	sbci	r25, 0xFF	; 255
 680:	0c 94 43 03 	jmp	0x686	; 0x686 <__utoa_common>

00000684 <__utoa_ncheck>:
 684:	bb 27       	eor	r27, r27

00000686 <__utoa_common>:
 686:	fb 01       	movw	r30, r22
 688:	55 27       	eor	r21, r21
 68a:	aa 27       	eor	r26, r26
 68c:	88 0f       	add	r24, r24
 68e:	99 1f       	adc	r25, r25
 690:	aa 1f       	adc	r26, r26
 692:	a4 17       	cp	r26, r20
 694:	10 f0       	brcs	.+4      	; 0x69a <__utoa_common+0x14>
 696:	a4 1b       	sub	r26, r20
 698:	83 95       	inc	r24
 69a:	50 51       	subi	r21, 0x10	; 16
 69c:	b9 f7       	brne	.-18     	; 0x68c <__utoa_common+0x6>
 69e:	a0 5d       	subi	r26, 0xD0	; 208
 6a0:	aa 33       	cpi	r26, 0x3A	; 58
 6a2:	08 f0       	brcs	.+2      	; 0x6a6 <__utoa_common+0x20>
 6a4:	a9 5d       	subi	r26, 0xD9	; 217
 6a6:	a1 93       	st	Z+, r26
 6a8:	00 97       	sbiw	r24, 0x00	; 0
 6aa:	79 f7       	brne	.-34     	; 0x68a <__utoa_common+0x4>
 6ac:	b1 11       	cpse	r27, r1
 6ae:	b1 93       	st	Z+, r27
 6b0:	11 92       	st	Z+, r1
 6b2:	cb 01       	movw	r24, r22
 6b4:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <strrev>

000006b8 <strrev>:
 6b8:	dc 01       	movw	r26, r24
 6ba:	fc 01       	movw	r30, r24
 6bc:	67 2f       	mov	r22, r23
 6be:	71 91       	ld	r23, Z+
 6c0:	77 23       	and	r23, r23
 6c2:	e1 f7       	brne	.-8      	; 0x6bc <strrev+0x4>
 6c4:	32 97       	sbiw	r30, 0x02	; 2
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <strrev+0x18>
 6c8:	7c 91       	ld	r23, X
 6ca:	6d 93       	st	X+, r22
 6cc:	70 83       	st	Z, r23
 6ce:	62 91       	ld	r22, -Z
 6d0:	ae 17       	cp	r26, r30
 6d2:	bf 07       	cpc	r27, r31
 6d4:	c8 f3       	brcs	.-14     	; 0x6c8 <strrev+0x10>
 6d6:	08 95       	ret

000006d8 <_exit>:
 6d8:	f8 94       	cli

000006da <__stop_program>:
 6da:	ff cf       	rjmp	.-2      	; 0x6da <__stop_program>
