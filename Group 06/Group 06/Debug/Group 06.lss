
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00001626  000016ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001626  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800196  00800196  00001750  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001750  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015e9  00000000  00000000  00001878  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a59  00000000  00000000  00002e61  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000086b  00000000  00000000  000038ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00004128  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055d  00000000  00000000  000042ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bff  00000000  00000000  00004849  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00005448  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__addsf3x+0x72>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e6 e2       	ldi	r30, 0x26	; 38
     122:	f6 e1       	ldi	r31, 0x16	; 22
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	a6 39       	cpi	r26, 0x96	; 150
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	a6 e9       	ldi	r26, 0x96	; 150
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	ab 39       	cpi	r26, 0x9B	; 155
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <main>
     144:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <lcd_clear>:


void lcd_clear()
{
	lcdcmd(0x01);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     20e:	08 95       	ret

00000210 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     216:	08 95       	ret

00000218 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     218:	80 ec       	ldi	r24, 0xC0	; 192
     21a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     21e:	08 95       	ret

00000220 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     220:	8f ee       	ldi	r24, 0xEF	; 239
     222:	82 bb       	out	0x12, r24	; 18
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x8>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0xe>
     22e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     230:	80 9b       	sbis	0x10, 0	; 16
     232:	30 c0       	rjmp	.+96     	; 0x294 <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     234:	81 9b       	sbis	0x10, 1	; 16
     236:	30 c0       	rjmp	.+96     	; 0x298 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     238:	82 9b       	sbis	0x10, 2	; 16
     23a:	30 c0       	rjmp	.+96     	; 0x29c <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     23c:	8f ed       	ldi	r24, 0xDF	; 223
     23e:	82 bb       	out	0x12, r24	; 18
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x24>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x2a>
     24a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     24c:	80 9b       	sbis	0x10, 0	; 16
     24e:	28 c0       	rjmp	.+80     	; 0x2a0 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     250:	81 9b       	sbis	0x10, 1	; 16
     252:	28 c0       	rjmp	.+80     	; 0x2a4 <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     254:	82 9b       	sbis	0x10, 2	; 16
     256:	28 c0       	rjmp	.+80     	; 0x2a8 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     258:	8f eb       	ldi	r24, 0xBF	; 191
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	83 ec       	ldi	r24, 0xC3	; 195
     25e:	99 e0       	ldi	r25, 0x09	; 9
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <keycheck+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <keycheck+0x46>
     266:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     268:	80 9b       	sbis	0x10, 0	; 16
     26a:	20 c0       	rjmp	.+64     	; 0x2ac <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     26c:	81 9b       	sbis	0x10, 1	; 16
     26e:	20 c0       	rjmp	.+64     	; 0x2b0 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     270:	82 9b       	sbis	0x10, 2	; 16
     272:	20 c0       	rjmp	.+64     	; 0x2b4 <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     274:	8f e7       	ldi	r24, 0x7F	; 127
     276:	82 bb       	out	0x12, r24	; 18
     278:	83 ec       	ldi	r24, 0xC3	; 195
     27a:	99 e0       	ldi	r25, 0x09	; 9
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <keycheck+0x5c>
     280:	00 c0       	rjmp	.+0      	; 0x282 <keycheck+0x62>
     282:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     284:	80 9b       	sbis	0x10, 0	; 16
     286:	18 c0       	rjmp	.+48     	; 0x2b8 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     288:	81 9b       	sbis	0x10, 1	; 16
     28a:	18 c0       	rjmp	.+48     	; 0x2bc <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     28c:	82 99       	sbic	0x10, 2	; 16
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <keycheck+0xa0>
	{
		return '#';
     290:	83 e2       	ldi	r24, 0x23	; 35
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     294:	81 e3       	ldi	r24, 0x31	; 49
     296:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     298:	82 e3       	ldi	r24, 0x32	; 50
     29a:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     2a0:	84 e3       	ldi	r24, 0x34	; 52
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     2a4:	85 e3       	ldi	r24, 0x35	; 53
     2a6:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     2a8:	86 e3       	ldi	r24, 0x36	; 54
     2aa:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     2ac:	87 e3       	ldi	r24, 0x37	; 55
     2ae:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     2b4:	89 e3       	ldi	r24, 0x39	; 57
     2b6:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2b8:	8a e2       	ldi	r24, 0x2A	; 42
     2ba:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2bc:	80 e3       	ldi	r24, 0x30	; 48
     2be:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2c0:	81 e6       	ldi	r24, 0x61	; 97

}
     2c2:	08 95       	ret

000002c4 <scankey>:

char scankey()
{
	char key='a';
     2c4:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <scankey+0x8>
	{
		key=keycheck();
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2cc:	81 36       	cpi	r24, 0x61	; 97
     2ce:	e1 f3       	breq	.-8      	; 0x2c8 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2d0:	08 95       	ret

000002d2 <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2d2:	84 b3       	in	r24, 0x14	; 20
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	84 bb       	out	0x14, r24	; 20
     2d8:	08 95       	ret

000002da <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2da:	85 b3       	in	r24, 0x15	; 21
     2dc:	81 60       	ori	r24, 0x01	; 1
     2de:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	85 e0       	ldi	r24, 0x05	; 5
     2e2:	8a 95       	dec	r24
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2e6:	85 b3       	in	r24, 0x15	; 21
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	85 bb       	out	0x15, r24	; 21
     2ec:	08 95       	ret

000002ee <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c0 e0       	ldi	r28, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	f1 2c       	mov	r15, r1
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	15 c0       	rjmp	.+42     	; 0x342 <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     318:	99 99       	sbic	0x13, 1	; 19
     31a:	25 c0       	rjmp	.+74     	; 0x366 <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     31c:	2d 2f       	mov	r18, r29
     31e:	3c 2f       	mov	r19, r28
     320:	4b 2f       	mov	r20, r27
     322:	5a 2f       	mov	r21, r26
     324:	6f 2f       	mov	r22, r31
     326:	7f 2d       	mov	r23, r15
     328:	80 2f       	mov	r24, r16
     32a:	91 2f       	mov	r25, r17
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__adddi3_s8>
     332:	d2 2f       	mov	r29, r18
     334:	c3 2f       	mov	r28, r19
     336:	b4 2f       	mov	r27, r20
     338:	a5 2f       	mov	r26, r21
     33a:	f6 2f       	mov	r31, r22
     33c:	f7 2e       	mov	r15, r23
     33e:	08 2f       	mov	r16, r24
     340:	19 2f       	mov	r17, r25
     342:	2d 2f       	mov	r18, r29
     344:	3c 2f       	mov	r19, r28
     346:	4b 2f       	mov	r20, r27
     348:	5a 2f       	mov	r21, r26
     34a:	6f 2f       	mov	r22, r31
     34c:	7f 2d       	mov	r23, r15
     34e:	80 2f       	mov	r24, r16
     350:	91 2f       	mov	r25, r17
     352:	2f 3b       	cpi	r18, 0xBF	; 191
     354:	37 42       	sbci	r19, 0x27	; 39
     356:	49 40       	sbci	r20, 0x09	; 9
     358:	51 05       	cpc	r21, r1
     35a:	61 05       	cpc	r22, r1
     35c:	71 05       	cpc	r23, r1
     35e:	81 05       	cpc	r24, r1
     360:	91 05       	cpc	r25, r1
     362:	d1 f2       	breq	.-76     	; 0x318 <GetPulseWidth+0x2a>
     364:	c8 f2       	brcs	.-78     	; 0x318 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     366:	2d 2f       	mov	r18, r29
     368:	3c 2f       	mov	r19, r28
     36a:	4b 2f       	mov	r20, r27
     36c:	5a 2f       	mov	r21, r26
     36e:	6f 2f       	mov	r22, r31
     370:	7f 2d       	mov	r23, r15
     372:	80 2f       	mov	r24, r16
     374:	91 2f       	mov	r25, r17
     376:	20 3c       	cpi	r18, 0xC0	; 192
     378:	37 42       	sbci	r19, 0x27	; 39
     37a:	49 40       	sbci	r20, 0x09	; 9
     37c:	51 05       	cpc	r21, r1
     37e:	61 05       	cpc	r22, r1
     380:	71 05       	cpc	r23, r1
     382:	81 05       	cpc	r24, r1
     384:	91 05       	cpc	r25, r1
     386:	09 f4       	brne	.+2      	; 0x38a <GetPulseWidth+0x9c>
     388:	69 c0       	rjmp	.+210    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	return US_ERROR;
	
	TCCR1A=0X00;
     38a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     394:	d0 e0       	ldi	r29, 0x00	; 0
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	f1 2c       	mov	r15, r1
     3a0:	00 e0       	ldi	r16, 0x00	; 0
     3a2:	10 e0       	ldi	r17, 0x00	; 0
     3a4:	1a c0       	rjmp	.+52     	; 0x3da <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3a6:	99 9b       	sbis	0x13, 1	; 19
     3a8:	2a c0       	rjmp	.+84     	; 0x3fe <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     3aa:	8c b5       	in	r24, 0x2c	; 44
     3ac:	9d b5       	in	r25, 0x2d	; 45
     3ae:	81 36       	cpi	r24, 0x61	; 97
     3b0:	9a 4e       	sbci	r25, 0xEA	; 234
     3b2:	28 f5       	brcc	.+74     	; 0x3fe <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     3b4:	2d 2f       	mov	r18, r29
     3b6:	3c 2f       	mov	r19, r28
     3b8:	4b 2f       	mov	r20, r27
     3ba:	5a 2f       	mov	r21, r26
     3bc:	6f 2f       	mov	r22, r31
     3be:	7f 2d       	mov	r23, r15
     3c0:	80 2f       	mov	r24, r16
     3c2:	91 2f       	mov	r25, r17
     3c4:	a1 e0       	ldi	r26, 0x01	; 1
     3c6:	0e 94 e6 07 	call	0xfcc	; 0xfcc <__adddi3_s8>
     3ca:	d2 2f       	mov	r29, r18
     3cc:	c3 2f       	mov	r28, r19
     3ce:	b4 2f       	mov	r27, r20
     3d0:	a5 2f       	mov	r26, r21
     3d2:	f6 2f       	mov	r31, r22
     3d4:	f7 2e       	mov	r15, r23
     3d6:	08 2f       	mov	r16, r24
     3d8:	19 2f       	mov	r17, r25
     3da:	2d 2f       	mov	r18, r29
     3dc:	3c 2f       	mov	r19, r28
     3de:	4b 2f       	mov	r20, r27
     3e0:	5a 2f       	mov	r21, r26
     3e2:	6f 2f       	mov	r22, r31
     3e4:	7f 2d       	mov	r23, r15
     3e6:	80 2f       	mov	r24, r16
     3e8:	91 2f       	mov	r25, r17
     3ea:	2f 3b       	cpi	r18, 0xBF	; 191
     3ec:	37 42       	sbci	r19, 0x27	; 39
     3ee:	49 40       	sbci	r20, 0x09	; 9
     3f0:	51 05       	cpc	r21, r1
     3f2:	61 05       	cpc	r22, r1
     3f4:	71 05       	cpc	r23, r1
     3f6:	81 05       	cpc	r24, r1
     3f8:	91 05       	cpc	r25, r1
     3fa:	a9 f2       	breq	.-86     	; 0x3a6 <GetPulseWidth+0xb8>
     3fc:	a0 f2       	brcs	.-88     	; 0x3a6 <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3fe:	2d 2f       	mov	r18, r29
     400:	3c 2f       	mov	r19, r28
     402:	4b 2f       	mov	r20, r27
     404:	5a 2f       	mov	r21, r26
     406:	6f 2f       	mov	r22, r31
     408:	7f 2d       	mov	r23, r15
     40a:	80 2f       	mov	r24, r16
     40c:	91 2f       	mov	r25, r17
     40e:	20 3c       	cpi	r18, 0xC0	; 192
     410:	37 42       	sbci	r19, 0x27	; 39
     412:	49 40       	sbci	r20, 0x09	; 9
     414:	51 05       	cpc	r21, r1
     416:	61 05       	cpc	r22, r1
     418:	71 05       	cpc	r23, r1
     41a:	81 05       	cpc	r24, r1
     41c:	91 05       	cpc	r25, r1
     41e:	19 f1       	breq	.+70     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	return US_NO_OBSTACLE;

	result=TCNT1;
     420:	8c b4       	in	r8, 0x2c	; 44
     422:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     424:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     426:	28 2d       	mov	r18, r8
     428:	39 2d       	mov	r19, r9
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	20 36       	cpi	r18, 0x60	; 96
     438:	ea ee       	ldi	r30, 0xEA	; 234
     43a:	3e 07       	cpc	r19, r30
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	61 05       	cpc	r22, r1
     442:	71 05       	cpc	r23, r1
     444:	81 05       	cpc	r24, r1
     446:	91 05       	cpc	r25, r1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	90 f4       	brcc	.+36     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     44c:	01 e0       	ldi	r16, 0x01	; 1
     44e:	0e 94 ca 07 	call	0xf94	; 0xf94 <__lshrdi3>
     452:	62 2f       	mov	r22, r18
     454:	73 2f       	mov	r23, r19
     456:	84 2f       	mov	r24, r20
     458:	95 2f       	mov	r25, r21
     45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	7f ef       	ldi	r23, 0xFF	; 255
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     466:	6e ef       	ldi	r22, 0xFE	; 254
     468:	7f ef       	ldi	r23, 0xFF	; 255
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     470:	6e ef       	ldi	r22, 0xFE	; 254
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <displayKey>:




int displayKey()
{
     492:	4f 92       	push	r4
     494:	5f 92       	push	r5
     496:	6f 92       	push	r6
     498:	7f 92       	push	r7
     49a:	8f 92       	push	r8
     49c:	9f 92       	push	r9
     49e:	af 92       	push	r10
     4a0:	bf 92       	push	r11
     4a2:	cf 92       	push	r12
     4a4:	df 92       	push	r13
     4a6:	ef 92       	push	r14
     4a8:	ff 92       	push	r15
     4aa:	0f 93       	push	r16
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62
     4b6:	64 97       	sbiw	r28, 0x14	; 20
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     4c2:	00 e0       	ldi	r16, 0x00	; 0
     4c4:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     4c6:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     4ca:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <key>
		lcddata(key);
     4ce:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     4d2:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <key>
     4d6:	83 32       	cpi	r24, 0x23	; 35
     4d8:	c9 f0       	breq	.+50     	; 0x50c <displayKey+0x7a>
		tmpNum = charToInt(key);
     4da:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     4de:	f8 01       	movw	r30, r16
     4e0:	ee 0f       	add	r30, r30
     4e2:	ff 1f       	adc	r31, r31
     4e4:	21 e0       	ldi	r18, 0x01	; 1
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	2c 0f       	add	r18, r28
     4ea:	3d 1f       	adc	r19, r29
     4ec:	e2 0f       	add	r30, r18
     4ee:	f3 1f       	adc	r31, r19
     4f0:	91 83       	std	Z+1, r25	; 0x01
     4f2:	80 83       	st	Z, r24
		i++;
     4f4:	0f 5f       	subi	r16, 0xFF	; 255
     4f6:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4f8:	3f e5       	ldi	r19, 0x5F	; 95
     4fa:	8a ee       	ldi	r24, 0xEA	; 234
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	31 50       	subi	r19, 0x01	; 1
     500:	80 40       	sbci	r24, 0x00	; 0
     502:	90 40       	sbci	r25, 0x00	; 0
     504:	e1 f7       	brne	.-8      	; 0x4fe <displayKey+0x6c>
     506:	00 c0       	rjmp	.+0      	; 0x508 <displayKey+0x76>
     508:	00 00       	nop
     50a:	dd cf       	rjmp	.-70     	; 0x4c6 <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     50c:	58 01       	movw	r10, r16
     50e:	21 e0       	ldi	r18, 0x01	; 1
     510:	a2 1a       	sub	r10, r18
     512:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     514:	e1 2c       	mov	r14, r1
     516:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     518:	81 2c       	mov	r8, r1
     51a:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     51c:	3b c0       	rjmp	.+118    	; 0x594 <displayKey+0x102>
		num += data[j]*pow(10,k);
     51e:	f7 01       	movw	r30, r14
     520:	ee 0f       	add	r30, r30
     522:	ff 1f       	adc	r31, r31
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	8c 0f       	add	r24, r28
     52a:	9d 1f       	adc	r25, r29
     52c:	e8 0f       	add	r30, r24
     52e:	f9 1f       	adc	r31, r25
     530:	c0 80       	ld	r12, Z
     532:	d1 80       	ldd	r13, Z+1	; 0x01
     534:	b5 01       	movw	r22, r10
     536:	0b 2c       	mov	r0, r11
     538:	00 0c       	add	r0, r0
     53a:	88 0b       	sbc	r24, r24
     53c:	99 0b       	sbc	r25, r25
     53e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__floatsisf>
     542:	9b 01       	movw	r18, r22
     544:	ac 01       	movw	r20, r24
     546:	60 e0       	ldi	r22, 0x00	; 0
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	80 e2       	ldi	r24, 0x20	; 32
     54c:	91 e4       	ldi	r25, 0x41	; 65
     54e:	0e 94 d1 05 	call	0xba2	; 0xba2 <pow>
     552:	2b 01       	movw	r4, r22
     554:	3c 01       	movw	r6, r24
     556:	b6 01       	movw	r22, r12
     558:	dd 0c       	add	r13, r13
     55a:	88 0b       	sbc	r24, r24
     55c:	99 0b       	sbc	r25, r25
     55e:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__floatsisf>
     562:	a3 01       	movw	r20, r6
     564:	92 01       	movw	r18, r4
     566:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     56a:	2b 01       	movw	r4, r22
     56c:	3c 01       	movw	r6, r24
     56e:	b4 01       	movw	r22, r8
     570:	99 0c       	add	r9, r9
     572:	88 0b       	sbc	r24, r24
     574:	99 0b       	sbc	r25, r25
     576:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__floatsisf>
     57a:	a3 01       	movw	r20, r6
     57c:	92 01       	movw	r18, r4
     57e:	0e 94 34 04 	call	0x868	; 0x868 <__addsf3>
     582:	0e 94 a0 04 	call	0x940	; 0x940 <__fixsfsi>
     586:	4b 01       	movw	r8, r22
		k--;
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	a9 1a       	sub	r10, r25
     58c:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     58e:	2f ef       	ldi	r18, 0xFF	; 255
     590:	e2 1a       	sub	r14, r18
     592:	f2 0a       	sbc	r15, r18
     594:	e0 16       	cp	r14, r16
     596:	f1 06       	cpc	r15, r17
     598:	14 f2       	brlt	.-124    	; 0x51e <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     5a0:	c4 01       	movw	r24, r8
     5a2:	64 96       	adiw	r28, 0x14	; 20
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
     5ae:	df 91       	pop	r29
     5b0:	cf 91       	pop	r28
     5b2:	1f 91       	pop	r17
     5b4:	0f 91       	pop	r16
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	bf 90       	pop	r11
     5c0:	af 90       	pop	r10
     5c2:	9f 90       	pop	r9
     5c4:	8f 90       	pop	r8
     5c6:	7f 90       	pop	r7
     5c8:	6f 90       	pop	r6
     5ca:	5f 90       	pop	r5
     5cc:	4f 90       	pop	r4
     5ce:	08 95       	ret

000005d0 <main>:



int main(void)

{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	2a 97       	sbiw	r28, 0x0a	; 10
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	f8 94       	cli
     5de:	de bf       	out	0x3e, r29	; 62
     5e0:	0f be       	out	0x3f, r0	; 63
     5e2:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     5e4:	8f ef       	ldi	r24, 0xFF	; 255
     5e6:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     5e8:	87 e0       	ldi	r24, 0x07	; 7
     5ea:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     5ec:	80 ef       	ldi	r24, 0xF0	; 240
     5ee:	81 bb       	out	0x11, r24	; 17

	char key;

	lcdint();
     5f0:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     5f4:	6e e0       	ldi	r22, 0x0E	; 14
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     5fe:	2f e7       	ldi	r18, 0x7F	; 127
     600:	89 ea       	ldi	r24, 0xA9	; 169
     602:	93 e0       	ldi	r25, 0x03	; 3
     604:	21 50       	subi	r18, 0x01	; 1
     606:	80 40       	sbci	r24, 0x00	; 0
     608:	90 40       	sbci	r25, 0x00	; 0
     60a:	e1 f7       	brne	.-8      	; 0x604 <main+0x34>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <main+0x3e>
     60e:	00 00       	nop
	_delay_ms(1200);
	lcd_line_two();
     610:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("from ~GROUP 06~",16);
     614:	60 e1       	ldi	r22, 0x10	; 16
     616:	80 e1       	ldi	r24, 0x10	; 16
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     61e:	2f e3       	ldi	r18, 0x3F	; 63
     620:	8d e0       	ldi	r24, 0x0D	; 13
     622:	93 e0       	ldi	r25, 0x03	; 3
     624:	21 50       	subi	r18, 0x01	; 1
     626:	80 40       	sbci	r24, 0x00	; 0
     628:	90 40       	sbci	r25, 0x00	; 0
     62a:	e1 f7       	brne	.-8      	; 0x624 <main+0x54>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <main+0x5e>
     62e:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clear();
     630:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
	lcd_line_one();
     634:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
	lcd_string("ENTER 1 TO",10);
     638:	6a e0       	ldi	r22, 0x0A	; 10
     63a:	80 e2       	ldi	r24, 0x20	; 32
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     642:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("INSTRUCTIONS",12);
     646:	6c e0       	ldi	r22, 0x0C	; 12
     648:	8b e2       	ldi	r24, 0x2B	; 43
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     650:	2f e7       	ldi	r18, 0x7F	; 127
     652:	89 ea       	ldi	r24, 0xA9	; 169
     654:	93 e0       	ldi	r25, 0x03	; 3
     656:	21 50       	subi	r18, 0x01	; 1
     658:	80 40       	sbci	r24, 0x00	; 0
     65a:	90 40       	sbci	r25, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <main+0x86>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <main+0x90>
     660:	00 00       	nop

	
	while(1)
	{
		
		lcd_clear();
     662:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     666:	6f e0       	ldi	r22, 0x0F	; 15
     668:	88 e3       	ldi	r24, 0x38	; 56
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		key = scankey();
     670:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     674:	18 2f       	mov	r17, r24
		
		switch(key)
     676:	81 33       	cpi	r24, 0x31	; 49
     678:	19 f0       	breq	.+6      	; 0x680 <main+0xb0>
     67a:	82 33       	cpi	r24, 0x32	; 50
     67c:	49 f0       	breq	.+18     	; 0x690 <main+0xc0>
     67e:	4a c0       	rjmp	.+148    	; 0x714 <main+0x144>
		{
			case '1':
				lcd_clear();
     680:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     684:	6c e0       	ldi	r22, 0x0C	; 12
     686:	8b e2       	ldi	r24, 0x2B	; 43
     688:	91 e0       	ldi	r25, 0x01	; 1
     68a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				break;
     68e:	42 c0       	rjmp	.+132    	; 0x714 <main+0x144>
			case '2':
				lcd_clear();
     690:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();
     694:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("ENTER PLANT",11);
     698:	6b e0       	ldi	r22, 0x0B	; 11
     69a:	87 e4       	ldi	r24, 0x47	; 71
     69c:	91 e0       	ldi	r25, 0x01	; 1
     69e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcd_line_two();
     6a2:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
				lcd_string("COUNT: ",7);
     6a6:	67 e0       	ldi	r22, 0x07	; 7
     6a8:	83 e5       	ldi	r24, 0x53	; 83
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				key = scankey();
     6b0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     6b4:	18 2f       	mov	r17, r24
				if(key == '*') break;
     6b6:	8a 32       	cpi	r24, 0x2A	; 42
     6b8:	69 f1       	breq	.+90     	; 0x714 <main+0x144>
				int plantCount = displayKey();
     6ba:	0e 94 49 02 	call	0x492	; 0x492 <displayKey>
				
				char text[10];
				sprintf(text, "%d", plantCount);
     6be:	9f 93       	push	r25
     6c0:	8f 93       	push	r24
     6c2:	8b e5       	ldi	r24, 0x5B	; 91
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	9f 93       	push	r25
     6c8:	8f 93       	push	r24
     6ca:	ce 01       	movw	r24, r28
     6cc:	01 96       	adiw	r24, 0x01	; 1
     6ce:	7c 01       	movw	r14, r24
     6d0:	9f 93       	push	r25
     6d2:	8f 93       	push	r24
     6d4:	0e 94 17 08 	call	0x102e	; 0x102e <sprintf>
				
				lcdcmd(0x01);
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("PLANT COUNT IS",15);
     6de:	6f e0       	ldi	r22, 0x0F	; 15
     6e0:	8e e5       	ldi	r24, 0x5E	; 94
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcdcmd(0xC0);
     6e8:	80 ec       	ldi	r24, 0xC0	; 192
     6ea:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string(text,10);
     6ee:	6a e0       	ldi	r22, 0x0A	; 10
     6f0:	c7 01       	movw	r24, r14
     6f2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     6f6:	9f e3       	ldi	r25, 0x3F	; 63
     6f8:	2d e0       	ldi	r18, 0x0D	; 13
     6fa:	83 e0       	ldi	r24, 0x03	; 3
     6fc:	91 50       	subi	r25, 0x01	; 1
     6fe:	20 40       	sbci	r18, 0x00	; 0
     700:	80 40       	sbci	r24, 0x00	; 0
     702:	e1 f7       	brne	.-8      	; 0x6fc <main+0x12c>
     704:	00 c0       	rjmp	.+0      	; 0x706 <main+0x136>
     706:	00 00       	nop
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
				_delay_ms(1000);
				
		}
		
		
		if (key == '3')
     714:	13 33       	cpi	r17, 0x33	; 51
     716:	09 f0       	breq	.+2      	; 0x71a <main+0x14a>
     718:	a4 cf       	rjmp	.-184    	; 0x662 <main+0x92>
     71a:	87 ea       	ldi	r24, 0xA7	; 167
     71c:	91 e6       	ldi	r25, 0x61	; 97
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	f1 f7       	brne	.-4      	; 0x71e <main+0x14e>
     722:	00 c0       	rjmp	.+0      	; 0x724 <main+0x154>
     724:	00 00       	nop
				
				uint16_t r;
				
				_delay_ms(100);

				lcdcmd(0x01);
     726:	81 e0       	ldi	r24, 0x01	; 1
     728:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				
				//Set io port direction of sensor
				HCSR04Init();
     72c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HCSR04Init>

				while(1)
				{
					
					//Send a trigger pulse
					HCSR04Trigger();               // calling the ultrasonic sound wave generator function
     730:	0e 94 6d 01 	call	0x2da	; 0x2da <HCSR04Trigger>
					
					//Measure the width of pulse
					r=GetPulseWidth();             // getting the duration of the ultrasound took to echo back after hitting the object
     734:	0e 94 77 01 	call	0x2ee	; 0x2ee <GetPulseWidth>
					
					//Handle Errors
					if(r==US_ERROR)                // if microcontroller doesn't get any pulse then it will set the US_ERROR variable to -1
     738:	6f 3f       	cpi	r22, 0xFF	; 255
     73a:	2f ef       	ldi	r18, 0xFF	; 255
     73c:	72 07       	cpc	r23, r18
     73e:	c1 f4       	brne	.+48     	; 0x770 <main+0x1a0>
					// the following code will check if there is error then it will be displayed on the LCD screen
					{
						lcdcmd(0x01);
     740:	81 e0       	ldi	r24, 0x01	; 1
     742:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
						lcdcmd(0x80);
     746:	80 e8       	ldi	r24, 0x80	; 128
     748:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
						lcd_string("E!",2);
     74c:	62 e0       	ldi	r22, 0x02	; 2
     74e:	8d e0       	ldi	r24, 0x0D	; 13
     750:	91 e0       	ldi	r25, 0x01	; 1
     752:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     756:	8f e3       	ldi	r24, 0x3F	; 63
     758:	9d e0       	ldi	r25, 0x0D	; 13
     75a:	23 e0       	ldi	r18, 0x03	; 3
     75c:	81 50       	subi	r24, 0x01	; 1
     75e:	90 40       	sbci	r25, 0x00	; 0
     760:	20 40       	sbci	r18, 0x00	; 0
     762:	e1 f7       	brne	.-8      	; 0x75c <main+0x18c>
     764:	00 c0       	rjmp	.+0      	; 0x766 <main+0x196>
     766:	00 00       	nop
						_delay_ms(1000);
						lcdcmd(0x01);
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     76e:	e0 cf       	rjmp	.-64     	; 0x730 <main+0x160>
					}
					else
					{
						
						distance=50-(r*0.034/2.0);	// This will give the distance in centimeters
     770:	80 e0       	ldi	r24, 0x00	; 0
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatunsisf>
     778:	26 e9       	ldi	r18, 0x96	; 150
     77a:	33 e4       	ldi	r19, 0x43	; 67
     77c:	4b e0       	ldi	r20, 0x0B	; 11
     77e:	5d e3       	ldi	r21, 0x3D	; 61
     780:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	40 e0       	ldi	r20, 0x00	; 0
     78a:	5f e3       	ldi	r21, 0x3F	; 63
     78c:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     790:	9b 01       	movw	r18, r22
     792:	ac 01       	movw	r20, r24
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	88 e4       	ldi	r24, 0x48	; 72
     79a:	92 e4       	ldi	r25, 0x42	; 66
     79c:	0e 94 33 04 	call	0x866	; 0x866 <__subsf3>
     7a0:	0e 94 a0 04 	call	0x940	; 0x940 <__fixsfsi>
     7a4:	70 93 99 01 	sts	0x0199, r23	; 0x800199 <distance+0x1>
     7a8:	60 93 98 01 	sts	0x0198, r22	; 0x800198 <distance>
						
						
						
						if (distance != previous_distance)    // the LCD screen only need to be cleared if the distance is changed otherwise it is not required
     7ac:	20 91 96 01 	lds	r18, 0x0196	; 0x800196 <__data_end>
     7b0:	30 91 97 01 	lds	r19, 0x0197	; 0x800197 <__data_end+0x1>
     7b4:	26 17       	cp	r18, r22
     7b6:	37 07       	cpc	r19, r23
     7b8:	19 f0       	breq	.+6      	; 0x7c0 <main+0x1f0>
						{
							lcdcmd(0x01);
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
						}
						
						lcdcmd(0x01);
     7c0:	81 e0       	ldi	r24, 0x01	; 1
     7c2:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
						
						lcdcmd(0x80);
     7c6:	80 e8       	ldi	r24, 0x80	; 128
     7c8:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
						lcd_string("WATER LV =",11);
     7cc:	6b e0       	ldi	r22, 0x0B	; 11
     7ce:	8d e6       	ldi	r24, 0x6D	; 109
     7d0:	91 e0       	ldi	r25, 0x01	; 1
     7d2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     7d6:	4a e0       	ldi	r20, 0x0A	; 10
     7d8:	be 01       	movw	r22, r28
     7da:	6f 5f       	subi	r22, 0xFF	; 255
     7dc:	7f 4f       	sbci	r23, 0xFF	; 255
     7de:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     7e2:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     7e6:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <__itoa_ncheck>
						
						itoa(distance, numberString, 10);    // distance is an integer number, we can not display integer directly on the LCD. this line converts integer into array of character
						lcd_string(numberString,3);
     7ea:	63 e0       	ldi	r22, 0x03	; 3
     7ec:	ce 01       	movw	r24, r28
     7ee:	01 96       	adiw	r24, 0x01	; 1
     7f0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

						lcd_string("cm",2);
     7f4:	62 e0       	ldi	r22, 0x02	; 2
     7f6:	88 e7       	ldi	r24, 0x78	; 120
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						
						
						
						
						previous_distance = distance;
     7fe:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     802:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     806:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <__data_end+0x1>
     80a:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <__data_end>
     80e:	8b e4       	ldi	r24, 0x4B	; 75
     810:	9d e1       	ldi	r25, 0x1D	; 29
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <__EEPROM_REGION_LENGTH__+0x12>
     816:	00 c0       	rjmp	.+0      	; 0x818 <__EEPROM_REGION_LENGTH__+0x18>
     818:	00 00       	nop
						_delay_ms(30);
						
						if(distance<10)
     81a:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     81e:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     822:	0a 97       	sbiw	r24, 0x0a	; 10
     824:	44 f4       	brge	.+16     	; 0x836 <__EEPROM_REGION_LENGTH__+0x36>
						{
							lcdcmd(0xC0);
     826:	80 ec       	ldi	r24, 0xC0	; 192
     828:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
							lcd_string("WATER LOW!!!",13);
     82c:	6d e0       	ldi	r22, 0x0D	; 13
     82e:	8b e7       	ldi	r24, 0x7B	; 123
     830:	91 e0       	ldi	r25, 0x01	; 1
     832:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
							// PORTA=(1<<PINA0);
							
						}
						if(distance>=10)
     836:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     83a:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     83e:	0a 97       	sbiw	r24, 0x0a	; 10
     840:	44 f0       	brlt	.+16     	; 0x852 <__EEPROM_REGION_LENGTH__+0x52>
						{
							lcdcmd(0xC0);
     842:	80 ec       	ldi	r24, 0xC0	; 192
     844:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
							lcd_string("ENOUGH WATER",12);
     848:	6c e0       	ldi	r22, 0x0C	; 12
     84a:	88 e8       	ldi	r24, 0x88	; 136
     84c:	91 e0       	ldi	r25, 0x01	; 1
     84e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     852:	9f e7       	ldi	r25, 0x7F	; 127
     854:	29 ea       	ldi	r18, 0xA9	; 169
     856:	83 e0       	ldi	r24, 0x03	; 3
     858:	91 50       	subi	r25, 0x01	; 1
     85a:	20 40       	sbci	r18, 0x00	; 0
     85c:	80 40       	sbci	r24, 0x00	; 0
     85e:	e1 f7       	brne	.-8      	; 0x858 <__EEPROM_REGION_LENGTH__+0x58>
     860:	00 c0       	rjmp	.+0      	; 0x862 <__EEPROM_REGION_LENGTH__+0x62>
     862:	00 00       	nop
     864:	65 cf       	rjmp	.-310    	; 0x730 <main+0x160>

00000866 <__subsf3>:
     866:	50 58       	subi	r21, 0x80	; 128

00000868 <__addsf3>:
     868:	bb 27       	eor	r27, r27
     86a:	aa 27       	eor	r26, r26
     86c:	0e 94 4b 04 	call	0x896	; 0x896 <__addsf3x>
     870:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_round>
     874:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fp_pscA>
     878:	38 f0       	brcs	.+14     	; 0x888 <__addsf3+0x20>
     87a:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_pscB>
     87e:	20 f0       	brcs	.+8      	; 0x888 <__addsf3+0x20>
     880:	39 f4       	brne	.+14     	; 0x890 <__addsf3+0x28>
     882:	9f 3f       	cpi	r25, 0xFF	; 255
     884:	19 f4       	brne	.+6      	; 0x88c <__addsf3+0x24>
     886:	26 f4       	brtc	.+8      	; 0x890 <__addsf3+0x28>
     888:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>
     88c:	0e f4       	brtc	.+2      	; 0x890 <__addsf3+0x28>
     88e:	e0 95       	com	r30
     890:	e7 fb       	bst	r30, 7
     892:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>

00000896 <__addsf3x>:
     896:	e9 2f       	mov	r30, r25
     898:	0e 94 3b 05 	call	0xa76	; 0xa76 <__fp_split3>
     89c:	58 f3       	brcs	.-42     	; 0x874 <__addsf3+0xc>
     89e:	ba 17       	cp	r27, r26
     8a0:	62 07       	cpc	r22, r18
     8a2:	73 07       	cpc	r23, r19
     8a4:	84 07       	cpc	r24, r20
     8a6:	95 07       	cpc	r25, r21
     8a8:	20 f0       	brcs	.+8      	; 0x8b2 <__addsf3x+0x1c>
     8aa:	79 f4       	brne	.+30     	; 0x8ca <__addsf3x+0x34>
     8ac:	a6 f5       	brtc	.+104    	; 0x916 <__addsf3x+0x80>
     8ae:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__fp_zero>
     8b2:	0e f4       	brtc	.+2      	; 0x8b6 <__addsf3x+0x20>
     8b4:	e0 95       	com	r30
     8b6:	0b 2e       	mov	r0, r27
     8b8:	ba 2f       	mov	r27, r26
     8ba:	a0 2d       	mov	r26, r0
     8bc:	0b 01       	movw	r0, r22
     8be:	b9 01       	movw	r22, r18
     8c0:	90 01       	movw	r18, r0
     8c2:	0c 01       	movw	r0, r24
     8c4:	ca 01       	movw	r24, r20
     8c6:	a0 01       	movw	r20, r0
     8c8:	11 24       	eor	r1, r1
     8ca:	ff 27       	eor	r31, r31
     8cc:	59 1b       	sub	r21, r25
     8ce:	99 f0       	breq	.+38     	; 0x8f6 <__addsf3x+0x60>
     8d0:	59 3f       	cpi	r21, 0xF9	; 249
     8d2:	50 f4       	brcc	.+20     	; 0x8e8 <__addsf3x+0x52>
     8d4:	50 3e       	cpi	r21, 0xE0	; 224
     8d6:	68 f1       	brcs	.+90     	; 0x932 <__addsf3x+0x9c>
     8d8:	1a 16       	cp	r1, r26
     8da:	f0 40       	sbci	r31, 0x00	; 0
     8dc:	a2 2f       	mov	r26, r18
     8de:	23 2f       	mov	r18, r19
     8e0:	34 2f       	mov	r19, r20
     8e2:	44 27       	eor	r20, r20
     8e4:	58 5f       	subi	r21, 0xF8	; 248
     8e6:	f3 cf       	rjmp	.-26     	; 0x8ce <__addsf3x+0x38>
     8e8:	46 95       	lsr	r20
     8ea:	37 95       	ror	r19
     8ec:	27 95       	ror	r18
     8ee:	a7 95       	ror	r26
     8f0:	f0 40       	sbci	r31, 0x00	; 0
     8f2:	53 95       	inc	r21
     8f4:	c9 f7       	brne	.-14     	; 0x8e8 <__addsf3x+0x52>
     8f6:	7e f4       	brtc	.+30     	; 0x916 <__addsf3x+0x80>
     8f8:	1f 16       	cp	r1, r31
     8fa:	ba 0b       	sbc	r27, r26
     8fc:	62 0b       	sbc	r22, r18
     8fe:	73 0b       	sbc	r23, r19
     900:	84 0b       	sbc	r24, r20
     902:	ba f0       	brmi	.+46     	; 0x932 <__addsf3x+0x9c>
     904:	91 50       	subi	r25, 0x01	; 1
     906:	a1 f0       	breq	.+40     	; 0x930 <__addsf3x+0x9a>
     908:	ff 0f       	add	r31, r31
     90a:	bb 1f       	adc	r27, r27
     90c:	66 1f       	adc	r22, r22
     90e:	77 1f       	adc	r23, r23
     910:	88 1f       	adc	r24, r24
     912:	c2 f7       	brpl	.-16     	; 0x904 <__addsf3x+0x6e>
     914:	0e c0       	rjmp	.+28     	; 0x932 <__addsf3x+0x9c>
     916:	ba 0f       	add	r27, r26
     918:	62 1f       	adc	r22, r18
     91a:	73 1f       	adc	r23, r19
     91c:	84 1f       	adc	r24, r20
     91e:	48 f4       	brcc	.+18     	; 0x932 <__addsf3x+0x9c>
     920:	87 95       	ror	r24
     922:	77 95       	ror	r23
     924:	67 95       	ror	r22
     926:	b7 95       	ror	r27
     928:	f7 95       	ror	r31
     92a:	9e 3f       	cpi	r25, 0xFE	; 254
     92c:	08 f0       	brcs	.+2      	; 0x930 <__addsf3x+0x9a>
     92e:	b0 cf       	rjmp	.-160    	; 0x890 <__addsf3+0x28>
     930:	93 95       	inc	r25
     932:	88 0f       	add	r24, r24
     934:	08 f0       	brcs	.+2      	; 0x938 <__addsf3x+0xa2>
     936:	99 27       	eor	r25, r25
     938:	ee 0f       	add	r30, r30
     93a:	97 95       	ror	r25
     93c:	87 95       	ror	r24
     93e:	08 95       	ret

00000940 <__fixsfsi>:
     940:	0e 94 a7 04 	call	0x94e	; 0x94e <__fixunssfsi>
     944:	68 94       	set
     946:	b1 11       	cpse	r27, r1
     948:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>
     94c:	08 95       	ret

0000094e <__fixunssfsi>:
     94e:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_splitA>
     952:	88 f0       	brcs	.+34     	; 0x976 <__fixunssfsi+0x28>
     954:	9f 57       	subi	r25, 0x7F	; 127
     956:	98 f0       	brcs	.+38     	; 0x97e <__fixunssfsi+0x30>
     958:	b9 2f       	mov	r27, r25
     95a:	99 27       	eor	r25, r25
     95c:	b7 51       	subi	r27, 0x17	; 23
     95e:	b0 f0       	brcs	.+44     	; 0x98c <__fixunssfsi+0x3e>
     960:	e1 f0       	breq	.+56     	; 0x99a <__fixunssfsi+0x4c>
     962:	66 0f       	add	r22, r22
     964:	77 1f       	adc	r23, r23
     966:	88 1f       	adc	r24, r24
     968:	99 1f       	adc	r25, r25
     96a:	1a f0       	brmi	.+6      	; 0x972 <__fixunssfsi+0x24>
     96c:	ba 95       	dec	r27
     96e:	c9 f7       	brne	.-14     	; 0x962 <__fixunssfsi+0x14>
     970:	14 c0       	rjmp	.+40     	; 0x99a <__fixunssfsi+0x4c>
     972:	b1 30       	cpi	r27, 0x01	; 1
     974:	91 f0       	breq	.+36     	; 0x99a <__fixunssfsi+0x4c>
     976:	0e 94 5d 05 	call	0xaba	; 0xaba <__fp_zero>
     97a:	b1 e0       	ldi	r27, 0x01	; 1
     97c:	08 95       	ret
     97e:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__fp_zero>
     982:	67 2f       	mov	r22, r23
     984:	78 2f       	mov	r23, r24
     986:	88 27       	eor	r24, r24
     988:	b8 5f       	subi	r27, 0xF8	; 248
     98a:	39 f0       	breq	.+14     	; 0x99a <__fixunssfsi+0x4c>
     98c:	b9 3f       	cpi	r27, 0xF9	; 249
     98e:	cc f3       	brlt	.-14     	; 0x982 <__fixunssfsi+0x34>
     990:	86 95       	lsr	r24
     992:	77 95       	ror	r23
     994:	67 95       	ror	r22
     996:	b3 95       	inc	r27
     998:	d9 f7       	brne	.-10     	; 0x990 <__fixunssfsi+0x42>
     99a:	3e f4       	brtc	.+14     	; 0x9aa <__fixunssfsi+0x5c>
     99c:	90 95       	com	r25
     99e:	80 95       	com	r24
     9a0:	70 95       	com	r23
     9a2:	61 95       	neg	r22
     9a4:	7f 4f       	sbci	r23, 0xFF	; 255
     9a6:	8f 4f       	sbci	r24, 0xFF	; 255
     9a8:	9f 4f       	sbci	r25, 0xFF	; 255
     9aa:	08 95       	ret

000009ac <__floatunsisf>:
     9ac:	e8 94       	clt
     9ae:	09 c0       	rjmp	.+18     	; 0x9c2 <__floatsisf+0x12>

000009b0 <__floatsisf>:
     9b0:	97 fb       	bst	r25, 7
     9b2:	3e f4       	brtc	.+14     	; 0x9c2 <__floatsisf+0x12>
     9b4:	90 95       	com	r25
     9b6:	80 95       	com	r24
     9b8:	70 95       	com	r23
     9ba:	61 95       	neg	r22
     9bc:	7f 4f       	sbci	r23, 0xFF	; 255
     9be:	8f 4f       	sbci	r24, 0xFF	; 255
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	99 23       	and	r25, r25
     9c4:	a9 f0       	breq	.+42     	; 0x9f0 <__floatsisf+0x40>
     9c6:	f9 2f       	mov	r31, r25
     9c8:	96 e9       	ldi	r25, 0x96	; 150
     9ca:	bb 27       	eor	r27, r27
     9cc:	93 95       	inc	r25
     9ce:	f6 95       	lsr	r31
     9d0:	87 95       	ror	r24
     9d2:	77 95       	ror	r23
     9d4:	67 95       	ror	r22
     9d6:	b7 95       	ror	r27
     9d8:	f1 11       	cpse	r31, r1
     9da:	f8 cf       	rjmp	.-16     	; 0x9cc <__floatsisf+0x1c>
     9dc:	fa f4       	brpl	.+62     	; 0xa1c <__floatsisf+0x6c>
     9de:	bb 0f       	add	r27, r27
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__floatsisf+0x36>
     9e2:	60 ff       	sbrs	r22, 0
     9e4:	1b c0       	rjmp	.+54     	; 0xa1c <__floatsisf+0x6c>
     9e6:	6f 5f       	subi	r22, 0xFF	; 255
     9e8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ea:	8f 4f       	sbci	r24, 0xFF	; 255
     9ec:	9f 4f       	sbci	r25, 0xFF	; 255
     9ee:	16 c0       	rjmp	.+44     	; 0xa1c <__floatsisf+0x6c>
     9f0:	88 23       	and	r24, r24
     9f2:	11 f0       	breq	.+4      	; 0x9f8 <__floatsisf+0x48>
     9f4:	96 e9       	ldi	r25, 0x96	; 150
     9f6:	11 c0       	rjmp	.+34     	; 0xa1a <__floatsisf+0x6a>
     9f8:	77 23       	and	r23, r23
     9fa:	21 f0       	breq	.+8      	; 0xa04 <__floatsisf+0x54>
     9fc:	9e e8       	ldi	r25, 0x8E	; 142
     9fe:	87 2f       	mov	r24, r23
     a00:	76 2f       	mov	r23, r22
     a02:	05 c0       	rjmp	.+10     	; 0xa0e <__floatsisf+0x5e>
     a04:	66 23       	and	r22, r22
     a06:	71 f0       	breq	.+28     	; 0xa24 <__floatsisf+0x74>
     a08:	96 e8       	ldi	r25, 0x86	; 134
     a0a:	86 2f       	mov	r24, r22
     a0c:	70 e0       	ldi	r23, 0x00	; 0
     a0e:	60 e0       	ldi	r22, 0x00	; 0
     a10:	2a f0       	brmi	.+10     	; 0xa1c <__floatsisf+0x6c>
     a12:	9a 95       	dec	r25
     a14:	66 0f       	add	r22, r22
     a16:	77 1f       	adc	r23, r23
     a18:	88 1f       	adc	r24, r24
     a1a:	da f7       	brpl	.-10     	; 0xa12 <__floatsisf+0x62>
     a1c:	88 0f       	add	r24, r24
     a1e:	96 95       	lsr	r25
     a20:	87 95       	ror	r24
     a22:	97 f9       	bld	r25, 7
     a24:	08 95       	ret

00000a26 <__fp_inf>:
     a26:	97 f9       	bld	r25, 7
     a28:	9f 67       	ori	r25, 0x7F	; 127
     a2a:	80 e8       	ldi	r24, 0x80	; 128
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	08 95       	ret

00000a32 <__fp_nan>:
     a32:	9f ef       	ldi	r25, 0xFF	; 255
     a34:	80 ec       	ldi	r24, 0xC0	; 192
     a36:	08 95       	ret

00000a38 <__fp_pscA>:
     a38:	00 24       	eor	r0, r0
     a3a:	0a 94       	dec	r0
     a3c:	16 16       	cp	r1, r22
     a3e:	17 06       	cpc	r1, r23
     a40:	18 06       	cpc	r1, r24
     a42:	09 06       	cpc	r0, r25
     a44:	08 95       	ret

00000a46 <__fp_pscB>:
     a46:	00 24       	eor	r0, r0
     a48:	0a 94       	dec	r0
     a4a:	12 16       	cp	r1, r18
     a4c:	13 06       	cpc	r1, r19
     a4e:	14 06       	cpc	r1, r20
     a50:	05 06       	cpc	r0, r21
     a52:	08 95       	ret

00000a54 <__fp_round>:
     a54:	09 2e       	mov	r0, r25
     a56:	03 94       	inc	r0
     a58:	00 0c       	add	r0, r0
     a5a:	11 f4       	brne	.+4      	; 0xa60 <__fp_round+0xc>
     a5c:	88 23       	and	r24, r24
     a5e:	52 f0       	brmi	.+20     	; 0xa74 <__fp_round+0x20>
     a60:	bb 0f       	add	r27, r27
     a62:	40 f4       	brcc	.+16     	; 0xa74 <__fp_round+0x20>
     a64:	bf 2b       	or	r27, r31
     a66:	11 f4       	brne	.+4      	; 0xa6c <__fp_round+0x18>
     a68:	60 ff       	sbrs	r22, 0
     a6a:	04 c0       	rjmp	.+8      	; 0xa74 <__fp_round+0x20>
     a6c:	6f 5f       	subi	r22, 0xFF	; 255
     a6e:	7f 4f       	sbci	r23, 0xFF	; 255
     a70:	8f 4f       	sbci	r24, 0xFF	; 255
     a72:	9f 4f       	sbci	r25, 0xFF	; 255
     a74:	08 95       	ret

00000a76 <__fp_split3>:
     a76:	57 fd       	sbrc	r21, 7
     a78:	90 58       	subi	r25, 0x80	; 128
     a7a:	44 0f       	add	r20, r20
     a7c:	55 1f       	adc	r21, r21
     a7e:	59 f0       	breq	.+22     	; 0xa96 <__fp_splitA+0x10>
     a80:	5f 3f       	cpi	r21, 0xFF	; 255
     a82:	71 f0       	breq	.+28     	; 0xaa0 <__fp_splitA+0x1a>
     a84:	47 95       	ror	r20

00000a86 <__fp_splitA>:
     a86:	88 0f       	add	r24, r24
     a88:	97 fb       	bst	r25, 7
     a8a:	99 1f       	adc	r25, r25
     a8c:	61 f0       	breq	.+24     	; 0xaa6 <__fp_splitA+0x20>
     a8e:	9f 3f       	cpi	r25, 0xFF	; 255
     a90:	79 f0       	breq	.+30     	; 0xab0 <__fp_splitA+0x2a>
     a92:	87 95       	ror	r24
     a94:	08 95       	ret
     a96:	12 16       	cp	r1, r18
     a98:	13 06       	cpc	r1, r19
     a9a:	14 06       	cpc	r1, r20
     a9c:	55 1f       	adc	r21, r21
     a9e:	f2 cf       	rjmp	.-28     	; 0xa84 <__fp_split3+0xe>
     aa0:	46 95       	lsr	r20
     aa2:	f1 df       	rcall	.-30     	; 0xa86 <__fp_splitA>
     aa4:	08 c0       	rjmp	.+16     	; 0xab6 <__fp_splitA+0x30>
     aa6:	16 16       	cp	r1, r22
     aa8:	17 06       	cpc	r1, r23
     aaa:	18 06       	cpc	r1, r24
     aac:	99 1f       	adc	r25, r25
     aae:	f1 cf       	rjmp	.-30     	; 0xa92 <__fp_splitA+0xc>
     ab0:	86 95       	lsr	r24
     ab2:	71 05       	cpc	r23, r1
     ab4:	61 05       	cpc	r22, r1
     ab6:	08 94       	sec
     ab8:	08 95       	ret

00000aba <__fp_zero>:
     aba:	e8 94       	clt

00000abc <__fp_szero>:
     abc:	bb 27       	eor	r27, r27
     abe:	66 27       	eor	r22, r22
     ac0:	77 27       	eor	r23, r23
     ac2:	cb 01       	movw	r24, r22
     ac4:	97 f9       	bld	r25, 7
     ac6:	08 95       	ret

00000ac8 <__mulsf3>:
     ac8:	0e 94 77 05 	call	0xaee	; 0xaee <__mulsf3x>
     acc:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_round>
     ad0:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fp_pscA>
     ad4:	38 f0       	brcs	.+14     	; 0xae4 <__mulsf3+0x1c>
     ad6:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_pscB>
     ada:	20 f0       	brcs	.+8      	; 0xae4 <__mulsf3+0x1c>
     adc:	95 23       	and	r25, r21
     ade:	11 f0       	breq	.+4      	; 0xae4 <__mulsf3+0x1c>
     ae0:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     ae4:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>
     ae8:	11 24       	eor	r1, r1
     aea:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>

00000aee <__mulsf3x>:
     aee:	0e 94 3b 05 	call	0xa76	; 0xa76 <__fp_split3>
     af2:	70 f3       	brcs	.-36     	; 0xad0 <__mulsf3+0x8>

00000af4 <__mulsf3_pse>:
     af4:	95 9f       	mul	r25, r21
     af6:	c1 f3       	breq	.-16     	; 0xae8 <__mulsf3+0x20>
     af8:	95 0f       	add	r25, r21
     afa:	50 e0       	ldi	r21, 0x00	; 0
     afc:	55 1f       	adc	r21, r21
     afe:	62 9f       	mul	r22, r18
     b00:	f0 01       	movw	r30, r0
     b02:	72 9f       	mul	r23, r18
     b04:	bb 27       	eor	r27, r27
     b06:	f0 0d       	add	r31, r0
     b08:	b1 1d       	adc	r27, r1
     b0a:	63 9f       	mul	r22, r19
     b0c:	aa 27       	eor	r26, r26
     b0e:	f0 0d       	add	r31, r0
     b10:	b1 1d       	adc	r27, r1
     b12:	aa 1f       	adc	r26, r26
     b14:	64 9f       	mul	r22, r20
     b16:	66 27       	eor	r22, r22
     b18:	b0 0d       	add	r27, r0
     b1a:	a1 1d       	adc	r26, r1
     b1c:	66 1f       	adc	r22, r22
     b1e:	82 9f       	mul	r24, r18
     b20:	22 27       	eor	r18, r18
     b22:	b0 0d       	add	r27, r0
     b24:	a1 1d       	adc	r26, r1
     b26:	62 1f       	adc	r22, r18
     b28:	73 9f       	mul	r23, r19
     b2a:	b0 0d       	add	r27, r0
     b2c:	a1 1d       	adc	r26, r1
     b2e:	62 1f       	adc	r22, r18
     b30:	83 9f       	mul	r24, r19
     b32:	a0 0d       	add	r26, r0
     b34:	61 1d       	adc	r22, r1
     b36:	22 1f       	adc	r18, r18
     b38:	74 9f       	mul	r23, r20
     b3a:	33 27       	eor	r19, r19
     b3c:	a0 0d       	add	r26, r0
     b3e:	61 1d       	adc	r22, r1
     b40:	23 1f       	adc	r18, r19
     b42:	84 9f       	mul	r24, r20
     b44:	60 0d       	add	r22, r0
     b46:	21 1d       	adc	r18, r1
     b48:	82 2f       	mov	r24, r18
     b4a:	76 2f       	mov	r23, r22
     b4c:	6a 2f       	mov	r22, r26
     b4e:	11 24       	eor	r1, r1
     b50:	9f 57       	subi	r25, 0x7F	; 127
     b52:	50 40       	sbci	r21, 0x00	; 0
     b54:	9a f0       	brmi	.+38     	; 0xb7c <__mulsf3_pse+0x88>
     b56:	f1 f0       	breq	.+60     	; 0xb94 <__mulsf3_pse+0xa0>
     b58:	88 23       	and	r24, r24
     b5a:	4a f0       	brmi	.+18     	; 0xb6e <__mulsf3_pse+0x7a>
     b5c:	ee 0f       	add	r30, r30
     b5e:	ff 1f       	adc	r31, r31
     b60:	bb 1f       	adc	r27, r27
     b62:	66 1f       	adc	r22, r22
     b64:	77 1f       	adc	r23, r23
     b66:	88 1f       	adc	r24, r24
     b68:	91 50       	subi	r25, 0x01	; 1
     b6a:	50 40       	sbci	r21, 0x00	; 0
     b6c:	a9 f7       	brne	.-22     	; 0xb58 <__mulsf3_pse+0x64>
     b6e:	9e 3f       	cpi	r25, 0xFE	; 254
     b70:	51 05       	cpc	r21, r1
     b72:	80 f0       	brcs	.+32     	; 0xb94 <__mulsf3_pse+0xa0>
     b74:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     b78:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>
     b7c:	5f 3f       	cpi	r21, 0xFF	; 255
     b7e:	e4 f3       	brlt	.-8      	; 0xb78 <__mulsf3_pse+0x84>
     b80:	98 3e       	cpi	r25, 0xE8	; 232
     b82:	d4 f3       	brlt	.-12     	; 0xb78 <__mulsf3_pse+0x84>
     b84:	86 95       	lsr	r24
     b86:	77 95       	ror	r23
     b88:	67 95       	ror	r22
     b8a:	b7 95       	ror	r27
     b8c:	f7 95       	ror	r31
     b8e:	e7 95       	ror	r30
     b90:	9f 5f       	subi	r25, 0xFF	; 255
     b92:	c1 f7       	brne	.-16     	; 0xb84 <__mulsf3_pse+0x90>
     b94:	fe 2b       	or	r31, r30
     b96:	88 0f       	add	r24, r24
     b98:	91 1d       	adc	r25, r1
     b9a:	96 95       	lsr	r25
     b9c:	87 95       	ror	r24
     b9e:	97 f9       	bld	r25, 7
     ba0:	08 95       	ret

00000ba2 <pow>:
     ba2:	fa 01       	movw	r30, r20
     ba4:	ee 0f       	add	r30, r30
     ba6:	ff 1f       	adc	r31, r31
     ba8:	30 96       	adiw	r30, 0x00	; 0
     baa:	21 05       	cpc	r18, r1
     bac:	31 05       	cpc	r19, r1
     bae:	a1 f1       	breq	.+104    	; 0xc18 <pow+0x76>
     bb0:	61 15       	cp	r22, r1
     bb2:	71 05       	cpc	r23, r1
     bb4:	61 f4       	brne	.+24     	; 0xbce <pow+0x2c>
     bb6:	80 38       	cpi	r24, 0x80	; 128
     bb8:	bf e3       	ldi	r27, 0x3F	; 63
     bba:	9b 07       	cpc	r25, r27
     bbc:	49 f1       	breq	.+82     	; 0xc10 <pow+0x6e>
     bbe:	68 94       	set
     bc0:	90 38       	cpi	r25, 0x80	; 128
     bc2:	81 05       	cpc	r24, r1
     bc4:	61 f0       	breq	.+24     	; 0xbde <pow+0x3c>
     bc6:	80 38       	cpi	r24, 0x80	; 128
     bc8:	bf ef       	ldi	r27, 0xFF	; 255
     bca:	9b 07       	cpc	r25, r27
     bcc:	41 f0       	breq	.+16     	; 0xbde <pow+0x3c>
     bce:	99 23       	and	r25, r25
     bd0:	4a f5       	brpl	.+82     	; 0xc24 <pow+0x82>
     bd2:	ff 3f       	cpi	r31, 0xFF	; 255
     bd4:	e1 05       	cpc	r30, r1
     bd6:	31 05       	cpc	r19, r1
     bd8:	21 05       	cpc	r18, r1
     bda:	19 f1       	breq	.+70     	; 0xc22 <pow+0x80>
     bdc:	e8 94       	clt
     bde:	08 94       	sec
     be0:	e7 95       	ror	r30
     be2:	d9 01       	movw	r26, r18
     be4:	aa 23       	and	r26, r26
     be6:	29 f4       	brne	.+10     	; 0xbf2 <pow+0x50>
     be8:	ab 2f       	mov	r26, r27
     bea:	be 2f       	mov	r27, r30
     bec:	f8 5f       	subi	r31, 0xF8	; 248
     bee:	d0 f3       	brcs	.-12     	; 0xbe4 <pow+0x42>
     bf0:	10 c0       	rjmp	.+32     	; 0xc12 <pow+0x70>
     bf2:	ff 5f       	subi	r31, 0xFF	; 255
     bf4:	70 f4       	brcc	.+28     	; 0xc12 <pow+0x70>
     bf6:	a6 95       	lsr	r26
     bf8:	e0 f7       	brcc	.-8      	; 0xbf2 <pow+0x50>
     bfa:	f7 39       	cpi	r31, 0x97	; 151
     bfc:	50 f0       	brcs	.+20     	; 0xc12 <pow+0x70>
     bfe:	19 f0       	breq	.+6      	; 0xc06 <pow+0x64>
     c00:	ff 3a       	cpi	r31, 0xAF	; 175
     c02:	38 f4       	brcc	.+14     	; 0xc12 <pow+0x70>
     c04:	9f 77       	andi	r25, 0x7F	; 127
     c06:	9f 93       	push	r25
     c08:	0d d0       	rcall	.+26     	; 0xc24 <pow+0x82>
     c0a:	0f 90       	pop	r0
     c0c:	07 fc       	sbrc	r0, 7
     c0e:	90 58       	subi	r25, 0x80	; 128
     c10:	08 95       	ret
     c12:	46 f0       	brts	.+16     	; 0xc24 <pow+0x82>
     c14:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	80 e8       	ldi	r24, 0x80	; 128
     c1e:	9f e3       	ldi	r25, 0x3F	; 63
     c20:	08 95       	ret
     c22:	4f e7       	ldi	r20, 0x7F	; 127
     c24:	9f 77       	andi	r25, 0x7F	; 127
     c26:	5f 93       	push	r21
     c28:	4f 93       	push	r20
     c2a:	3f 93       	push	r19
     c2c:	2f 93       	push	r18
     c2e:	0e 94 cc 06 	call	0xd98	; 0xd98 <log>
     c32:	2f 91       	pop	r18
     c34:	3f 91       	pop	r19
     c36:	4f 91       	pop	r20
     c38:	5f 91       	pop	r21
     c3a:	0e 94 64 05 	call	0xac8	; 0xac8 <__mulsf3>
     c3e:	0c 94 29 06 	jmp	0xc52	; 0xc52 <exp>
     c42:	29 f4       	brne	.+10     	; 0xc4e <pow+0xac>
     c44:	16 f0       	brts	.+4      	; 0xc4a <pow+0xa8>
     c46:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     c4a:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__fp_zero>
     c4e:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>

00000c52 <exp>:
     c52:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_splitA>
     c56:	a8 f3       	brcs	.-22     	; 0xc42 <pow+0xa0>
     c58:	96 38       	cpi	r25, 0x86	; 134
     c5a:	a0 f7       	brcc	.-24     	; 0xc44 <pow+0xa2>
     c5c:	07 f8       	bld	r0, 7
     c5e:	0f 92       	push	r0
     c60:	e8 94       	clt
     c62:	2b e3       	ldi	r18, 0x3B	; 59
     c64:	3a ea       	ldi	r19, 0xAA	; 170
     c66:	48 eb       	ldi	r20, 0xB8	; 184
     c68:	5f e7       	ldi	r21, 0x7F	; 127
     c6a:	0e 94 7a 05 	call	0xaf4	; 0xaf4 <__mulsf3_pse>
     c6e:	0f 92       	push	r0
     c70:	0f 92       	push	r0
     c72:	0f 92       	push	r0
     c74:	4d b7       	in	r20, 0x3d	; 61
     c76:	5e b7       	in	r21, 0x3e	; 62
     c78:	0f 92       	push	r0
     c7a:	0e 94 14 07 	call	0xe28	; 0xe28 <modf>
     c7e:	ec e8       	ldi	r30, 0x8C	; 140
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__fp_powser>
     c86:	4f 91       	pop	r20
     c88:	5f 91       	pop	r21
     c8a:	ef 91       	pop	r30
     c8c:	ff 91       	pop	r31
     c8e:	e5 95       	asr	r30
     c90:	ee 1f       	adc	r30, r30
     c92:	ff 1f       	adc	r31, r31
     c94:	49 f0       	breq	.+18     	; 0xca8 <exp+0x56>
     c96:	fe 57       	subi	r31, 0x7E	; 126
     c98:	e0 68       	ori	r30, 0x80	; 128
     c9a:	44 27       	eor	r20, r20
     c9c:	ee 0f       	add	r30, r30
     c9e:	44 1f       	adc	r20, r20
     ca0:	fa 95       	dec	r31
     ca2:	e1 f7       	brne	.-8      	; 0xc9c <exp+0x4a>
     ca4:	41 95       	neg	r20
     ca6:	55 0b       	sbc	r21, r21
     ca8:	0e 94 8e 06 	call	0xd1c	; 0xd1c <ldexp>
     cac:	0f 90       	pop	r0
     cae:	07 fe       	sbrs	r0, 7
     cb0:	0c 94 82 06 	jmp	0xd04	; 0xd04 <inverse>
     cb4:	08 95       	ret

00000cb6 <__fp_powser>:
     cb6:	df 93       	push	r29
     cb8:	cf 93       	push	r28
     cba:	1f 93       	push	r17
     cbc:	0f 93       	push	r16
     cbe:	ff 92       	push	r15
     cc0:	ef 92       	push	r14
     cc2:	df 92       	push	r13
     cc4:	7b 01       	movw	r14, r22
     cc6:	8c 01       	movw	r16, r24
     cc8:	68 94       	set
     cca:	06 c0       	rjmp	.+12     	; 0xcd8 <__fp_powser+0x22>
     ccc:	da 2e       	mov	r13, r26
     cce:	ef 01       	movw	r28, r30
     cd0:	0e 94 77 05 	call	0xaee	; 0xaee <__mulsf3x>
     cd4:	fe 01       	movw	r30, r28
     cd6:	e8 94       	clt
     cd8:	a5 91       	lpm	r26, Z+
     cda:	25 91       	lpm	r18, Z+
     cdc:	35 91       	lpm	r19, Z+
     cde:	45 91       	lpm	r20, Z+
     ce0:	55 91       	lpm	r21, Z+
     ce2:	a6 f3       	brts	.-24     	; 0xccc <__fp_powser+0x16>
     ce4:	ef 01       	movw	r28, r30
     ce6:	0e 94 4b 04 	call	0x896	; 0x896 <__addsf3x>
     cea:	fe 01       	movw	r30, r28
     cec:	97 01       	movw	r18, r14
     cee:	a8 01       	movw	r20, r16
     cf0:	da 94       	dec	r13
     cf2:	69 f7       	brne	.-38     	; 0xcce <__fp_powser+0x18>
     cf4:	df 90       	pop	r13
     cf6:	ef 90       	pop	r14
     cf8:	ff 90       	pop	r15
     cfa:	0f 91       	pop	r16
     cfc:	1f 91       	pop	r17
     cfe:	cf 91       	pop	r28
     d00:	df 91       	pop	r29
     d02:	08 95       	ret

00000d04 <inverse>:
     d04:	9b 01       	movw	r18, r22
     d06:	ac 01       	movw	r20, r24
     d08:	60 e0       	ldi	r22, 0x00	; 0
     d0a:	70 e0       	ldi	r23, 0x00	; 0
     d0c:	80 e8       	ldi	r24, 0x80	; 128
     d0e:	9f e3       	ldi	r25, 0x3F	; 63
     d10:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__divsf3>
     d14:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     d18:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__fp_mpack>

00000d1c <ldexp>:
     d1c:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_splitA>
     d20:	d8 f3       	brcs	.-10     	; 0xd18 <inverse+0x14>
     d22:	99 23       	and	r25, r25
     d24:	c9 f3       	breq	.-14     	; 0xd18 <inverse+0x14>
     d26:	94 0f       	add	r25, r20
     d28:	51 1d       	adc	r21, r1
     d2a:	a3 f3       	brvs	.-24     	; 0xd14 <inverse+0x10>
     d2c:	91 50       	subi	r25, 0x01	; 1
     d2e:	50 40       	sbci	r21, 0x00	; 0
     d30:	94 f0       	brlt	.+36     	; 0xd56 <ldexp+0x3a>
     d32:	59 f0       	breq	.+22     	; 0xd4a <ldexp+0x2e>
     d34:	88 23       	and	r24, r24
     d36:	32 f0       	brmi	.+12     	; 0xd44 <ldexp+0x28>
     d38:	66 0f       	add	r22, r22
     d3a:	77 1f       	adc	r23, r23
     d3c:	88 1f       	adc	r24, r24
     d3e:	91 50       	subi	r25, 0x01	; 1
     d40:	50 40       	sbci	r21, 0x00	; 0
     d42:	c1 f7       	brne	.-16     	; 0xd34 <ldexp+0x18>
     d44:	9e 3f       	cpi	r25, 0xFE	; 254
     d46:	51 05       	cpc	r21, r1
     d48:	2c f7       	brge	.-54     	; 0xd14 <inverse+0x10>
     d4a:	88 0f       	add	r24, r24
     d4c:	91 1d       	adc	r25, r1
     d4e:	96 95       	lsr	r25
     d50:	87 95       	ror	r24
     d52:	97 f9       	bld	r25, 7
     d54:	08 95       	ret
     d56:	5f 3f       	cpi	r21, 0xFF	; 255
     d58:	ac f0       	brlt	.+42     	; 0xd84 <ldexp+0x68>
     d5a:	98 3e       	cpi	r25, 0xE8	; 232
     d5c:	9c f0       	brlt	.+38     	; 0xd84 <ldexp+0x68>
     d5e:	bb 27       	eor	r27, r27
     d60:	86 95       	lsr	r24
     d62:	77 95       	ror	r23
     d64:	67 95       	ror	r22
     d66:	b7 95       	ror	r27
     d68:	08 f4       	brcc	.+2      	; 0xd6c <ldexp+0x50>
     d6a:	b1 60       	ori	r27, 0x01	; 1
     d6c:	93 95       	inc	r25
     d6e:	c1 f7       	brne	.-16     	; 0xd60 <ldexp+0x44>
     d70:	bb 0f       	add	r27, r27
     d72:	58 f7       	brcc	.-42     	; 0xd4a <ldexp+0x2e>
     d74:	11 f4       	brne	.+4      	; 0xd7a <ldexp+0x5e>
     d76:	60 ff       	sbrs	r22, 0
     d78:	e8 cf       	rjmp	.-48     	; 0xd4a <ldexp+0x2e>
     d7a:	6f 5f       	subi	r22, 0xFF	; 255
     d7c:	7f 4f       	sbci	r23, 0xFF	; 255
     d7e:	8f 4f       	sbci	r24, 0xFF	; 255
     d80:	9f 4f       	sbci	r25, 0xFF	; 255
     d82:	e3 cf       	rjmp	.-58     	; 0xd4a <ldexp+0x2e>
     d84:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>
     d88:	16 f0       	brts	.+4      	; 0xd8e <ldexp+0x72>
     d8a:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__fp_mpack>
     d8e:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>
     d92:	68 94       	set
     d94:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>

00000d98 <log>:
     d98:	0e 94 43 05 	call	0xa86	; 0xa86 <__fp_splitA>
     d9c:	a8 f3       	brcs	.-22     	; 0xd88 <ldexp+0x6c>
     d9e:	99 23       	and	r25, r25
     da0:	c1 f3       	breq	.-16     	; 0xd92 <ldexp+0x76>
     da2:	ae f3       	brts	.-22     	; 0xd8e <ldexp+0x72>
     da4:	df 93       	push	r29
     da6:	cf 93       	push	r28
     da8:	1f 93       	push	r17
     daa:	0f 93       	push	r16
     dac:	ff 92       	push	r15
     dae:	c9 2f       	mov	r28, r25
     db0:	dd 27       	eor	r29, r29
     db2:	88 23       	and	r24, r24
     db4:	2a f0       	brmi	.+10     	; 0xdc0 <log+0x28>
     db6:	21 97       	sbiw	r28, 0x01	; 1
     db8:	66 0f       	add	r22, r22
     dba:	77 1f       	adc	r23, r23
     dbc:	88 1f       	adc	r24, r24
     dbe:	da f7       	brpl	.-10     	; 0xdb6 <log+0x1e>
     dc0:	20 e0       	ldi	r18, 0x00	; 0
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	40 e8       	ldi	r20, 0x80	; 128
     dc6:	5f eb       	ldi	r21, 0xBF	; 191
     dc8:	9f e3       	ldi	r25, 0x3F	; 63
     dca:	88 39       	cpi	r24, 0x98	; 152
     dcc:	20 f0       	brcs	.+8      	; 0xdd6 <log+0x3e>
     dce:	80 3e       	cpi	r24, 0xE0	; 224
     dd0:	38 f0       	brcs	.+14     	; 0xde0 <log+0x48>
     dd2:	21 96       	adiw	r28, 0x01	; 1
     dd4:	8f 77       	andi	r24, 0x7F	; 127
     dd6:	0e 94 34 04 	call	0x868	; 0x868 <__addsf3>
     dda:	e4 eb       	ldi	r30, 0xB4	; 180
     ddc:	f0 e0       	ldi	r31, 0x00	; 0
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <log+0x50>
     de0:	0e 94 34 04 	call	0x868	; 0x868 <__addsf3>
     de4:	e1 ee       	ldi	r30, 0xE1	; 225
     de6:	f0 e0       	ldi	r31, 0x00	; 0
     de8:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <__fp_powser>
     dec:	8b 01       	movw	r16, r22
     dee:	be 01       	movw	r22, r28
     df0:	ec 01       	movw	r28, r24
     df2:	fb 2e       	mov	r15, r27
     df4:	6f 57       	subi	r22, 0x7F	; 127
     df6:	71 09       	sbc	r23, r1
     df8:	75 95       	asr	r23
     dfa:	77 1f       	adc	r23, r23
     dfc:	88 0b       	sbc	r24, r24
     dfe:	99 0b       	sbc	r25, r25
     e00:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__floatsisf>
     e04:	28 e1       	ldi	r18, 0x18	; 24
     e06:	32 e7       	ldi	r19, 0x72	; 114
     e08:	41 e3       	ldi	r20, 0x31	; 49
     e0a:	5f e3       	ldi	r21, 0x3F	; 63
     e0c:	0e 94 77 05 	call	0xaee	; 0xaee <__mulsf3x>
     e10:	af 2d       	mov	r26, r15
     e12:	98 01       	movw	r18, r16
     e14:	ae 01       	movw	r20, r28
     e16:	ff 90       	pop	r15
     e18:	0f 91       	pop	r16
     e1a:	1f 91       	pop	r17
     e1c:	cf 91       	pop	r28
     e1e:	df 91       	pop	r29
     e20:	0e 94 4b 04 	call	0x896	; 0x896 <__addsf3x>
     e24:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_round>

00000e28 <modf>:
     e28:	fa 01       	movw	r30, r20
     e2a:	dc 01       	movw	r26, r24
     e2c:	aa 0f       	add	r26, r26
     e2e:	bb 1f       	adc	r27, r27
     e30:	9b 01       	movw	r18, r22
     e32:	ac 01       	movw	r20, r24
     e34:	bf 57       	subi	r27, 0x7F	; 127
     e36:	28 f4       	brcc	.+10     	; 0xe42 <modf+0x1a>
     e38:	22 27       	eor	r18, r18
     e3a:	33 27       	eor	r19, r19
     e3c:	44 27       	eor	r20, r20
     e3e:	50 78       	andi	r21, 0x80	; 128
     e40:	20 c0       	rjmp	.+64     	; 0xe82 <modf+0x5a>
     e42:	b7 51       	subi	r27, 0x17	; 23
     e44:	90 f4       	brcc	.+36     	; 0xe6a <modf+0x42>
     e46:	ab 2f       	mov	r26, r27
     e48:	00 24       	eor	r0, r0
     e4a:	46 95       	lsr	r20
     e4c:	37 95       	ror	r19
     e4e:	27 95       	ror	r18
     e50:	01 1c       	adc	r0, r1
     e52:	a3 95       	inc	r26
     e54:	d2 f3       	brmi	.-12     	; 0xe4a <modf+0x22>
     e56:	00 20       	and	r0, r0
     e58:	71 f0       	breq	.+28     	; 0xe76 <modf+0x4e>
     e5a:	22 0f       	add	r18, r18
     e5c:	33 1f       	adc	r19, r19
     e5e:	44 1f       	adc	r20, r20
     e60:	b3 95       	inc	r27
     e62:	da f3       	brmi	.-10     	; 0xe5a <modf+0x32>
     e64:	0e d0       	rcall	.+28     	; 0xe82 <modf+0x5a>
     e66:	0c 94 33 04 	jmp	0x866	; 0x866 <__subsf3>
     e6a:	61 30       	cpi	r22, 0x01	; 1
     e6c:	71 05       	cpc	r23, r1
     e6e:	a0 e8       	ldi	r26, 0x80	; 128
     e70:	8a 07       	cpc	r24, r26
     e72:	b9 46       	sbci	r27, 0x69	; 105
     e74:	30 f4       	brcc	.+12     	; 0xe82 <modf+0x5a>
     e76:	9b 01       	movw	r18, r22
     e78:	ac 01       	movw	r20, r24
     e7a:	66 27       	eor	r22, r22
     e7c:	77 27       	eor	r23, r23
     e7e:	88 27       	eor	r24, r24
     e80:	90 78       	andi	r25, 0x80	; 128
     e82:	30 96       	adiw	r30, 0x00	; 0
     e84:	21 f0       	breq	.+8      	; 0xe8e <modf+0x66>
     e86:	20 83       	st	Z, r18
     e88:	31 83       	std	Z+1, r19	; 0x01
     e8a:	42 83       	std	Z+2, r20	; 0x02
     e8c:	53 83       	std	Z+3, r21	; 0x03
     e8e:	08 95       	ret

00000e90 <__divsf3>:
     e90:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__divsf3x>
     e94:	0c 94 2a 05 	jmp	0xa54	; 0xa54 <__fp_round>
     e98:	0e 94 23 05 	call	0xa46	; 0xa46 <__fp_pscB>
     e9c:	58 f0       	brcs	.+22     	; 0xeb4 <__divsf3+0x24>
     e9e:	0e 94 1c 05 	call	0xa38	; 0xa38 <__fp_pscA>
     ea2:	40 f0       	brcs	.+16     	; 0xeb4 <__divsf3+0x24>
     ea4:	29 f4       	brne	.+10     	; 0xeb0 <__divsf3+0x20>
     ea6:	5f 3f       	cpi	r21, 0xFF	; 255
     ea8:	29 f0       	breq	.+10     	; 0xeb4 <__divsf3+0x24>
     eaa:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     eae:	51 11       	cpse	r21, r1
     eb0:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>
     eb4:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__fp_nan>

00000eb8 <__divsf3x>:
     eb8:	0e 94 3b 05 	call	0xa76	; 0xa76 <__fp_split3>
     ebc:	68 f3       	brcs	.-38     	; 0xe98 <__divsf3+0x8>

00000ebe <__divsf3_pse>:
     ebe:	99 23       	and	r25, r25
     ec0:	b1 f3       	breq	.-20     	; 0xeae <__divsf3+0x1e>
     ec2:	55 23       	and	r21, r21
     ec4:	91 f3       	breq	.-28     	; 0xeaa <__divsf3+0x1a>
     ec6:	95 1b       	sub	r25, r21
     ec8:	55 0b       	sbc	r21, r21
     eca:	bb 27       	eor	r27, r27
     ecc:	aa 27       	eor	r26, r26
     ece:	62 17       	cp	r22, r18
     ed0:	73 07       	cpc	r23, r19
     ed2:	84 07       	cpc	r24, r20
     ed4:	38 f0       	brcs	.+14     	; 0xee4 <__divsf3_pse+0x26>
     ed6:	9f 5f       	subi	r25, 0xFF	; 255
     ed8:	5f 4f       	sbci	r21, 0xFF	; 255
     eda:	22 0f       	add	r18, r18
     edc:	33 1f       	adc	r19, r19
     ede:	44 1f       	adc	r20, r20
     ee0:	aa 1f       	adc	r26, r26
     ee2:	a9 f3       	breq	.-22     	; 0xece <__divsf3_pse+0x10>
     ee4:	35 d0       	rcall	.+106    	; 0xf50 <__divsf3_pse+0x92>
     ee6:	0e 2e       	mov	r0, r30
     ee8:	3a f0       	brmi	.+14     	; 0xef8 <__divsf3_pse+0x3a>
     eea:	e0 e8       	ldi	r30, 0x80	; 128
     eec:	32 d0       	rcall	.+100    	; 0xf52 <__divsf3_pse+0x94>
     eee:	91 50       	subi	r25, 0x01	; 1
     ef0:	50 40       	sbci	r21, 0x00	; 0
     ef2:	e6 95       	lsr	r30
     ef4:	00 1c       	adc	r0, r0
     ef6:	ca f7       	brpl	.-14     	; 0xeea <__divsf3_pse+0x2c>
     ef8:	2b d0       	rcall	.+86     	; 0xf50 <__divsf3_pse+0x92>
     efa:	fe 2f       	mov	r31, r30
     efc:	29 d0       	rcall	.+82     	; 0xf50 <__divsf3_pse+0x92>
     efe:	66 0f       	add	r22, r22
     f00:	77 1f       	adc	r23, r23
     f02:	88 1f       	adc	r24, r24
     f04:	bb 1f       	adc	r27, r27
     f06:	26 17       	cp	r18, r22
     f08:	37 07       	cpc	r19, r23
     f0a:	48 07       	cpc	r20, r24
     f0c:	ab 07       	cpc	r26, r27
     f0e:	b0 e8       	ldi	r27, 0x80	; 128
     f10:	09 f0       	breq	.+2      	; 0xf14 <__divsf3_pse+0x56>
     f12:	bb 0b       	sbc	r27, r27
     f14:	80 2d       	mov	r24, r0
     f16:	bf 01       	movw	r22, r30
     f18:	ff 27       	eor	r31, r31
     f1a:	93 58       	subi	r25, 0x83	; 131
     f1c:	5f 4f       	sbci	r21, 0xFF	; 255
     f1e:	3a f0       	brmi	.+14     	; 0xf2e <__divsf3_pse+0x70>
     f20:	9e 3f       	cpi	r25, 0xFE	; 254
     f22:	51 05       	cpc	r21, r1
     f24:	78 f0       	brcs	.+30     	; 0xf44 <__divsf3_pse+0x86>
     f26:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_inf>
     f2a:	0c 94 5e 05 	jmp	0xabc	; 0xabc <__fp_szero>
     f2e:	5f 3f       	cpi	r21, 0xFF	; 255
     f30:	e4 f3       	brlt	.-8      	; 0xf2a <__divsf3_pse+0x6c>
     f32:	98 3e       	cpi	r25, 0xE8	; 232
     f34:	d4 f3       	brlt	.-12     	; 0xf2a <__divsf3_pse+0x6c>
     f36:	86 95       	lsr	r24
     f38:	77 95       	ror	r23
     f3a:	67 95       	ror	r22
     f3c:	b7 95       	ror	r27
     f3e:	f7 95       	ror	r31
     f40:	9f 5f       	subi	r25, 0xFF	; 255
     f42:	c9 f7       	brne	.-14     	; 0xf36 <__divsf3_pse+0x78>
     f44:	88 0f       	add	r24, r24
     f46:	91 1d       	adc	r25, r1
     f48:	96 95       	lsr	r25
     f4a:	87 95       	ror	r24
     f4c:	97 f9       	bld	r25, 7
     f4e:	08 95       	ret
     f50:	e1 e0       	ldi	r30, 0x01	; 1
     f52:	66 0f       	add	r22, r22
     f54:	77 1f       	adc	r23, r23
     f56:	88 1f       	adc	r24, r24
     f58:	bb 1f       	adc	r27, r27
     f5a:	62 17       	cp	r22, r18
     f5c:	73 07       	cpc	r23, r19
     f5e:	84 07       	cpc	r24, r20
     f60:	ba 07       	cpc	r27, r26
     f62:	20 f0       	brcs	.+8      	; 0xf6c <__divsf3_pse+0xae>
     f64:	62 1b       	sub	r22, r18
     f66:	73 0b       	sbc	r23, r19
     f68:	84 0b       	sbc	r24, r20
     f6a:	ba 0b       	sbc	r27, r26
     f6c:	ee 1f       	adc	r30, r30
     f6e:	88 f7       	brcc	.-30     	; 0xf52 <__divsf3_pse+0x94>
     f70:	e0 95       	com	r30
     f72:	08 95       	ret

00000f74 <__fp_mpack>:
     f74:	9f 3f       	cpi	r25, 0xFF	; 255
     f76:	31 f0       	breq	.+12     	; 0xf84 <__fp_mpack_finite+0xc>

00000f78 <__fp_mpack_finite>:
     f78:	91 50       	subi	r25, 0x01	; 1
     f7a:	20 f4       	brcc	.+8      	; 0xf84 <__fp_mpack_finite+0xc>
     f7c:	87 95       	ror	r24
     f7e:	77 95       	ror	r23
     f80:	67 95       	ror	r22
     f82:	b7 95       	ror	r27
     f84:	88 0f       	add	r24, r24
     f86:	91 1d       	adc	r25, r1
     f88:	96 95       	lsr	r25
     f8a:	87 95       	ror	r24
     f8c:	97 f9       	bld	r25, 7
     f8e:	08 95       	ret

00000f90 <__ashrdi3>:
     f90:	97 fb       	bst	r25, 7
     f92:	10 f8       	bld	r1, 0

00000f94 <__lshrdi3>:
     f94:	16 94       	lsr	r1
     f96:	00 08       	sbc	r0, r0
     f98:	0f 93       	push	r16
     f9a:	08 30       	cpi	r16, 0x08	; 8
     f9c:	98 f0       	brcs	.+38     	; 0xfc4 <__lshrdi3+0x30>
     f9e:	08 50       	subi	r16, 0x08	; 8
     fa0:	23 2f       	mov	r18, r19
     fa2:	34 2f       	mov	r19, r20
     fa4:	45 2f       	mov	r20, r21
     fa6:	56 2f       	mov	r21, r22
     fa8:	67 2f       	mov	r22, r23
     faa:	78 2f       	mov	r23, r24
     fac:	89 2f       	mov	r24, r25
     fae:	90 2d       	mov	r25, r0
     fb0:	f4 cf       	rjmp	.-24     	; 0xf9a <__lshrdi3+0x6>
     fb2:	05 94       	asr	r0
     fb4:	97 95       	ror	r25
     fb6:	87 95       	ror	r24
     fb8:	77 95       	ror	r23
     fba:	67 95       	ror	r22
     fbc:	57 95       	ror	r21
     fbe:	47 95       	ror	r20
     fc0:	37 95       	ror	r19
     fc2:	27 95       	ror	r18
     fc4:	0a 95       	dec	r16
     fc6:	aa f7       	brpl	.-22     	; 0xfb2 <__lshrdi3+0x1e>
     fc8:	0f 91       	pop	r16
     fca:	08 95       	ret

00000fcc <__adddi3_s8>:
     fcc:	00 24       	eor	r0, r0
     fce:	a7 fd       	sbrc	r26, 7
     fd0:	00 94       	com	r0
     fd2:	2a 0f       	add	r18, r26
     fd4:	30 1d       	adc	r19, r0
     fd6:	40 1d       	adc	r20, r0
     fd8:	50 1d       	adc	r21, r0
     fda:	60 1d       	adc	r22, r0
     fdc:	70 1d       	adc	r23, r0
     fde:	80 1d       	adc	r24, r0
     fe0:	90 1d       	adc	r25, r0
     fe2:	08 95       	ret

00000fe4 <__itoa_ncheck>:
     fe4:	bb 27       	eor	r27, r27
     fe6:	4a 30       	cpi	r20, 0x0A	; 10
     fe8:	31 f4       	brne	.+12     	; 0xff6 <__itoa_ncheck+0x12>
     fea:	99 23       	and	r25, r25
     fec:	22 f4       	brpl	.+8      	; 0xff6 <__itoa_ncheck+0x12>
     fee:	bd e2       	ldi	r27, 0x2D	; 45
     ff0:	90 95       	com	r25
     ff2:	81 95       	neg	r24
     ff4:	9f 4f       	sbci	r25, 0xFF	; 255
     ff6:	0c 94 fe 07 	jmp	0xffc	; 0xffc <__utoa_common>

00000ffa <__utoa_ncheck>:
     ffa:	bb 27       	eor	r27, r27

00000ffc <__utoa_common>:
     ffc:	fb 01       	movw	r30, r22
     ffe:	55 27       	eor	r21, r21
    1000:	aa 27       	eor	r26, r26
    1002:	88 0f       	add	r24, r24
    1004:	99 1f       	adc	r25, r25
    1006:	aa 1f       	adc	r26, r26
    1008:	a4 17       	cp	r26, r20
    100a:	10 f0       	brcs	.+4      	; 0x1010 <__DATA_REGION_LENGTH__+0x10>
    100c:	a4 1b       	sub	r26, r20
    100e:	83 95       	inc	r24
    1010:	50 51       	subi	r21, 0x10	; 16
    1012:	b9 f7       	brne	.-18     	; 0x1002 <__DATA_REGION_LENGTH__+0x2>
    1014:	a0 5d       	subi	r26, 0xD0	; 208
    1016:	aa 33       	cpi	r26, 0x3A	; 58
    1018:	08 f0       	brcs	.+2      	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
    101a:	a9 5d       	subi	r26, 0xD9	; 217
    101c:	a1 93       	st	Z+, r26
    101e:	00 97       	sbiw	r24, 0x00	; 0
    1020:	79 f7       	brne	.-34     	; 0x1000 <__DATA_REGION_LENGTH__>
    1022:	b1 11       	cpse	r27, r1
    1024:	b1 93       	st	Z+, r27
    1026:	11 92       	st	Z+, r1
    1028:	cb 01       	movw	r24, r22
    102a:	0c 94 30 0a 	jmp	0x1460	; 0x1460 <strrev>

0000102e <sprintf>:
    102e:	ae e0       	ldi	r26, 0x0E	; 14
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	ed e1       	ldi	r30, 0x1D	; 29
    1034:	f8 e0       	ldi	r31, 0x08	; 8
    1036:	0c 94 e8 0a 	jmp	0x15d0	; 0x15d0 <__prologue_saves__+0x1c>
    103a:	0d 89       	ldd	r16, Y+21	; 0x15
    103c:	1e 89       	ldd	r17, Y+22	; 0x16
    103e:	86 e0       	ldi	r24, 0x06	; 6
    1040:	8c 83       	std	Y+4, r24	; 0x04
    1042:	1a 83       	std	Y+2, r17	; 0x02
    1044:	09 83       	std	Y+1, r16	; 0x01
    1046:	8f ef       	ldi	r24, 0xFF	; 255
    1048:	9f e7       	ldi	r25, 0x7F	; 127
    104a:	9e 83       	std	Y+6, r25	; 0x06
    104c:	8d 83       	std	Y+5, r24	; 0x05
    104e:	ae 01       	movw	r20, r28
    1050:	47 5e       	subi	r20, 0xE7	; 231
    1052:	5f 4f       	sbci	r21, 0xFF	; 255
    1054:	6f 89       	ldd	r22, Y+23	; 0x17
    1056:	78 8d       	ldd	r23, Y+24	; 0x18
    1058:	ce 01       	movw	r24, r28
    105a:	01 96       	adiw	r24, 0x01	; 1
    105c:	0e 94 39 08 	call	0x1072	; 0x1072 <vfprintf>
    1060:	ef 81       	ldd	r30, Y+7	; 0x07
    1062:	f8 85       	ldd	r31, Y+8	; 0x08
    1064:	e0 0f       	add	r30, r16
    1066:	f1 1f       	adc	r31, r17
    1068:	10 82       	st	Z, r1
    106a:	2e 96       	adiw	r28, 0x0e	; 14
    106c:	e4 e0       	ldi	r30, 0x04	; 4
    106e:	0c 94 04 0b 	jmp	0x1608	; 0x1608 <__epilogue_restores__+0x1c>

00001072 <vfprintf>:
    1072:	ab e0       	ldi	r26, 0x0B	; 11
    1074:	b0 e0       	ldi	r27, 0x00	; 0
    1076:	ef e3       	ldi	r30, 0x3F	; 63
    1078:	f8 e0       	ldi	r31, 0x08	; 8
    107a:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__prologue_saves__>
    107e:	6c 01       	movw	r12, r24
    1080:	7b 01       	movw	r14, r22
    1082:	8a 01       	movw	r16, r20
    1084:	fc 01       	movw	r30, r24
    1086:	17 82       	std	Z+7, r1	; 0x07
    1088:	16 82       	std	Z+6, r1	; 0x06
    108a:	83 81       	ldd	r24, Z+3	; 0x03
    108c:	81 ff       	sbrs	r24, 1
    108e:	cc c1       	rjmp	.+920    	; 0x1428 <__stack+0x329>
    1090:	ce 01       	movw	r24, r28
    1092:	01 96       	adiw	r24, 0x01	; 1
    1094:	3c 01       	movw	r6, r24
    1096:	f6 01       	movw	r30, r12
    1098:	93 81       	ldd	r25, Z+3	; 0x03
    109a:	f7 01       	movw	r30, r14
    109c:	93 fd       	sbrc	r25, 3
    109e:	85 91       	lpm	r24, Z+
    10a0:	93 ff       	sbrs	r25, 3
    10a2:	81 91       	ld	r24, Z+
    10a4:	7f 01       	movw	r14, r30
    10a6:	88 23       	and	r24, r24
    10a8:	09 f4       	brne	.+2      	; 0x10ac <vfprintf+0x3a>
    10aa:	ba c1       	rjmp	.+884    	; 0x1420 <__stack+0x321>
    10ac:	85 32       	cpi	r24, 0x25	; 37
    10ae:	39 f4       	brne	.+14     	; 0x10be <vfprintf+0x4c>
    10b0:	93 fd       	sbrc	r25, 3
    10b2:	85 91       	lpm	r24, Z+
    10b4:	93 ff       	sbrs	r25, 3
    10b6:	81 91       	ld	r24, Z+
    10b8:	7f 01       	movw	r14, r30
    10ba:	85 32       	cpi	r24, 0x25	; 37
    10bc:	29 f4       	brne	.+10     	; 0x10c8 <vfprintf+0x56>
    10be:	b6 01       	movw	r22, r12
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    10c6:	e7 cf       	rjmp	.-50     	; 0x1096 <vfprintf+0x24>
    10c8:	91 2c       	mov	r9, r1
    10ca:	21 2c       	mov	r2, r1
    10cc:	31 2c       	mov	r3, r1
    10ce:	ff e1       	ldi	r31, 0x1F	; 31
    10d0:	f3 15       	cp	r31, r3
    10d2:	d8 f0       	brcs	.+54     	; 0x110a <__stack+0xb>
    10d4:	8b 32       	cpi	r24, 0x2B	; 43
    10d6:	79 f0       	breq	.+30     	; 0x10f6 <vfprintf+0x84>
    10d8:	38 f4       	brcc	.+14     	; 0x10e8 <vfprintf+0x76>
    10da:	80 32       	cpi	r24, 0x20	; 32
    10dc:	79 f0       	breq	.+30     	; 0x10fc <vfprintf+0x8a>
    10de:	83 32       	cpi	r24, 0x23	; 35
    10e0:	a1 f4       	brne	.+40     	; 0x110a <__stack+0xb>
    10e2:	23 2d       	mov	r18, r3
    10e4:	20 61       	ori	r18, 0x10	; 16
    10e6:	1d c0       	rjmp	.+58     	; 0x1122 <__stack+0x23>
    10e8:	8d 32       	cpi	r24, 0x2D	; 45
    10ea:	61 f0       	breq	.+24     	; 0x1104 <__stack+0x5>
    10ec:	80 33       	cpi	r24, 0x30	; 48
    10ee:	69 f4       	brne	.+26     	; 0x110a <__stack+0xb>
    10f0:	23 2d       	mov	r18, r3
    10f2:	21 60       	ori	r18, 0x01	; 1
    10f4:	16 c0       	rjmp	.+44     	; 0x1122 <__stack+0x23>
    10f6:	83 2d       	mov	r24, r3
    10f8:	82 60       	ori	r24, 0x02	; 2
    10fa:	38 2e       	mov	r3, r24
    10fc:	e3 2d       	mov	r30, r3
    10fe:	e4 60       	ori	r30, 0x04	; 4
    1100:	3e 2e       	mov	r3, r30
    1102:	2a c0       	rjmp	.+84     	; 0x1158 <__stack+0x59>
    1104:	f3 2d       	mov	r31, r3
    1106:	f8 60       	ori	r31, 0x08	; 8
    1108:	1d c0       	rjmp	.+58     	; 0x1144 <__stack+0x45>
    110a:	37 fc       	sbrc	r3, 7
    110c:	2d c0       	rjmp	.+90     	; 0x1168 <__stack+0x69>
    110e:	20 ed       	ldi	r18, 0xD0	; 208
    1110:	28 0f       	add	r18, r24
    1112:	2a 30       	cpi	r18, 0x0A	; 10
    1114:	40 f0       	brcs	.+16     	; 0x1126 <__stack+0x27>
    1116:	8e 32       	cpi	r24, 0x2E	; 46
    1118:	b9 f4       	brne	.+46     	; 0x1148 <__stack+0x49>
    111a:	36 fc       	sbrc	r3, 6
    111c:	81 c1       	rjmp	.+770    	; 0x1420 <__stack+0x321>
    111e:	23 2d       	mov	r18, r3
    1120:	20 64       	ori	r18, 0x40	; 64
    1122:	32 2e       	mov	r3, r18
    1124:	19 c0       	rjmp	.+50     	; 0x1158 <__stack+0x59>
    1126:	36 fe       	sbrs	r3, 6
    1128:	06 c0       	rjmp	.+12     	; 0x1136 <__stack+0x37>
    112a:	8a e0       	ldi	r24, 0x0A	; 10
    112c:	98 9e       	mul	r9, r24
    112e:	20 0d       	add	r18, r0
    1130:	11 24       	eor	r1, r1
    1132:	92 2e       	mov	r9, r18
    1134:	11 c0       	rjmp	.+34     	; 0x1158 <__stack+0x59>
    1136:	ea e0       	ldi	r30, 0x0A	; 10
    1138:	2e 9e       	mul	r2, r30
    113a:	20 0d       	add	r18, r0
    113c:	11 24       	eor	r1, r1
    113e:	22 2e       	mov	r2, r18
    1140:	f3 2d       	mov	r31, r3
    1142:	f0 62       	ori	r31, 0x20	; 32
    1144:	3f 2e       	mov	r3, r31
    1146:	08 c0       	rjmp	.+16     	; 0x1158 <__stack+0x59>
    1148:	8c 36       	cpi	r24, 0x6C	; 108
    114a:	21 f4       	brne	.+8      	; 0x1154 <__stack+0x55>
    114c:	83 2d       	mov	r24, r3
    114e:	80 68       	ori	r24, 0x80	; 128
    1150:	38 2e       	mov	r3, r24
    1152:	02 c0       	rjmp	.+4      	; 0x1158 <__stack+0x59>
    1154:	88 36       	cpi	r24, 0x68	; 104
    1156:	41 f4       	brne	.+16     	; 0x1168 <__stack+0x69>
    1158:	f7 01       	movw	r30, r14
    115a:	93 fd       	sbrc	r25, 3
    115c:	85 91       	lpm	r24, Z+
    115e:	93 ff       	sbrs	r25, 3
    1160:	81 91       	ld	r24, Z+
    1162:	7f 01       	movw	r14, r30
    1164:	81 11       	cpse	r24, r1
    1166:	b3 cf       	rjmp	.-154    	; 0x10ce <vfprintf+0x5c>
    1168:	98 2f       	mov	r25, r24
    116a:	9f 7d       	andi	r25, 0xDF	; 223
    116c:	95 54       	subi	r25, 0x45	; 69
    116e:	93 30       	cpi	r25, 0x03	; 3
    1170:	28 f4       	brcc	.+10     	; 0x117c <__stack+0x7d>
    1172:	0c 5f       	subi	r16, 0xFC	; 252
    1174:	1f 4f       	sbci	r17, 0xFF	; 255
    1176:	9f e3       	ldi	r25, 0x3F	; 63
    1178:	99 83       	std	Y+1, r25	; 0x01
    117a:	0d c0       	rjmp	.+26     	; 0x1196 <__stack+0x97>
    117c:	83 36       	cpi	r24, 0x63	; 99
    117e:	31 f0       	breq	.+12     	; 0x118c <__stack+0x8d>
    1180:	83 37       	cpi	r24, 0x73	; 115
    1182:	71 f0       	breq	.+28     	; 0x11a0 <__stack+0xa1>
    1184:	83 35       	cpi	r24, 0x53	; 83
    1186:	09 f0       	breq	.+2      	; 0x118a <__stack+0x8b>
    1188:	59 c0       	rjmp	.+178    	; 0x123c <__stack+0x13d>
    118a:	21 c0       	rjmp	.+66     	; 0x11ce <__stack+0xcf>
    118c:	f8 01       	movw	r30, r16
    118e:	80 81       	ld	r24, Z
    1190:	89 83       	std	Y+1, r24	; 0x01
    1192:	0e 5f       	subi	r16, 0xFE	; 254
    1194:	1f 4f       	sbci	r17, 0xFF	; 255
    1196:	88 24       	eor	r8, r8
    1198:	83 94       	inc	r8
    119a:	91 2c       	mov	r9, r1
    119c:	53 01       	movw	r10, r6
    119e:	13 c0       	rjmp	.+38     	; 0x11c6 <__stack+0xc7>
    11a0:	28 01       	movw	r4, r16
    11a2:	f2 e0       	ldi	r31, 0x02	; 2
    11a4:	4f 0e       	add	r4, r31
    11a6:	51 1c       	adc	r5, r1
    11a8:	f8 01       	movw	r30, r16
    11aa:	a0 80       	ld	r10, Z
    11ac:	b1 80       	ldd	r11, Z+1	; 0x01
    11ae:	36 fe       	sbrs	r3, 6
    11b0:	03 c0       	rjmp	.+6      	; 0x11b8 <__stack+0xb9>
    11b2:	69 2d       	mov	r22, r9
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	02 c0       	rjmp	.+4      	; 0x11bc <__stack+0xbd>
    11b8:	6f ef       	ldi	r22, 0xFF	; 255
    11ba:	7f ef       	ldi	r23, 0xFF	; 255
    11bc:	c5 01       	movw	r24, r10
    11be:	0e 94 25 0a 	call	0x144a	; 0x144a <strnlen>
    11c2:	4c 01       	movw	r8, r24
    11c4:	82 01       	movw	r16, r4
    11c6:	f3 2d       	mov	r31, r3
    11c8:	ff 77       	andi	r31, 0x7F	; 127
    11ca:	3f 2e       	mov	r3, r31
    11cc:	16 c0       	rjmp	.+44     	; 0x11fa <__stack+0xfb>
    11ce:	28 01       	movw	r4, r16
    11d0:	22 e0       	ldi	r18, 0x02	; 2
    11d2:	42 0e       	add	r4, r18
    11d4:	51 1c       	adc	r5, r1
    11d6:	f8 01       	movw	r30, r16
    11d8:	a0 80       	ld	r10, Z
    11da:	b1 80       	ldd	r11, Z+1	; 0x01
    11dc:	36 fe       	sbrs	r3, 6
    11de:	03 c0       	rjmp	.+6      	; 0x11e6 <__stack+0xe7>
    11e0:	69 2d       	mov	r22, r9
    11e2:	70 e0       	ldi	r23, 0x00	; 0
    11e4:	02 c0       	rjmp	.+4      	; 0x11ea <__stack+0xeb>
    11e6:	6f ef       	ldi	r22, 0xFF	; 255
    11e8:	7f ef       	ldi	r23, 0xFF	; 255
    11ea:	c5 01       	movw	r24, r10
    11ec:	0e 94 1a 0a 	call	0x1434	; 0x1434 <strnlen_P>
    11f0:	4c 01       	movw	r8, r24
    11f2:	f3 2d       	mov	r31, r3
    11f4:	f0 68       	ori	r31, 0x80	; 128
    11f6:	3f 2e       	mov	r3, r31
    11f8:	82 01       	movw	r16, r4
    11fa:	33 fc       	sbrc	r3, 3
    11fc:	1b c0       	rjmp	.+54     	; 0x1234 <__stack+0x135>
    11fe:	82 2d       	mov	r24, r2
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	88 16       	cp	r8, r24
    1204:	99 06       	cpc	r9, r25
    1206:	b0 f4       	brcc	.+44     	; 0x1234 <__stack+0x135>
    1208:	b6 01       	movw	r22, r12
    120a:	80 e2       	ldi	r24, 0x20	; 32
    120c:	90 e0       	ldi	r25, 0x00	; 0
    120e:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    1212:	2a 94       	dec	r2
    1214:	f4 cf       	rjmp	.-24     	; 0x11fe <__stack+0xff>
    1216:	f5 01       	movw	r30, r10
    1218:	37 fc       	sbrc	r3, 7
    121a:	85 91       	lpm	r24, Z+
    121c:	37 fe       	sbrs	r3, 7
    121e:	81 91       	ld	r24, Z+
    1220:	5f 01       	movw	r10, r30
    1222:	b6 01       	movw	r22, r12
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    122a:	21 10       	cpse	r2, r1
    122c:	2a 94       	dec	r2
    122e:	21 e0       	ldi	r18, 0x01	; 1
    1230:	82 1a       	sub	r8, r18
    1232:	91 08       	sbc	r9, r1
    1234:	81 14       	cp	r8, r1
    1236:	91 04       	cpc	r9, r1
    1238:	71 f7       	brne	.-36     	; 0x1216 <__stack+0x117>
    123a:	e8 c0       	rjmp	.+464    	; 0x140c <__stack+0x30d>
    123c:	84 36       	cpi	r24, 0x64	; 100
    123e:	11 f0       	breq	.+4      	; 0x1244 <__stack+0x145>
    1240:	89 36       	cpi	r24, 0x69	; 105
    1242:	41 f5       	brne	.+80     	; 0x1294 <__stack+0x195>
    1244:	f8 01       	movw	r30, r16
    1246:	37 fe       	sbrs	r3, 7
    1248:	07 c0       	rjmp	.+14     	; 0x1258 <__stack+0x159>
    124a:	60 81       	ld	r22, Z
    124c:	71 81       	ldd	r23, Z+1	; 0x01
    124e:	82 81       	ldd	r24, Z+2	; 0x02
    1250:	93 81       	ldd	r25, Z+3	; 0x03
    1252:	0c 5f       	subi	r16, 0xFC	; 252
    1254:	1f 4f       	sbci	r17, 0xFF	; 255
    1256:	08 c0       	rjmp	.+16     	; 0x1268 <__stack+0x169>
    1258:	60 81       	ld	r22, Z
    125a:	71 81       	ldd	r23, Z+1	; 0x01
    125c:	07 2e       	mov	r0, r23
    125e:	00 0c       	add	r0, r0
    1260:	88 0b       	sbc	r24, r24
    1262:	99 0b       	sbc	r25, r25
    1264:	0e 5f       	subi	r16, 0xFE	; 254
    1266:	1f 4f       	sbci	r17, 0xFF	; 255
    1268:	f3 2d       	mov	r31, r3
    126a:	ff 76       	andi	r31, 0x6F	; 111
    126c:	3f 2e       	mov	r3, r31
    126e:	97 ff       	sbrs	r25, 7
    1270:	09 c0       	rjmp	.+18     	; 0x1284 <__stack+0x185>
    1272:	90 95       	com	r25
    1274:	80 95       	com	r24
    1276:	70 95       	com	r23
    1278:	61 95       	neg	r22
    127a:	7f 4f       	sbci	r23, 0xFF	; 255
    127c:	8f 4f       	sbci	r24, 0xFF	; 255
    127e:	9f 4f       	sbci	r25, 0xFF	; 255
    1280:	f0 68       	ori	r31, 0x80	; 128
    1282:	3f 2e       	mov	r3, r31
    1284:	2a e0       	ldi	r18, 0x0A	; 10
    1286:	30 e0       	ldi	r19, 0x00	; 0
    1288:	a3 01       	movw	r20, r6
    128a:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__ultoa_invert>
    128e:	88 2e       	mov	r8, r24
    1290:	86 18       	sub	r8, r6
    1292:	45 c0       	rjmp	.+138    	; 0x131e <__stack+0x21f>
    1294:	85 37       	cpi	r24, 0x75	; 117
    1296:	31 f4       	brne	.+12     	; 0x12a4 <__stack+0x1a5>
    1298:	23 2d       	mov	r18, r3
    129a:	2f 7e       	andi	r18, 0xEF	; 239
    129c:	b2 2e       	mov	r11, r18
    129e:	2a e0       	ldi	r18, 0x0A	; 10
    12a0:	30 e0       	ldi	r19, 0x00	; 0
    12a2:	25 c0       	rjmp	.+74     	; 0x12ee <__stack+0x1ef>
    12a4:	93 2d       	mov	r25, r3
    12a6:	99 7f       	andi	r25, 0xF9	; 249
    12a8:	b9 2e       	mov	r11, r25
    12aa:	8f 36       	cpi	r24, 0x6F	; 111
    12ac:	c1 f0       	breq	.+48     	; 0x12de <__stack+0x1df>
    12ae:	18 f4       	brcc	.+6      	; 0x12b6 <__stack+0x1b7>
    12b0:	88 35       	cpi	r24, 0x58	; 88
    12b2:	79 f0       	breq	.+30     	; 0x12d2 <__stack+0x1d3>
    12b4:	b5 c0       	rjmp	.+362    	; 0x1420 <__stack+0x321>
    12b6:	80 37       	cpi	r24, 0x70	; 112
    12b8:	19 f0       	breq	.+6      	; 0x12c0 <__stack+0x1c1>
    12ba:	88 37       	cpi	r24, 0x78	; 120
    12bc:	21 f0       	breq	.+8      	; 0x12c6 <__stack+0x1c7>
    12be:	b0 c0       	rjmp	.+352    	; 0x1420 <__stack+0x321>
    12c0:	e9 2f       	mov	r30, r25
    12c2:	e0 61       	ori	r30, 0x10	; 16
    12c4:	be 2e       	mov	r11, r30
    12c6:	b4 fe       	sbrs	r11, 4
    12c8:	0d c0       	rjmp	.+26     	; 0x12e4 <__stack+0x1e5>
    12ca:	fb 2d       	mov	r31, r11
    12cc:	f4 60       	ori	r31, 0x04	; 4
    12ce:	bf 2e       	mov	r11, r31
    12d0:	09 c0       	rjmp	.+18     	; 0x12e4 <__stack+0x1e5>
    12d2:	34 fe       	sbrs	r3, 4
    12d4:	0a c0       	rjmp	.+20     	; 0x12ea <__stack+0x1eb>
    12d6:	29 2f       	mov	r18, r25
    12d8:	26 60       	ori	r18, 0x06	; 6
    12da:	b2 2e       	mov	r11, r18
    12dc:	06 c0       	rjmp	.+12     	; 0x12ea <__stack+0x1eb>
    12de:	28 e0       	ldi	r18, 0x08	; 8
    12e0:	30 e0       	ldi	r19, 0x00	; 0
    12e2:	05 c0       	rjmp	.+10     	; 0x12ee <__stack+0x1ef>
    12e4:	20 e1       	ldi	r18, 0x10	; 16
    12e6:	30 e0       	ldi	r19, 0x00	; 0
    12e8:	02 c0       	rjmp	.+4      	; 0x12ee <__stack+0x1ef>
    12ea:	20 e1       	ldi	r18, 0x10	; 16
    12ec:	32 e0       	ldi	r19, 0x02	; 2
    12ee:	f8 01       	movw	r30, r16
    12f0:	b7 fe       	sbrs	r11, 7
    12f2:	07 c0       	rjmp	.+14     	; 0x1302 <__stack+0x203>
    12f4:	60 81       	ld	r22, Z
    12f6:	71 81       	ldd	r23, Z+1	; 0x01
    12f8:	82 81       	ldd	r24, Z+2	; 0x02
    12fa:	93 81       	ldd	r25, Z+3	; 0x03
    12fc:	0c 5f       	subi	r16, 0xFC	; 252
    12fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1300:	06 c0       	rjmp	.+12     	; 0x130e <__stack+0x20f>
    1302:	60 81       	ld	r22, Z
    1304:	71 81       	ldd	r23, Z+1	; 0x01
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 5f       	subi	r16, 0xFE	; 254
    130c:	1f 4f       	sbci	r17, 0xFF	; 255
    130e:	a3 01       	movw	r20, r6
    1310:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__ultoa_invert>
    1314:	88 2e       	mov	r8, r24
    1316:	86 18       	sub	r8, r6
    1318:	fb 2d       	mov	r31, r11
    131a:	ff 77       	andi	r31, 0x7F	; 127
    131c:	3f 2e       	mov	r3, r31
    131e:	36 fe       	sbrs	r3, 6
    1320:	0d c0       	rjmp	.+26     	; 0x133c <__stack+0x23d>
    1322:	23 2d       	mov	r18, r3
    1324:	2e 7f       	andi	r18, 0xFE	; 254
    1326:	a2 2e       	mov	r10, r18
    1328:	89 14       	cp	r8, r9
    132a:	58 f4       	brcc	.+22     	; 0x1342 <__stack+0x243>
    132c:	34 fe       	sbrs	r3, 4
    132e:	0b c0       	rjmp	.+22     	; 0x1346 <__stack+0x247>
    1330:	32 fc       	sbrc	r3, 2
    1332:	09 c0       	rjmp	.+18     	; 0x1346 <__stack+0x247>
    1334:	83 2d       	mov	r24, r3
    1336:	8e 7e       	andi	r24, 0xEE	; 238
    1338:	a8 2e       	mov	r10, r24
    133a:	05 c0       	rjmp	.+10     	; 0x1346 <__stack+0x247>
    133c:	b8 2c       	mov	r11, r8
    133e:	a3 2c       	mov	r10, r3
    1340:	03 c0       	rjmp	.+6      	; 0x1348 <__stack+0x249>
    1342:	b8 2c       	mov	r11, r8
    1344:	01 c0       	rjmp	.+2      	; 0x1348 <__stack+0x249>
    1346:	b9 2c       	mov	r11, r9
    1348:	a4 fe       	sbrs	r10, 4
    134a:	0f c0       	rjmp	.+30     	; 0x136a <__stack+0x26b>
    134c:	fe 01       	movw	r30, r28
    134e:	e8 0d       	add	r30, r8
    1350:	f1 1d       	adc	r31, r1
    1352:	80 81       	ld	r24, Z
    1354:	80 33       	cpi	r24, 0x30	; 48
    1356:	21 f4       	brne	.+8      	; 0x1360 <__stack+0x261>
    1358:	9a 2d       	mov	r25, r10
    135a:	99 7e       	andi	r25, 0xE9	; 233
    135c:	a9 2e       	mov	r10, r25
    135e:	09 c0       	rjmp	.+18     	; 0x1372 <__stack+0x273>
    1360:	a2 fe       	sbrs	r10, 2
    1362:	06 c0       	rjmp	.+12     	; 0x1370 <__stack+0x271>
    1364:	b3 94       	inc	r11
    1366:	b3 94       	inc	r11
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <__stack+0x273>
    136a:	8a 2d       	mov	r24, r10
    136c:	86 78       	andi	r24, 0x86	; 134
    136e:	09 f0       	breq	.+2      	; 0x1372 <__stack+0x273>
    1370:	b3 94       	inc	r11
    1372:	a3 fc       	sbrc	r10, 3
    1374:	11 c0       	rjmp	.+34     	; 0x1398 <__stack+0x299>
    1376:	a0 fe       	sbrs	r10, 0
    1378:	06 c0       	rjmp	.+12     	; 0x1386 <__stack+0x287>
    137a:	b2 14       	cp	r11, r2
    137c:	88 f4       	brcc	.+34     	; 0x13a0 <__stack+0x2a1>
    137e:	28 0c       	add	r2, r8
    1380:	92 2c       	mov	r9, r2
    1382:	9b 18       	sub	r9, r11
    1384:	0e c0       	rjmp	.+28     	; 0x13a2 <__stack+0x2a3>
    1386:	b2 14       	cp	r11, r2
    1388:	60 f4       	brcc	.+24     	; 0x13a2 <__stack+0x2a3>
    138a:	b6 01       	movw	r22, r12
    138c:	80 e2       	ldi	r24, 0x20	; 32
    138e:	90 e0       	ldi	r25, 0x00	; 0
    1390:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    1394:	b3 94       	inc	r11
    1396:	f7 cf       	rjmp	.-18     	; 0x1386 <__stack+0x287>
    1398:	b2 14       	cp	r11, r2
    139a:	18 f4       	brcc	.+6      	; 0x13a2 <__stack+0x2a3>
    139c:	2b 18       	sub	r2, r11
    139e:	02 c0       	rjmp	.+4      	; 0x13a4 <__stack+0x2a5>
    13a0:	98 2c       	mov	r9, r8
    13a2:	21 2c       	mov	r2, r1
    13a4:	a4 fe       	sbrs	r10, 4
    13a6:	10 c0       	rjmp	.+32     	; 0x13c8 <__stack+0x2c9>
    13a8:	b6 01       	movw	r22, r12
    13aa:	80 e3       	ldi	r24, 0x30	; 48
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    13b2:	a2 fe       	sbrs	r10, 2
    13b4:	17 c0       	rjmp	.+46     	; 0x13e4 <__stack+0x2e5>
    13b6:	a1 fc       	sbrc	r10, 1
    13b8:	03 c0       	rjmp	.+6      	; 0x13c0 <__stack+0x2c1>
    13ba:	88 e7       	ldi	r24, 0x78	; 120
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <__stack+0x2c5>
    13c0:	88 e5       	ldi	r24, 0x58	; 88
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	b6 01       	movw	r22, r12
    13c6:	0c c0       	rjmp	.+24     	; 0x13e0 <__stack+0x2e1>
    13c8:	8a 2d       	mov	r24, r10
    13ca:	86 78       	andi	r24, 0x86	; 134
    13cc:	59 f0       	breq	.+22     	; 0x13e4 <__stack+0x2e5>
    13ce:	a1 fe       	sbrs	r10, 1
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <__stack+0x2d7>
    13d2:	8b e2       	ldi	r24, 0x2B	; 43
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <__stack+0x2d9>
    13d6:	80 e2       	ldi	r24, 0x20	; 32
    13d8:	a7 fc       	sbrc	r10, 7
    13da:	8d e2       	ldi	r24, 0x2D	; 45
    13dc:	b6 01       	movw	r22, r12
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    13e4:	89 14       	cp	r8, r9
    13e6:	38 f4       	brcc	.+14     	; 0x13f6 <__stack+0x2f7>
    13e8:	b6 01       	movw	r22, r12
    13ea:	80 e3       	ldi	r24, 0x30	; 48
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    13f2:	9a 94       	dec	r9
    13f4:	f7 cf       	rjmp	.-18     	; 0x13e4 <__stack+0x2e5>
    13f6:	8a 94       	dec	r8
    13f8:	f3 01       	movw	r30, r6
    13fa:	e8 0d       	add	r30, r8
    13fc:	f1 1d       	adc	r31, r1
    13fe:	80 81       	ld	r24, Z
    1400:	b6 01       	movw	r22, r12
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    1408:	81 10       	cpse	r8, r1
    140a:	f5 cf       	rjmp	.-22     	; 0x13f6 <__stack+0x2f7>
    140c:	22 20       	and	r2, r2
    140e:	09 f4       	brne	.+2      	; 0x1412 <__stack+0x313>
    1410:	42 ce       	rjmp	.-892    	; 0x1096 <vfprintf+0x24>
    1412:	b6 01       	movw	r22, r12
    1414:	80 e2       	ldi	r24, 0x20	; 32
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	0e 94 40 0a 	call	0x1480	; 0x1480 <fputc>
    141c:	2a 94       	dec	r2
    141e:	f6 cf       	rjmp	.-20     	; 0x140c <__stack+0x30d>
    1420:	f6 01       	movw	r30, r12
    1422:	86 81       	ldd	r24, Z+6	; 0x06
    1424:	97 81       	ldd	r25, Z+7	; 0x07
    1426:	02 c0       	rjmp	.+4      	; 0x142c <__stack+0x32d>
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	9f ef       	ldi	r25, 0xFF	; 255
    142c:	2b 96       	adiw	r28, 0x0b	; 11
    142e:	e2 e1       	ldi	r30, 0x12	; 18
    1430:	0c 94 f6 0a 	jmp	0x15ec	; 0x15ec <__epilogue_restores__>

00001434 <strnlen_P>:
    1434:	fc 01       	movw	r30, r24
    1436:	05 90       	lpm	r0, Z+
    1438:	61 50       	subi	r22, 0x01	; 1
    143a:	70 40       	sbci	r23, 0x00	; 0
    143c:	01 10       	cpse	r0, r1
    143e:	d8 f7       	brcc	.-10     	; 0x1436 <strnlen_P+0x2>
    1440:	80 95       	com	r24
    1442:	90 95       	com	r25
    1444:	8e 0f       	add	r24, r30
    1446:	9f 1f       	adc	r25, r31
    1448:	08 95       	ret

0000144a <strnlen>:
    144a:	fc 01       	movw	r30, r24
    144c:	61 50       	subi	r22, 0x01	; 1
    144e:	70 40       	sbci	r23, 0x00	; 0
    1450:	01 90       	ld	r0, Z+
    1452:	01 10       	cpse	r0, r1
    1454:	d8 f7       	brcc	.-10     	; 0x144c <strnlen+0x2>
    1456:	80 95       	com	r24
    1458:	90 95       	com	r25
    145a:	8e 0f       	add	r24, r30
    145c:	9f 1f       	adc	r25, r31
    145e:	08 95       	ret

00001460 <strrev>:
    1460:	dc 01       	movw	r26, r24
    1462:	fc 01       	movw	r30, r24
    1464:	67 2f       	mov	r22, r23
    1466:	71 91       	ld	r23, Z+
    1468:	77 23       	and	r23, r23
    146a:	e1 f7       	brne	.-8      	; 0x1464 <strrev+0x4>
    146c:	32 97       	sbiw	r30, 0x02	; 2
    146e:	04 c0       	rjmp	.+8      	; 0x1478 <strrev+0x18>
    1470:	7c 91       	ld	r23, X
    1472:	6d 93       	st	X+, r22
    1474:	70 83       	st	Z, r23
    1476:	62 91       	ld	r22, -Z
    1478:	ae 17       	cp	r26, r30
    147a:	bf 07       	cpc	r27, r31
    147c:	c8 f3       	brcs	.-14     	; 0x1470 <strrev+0x10>
    147e:	08 95       	ret

00001480 <fputc>:
    1480:	0f 93       	push	r16
    1482:	1f 93       	push	r17
    1484:	cf 93       	push	r28
    1486:	df 93       	push	r29
    1488:	fb 01       	movw	r30, r22
    148a:	23 81       	ldd	r18, Z+3	; 0x03
    148c:	21 fd       	sbrc	r18, 1
    148e:	03 c0       	rjmp	.+6      	; 0x1496 <fputc+0x16>
    1490:	8f ef       	ldi	r24, 0xFF	; 255
    1492:	9f ef       	ldi	r25, 0xFF	; 255
    1494:	2c c0       	rjmp	.+88     	; 0x14ee <fputc+0x6e>
    1496:	22 ff       	sbrs	r18, 2
    1498:	16 c0       	rjmp	.+44     	; 0x14c6 <fputc+0x46>
    149a:	46 81       	ldd	r20, Z+6	; 0x06
    149c:	57 81       	ldd	r21, Z+7	; 0x07
    149e:	24 81       	ldd	r18, Z+4	; 0x04
    14a0:	35 81       	ldd	r19, Z+5	; 0x05
    14a2:	42 17       	cp	r20, r18
    14a4:	53 07       	cpc	r21, r19
    14a6:	44 f4       	brge	.+16     	; 0x14b8 <fputc+0x38>
    14a8:	a0 81       	ld	r26, Z
    14aa:	b1 81       	ldd	r27, Z+1	; 0x01
    14ac:	9d 01       	movw	r18, r26
    14ae:	2f 5f       	subi	r18, 0xFF	; 255
    14b0:	3f 4f       	sbci	r19, 0xFF	; 255
    14b2:	31 83       	std	Z+1, r19	; 0x01
    14b4:	20 83       	st	Z, r18
    14b6:	8c 93       	st	X, r24
    14b8:	26 81       	ldd	r18, Z+6	; 0x06
    14ba:	37 81       	ldd	r19, Z+7	; 0x07
    14bc:	2f 5f       	subi	r18, 0xFF	; 255
    14be:	3f 4f       	sbci	r19, 0xFF	; 255
    14c0:	37 83       	std	Z+7, r19	; 0x07
    14c2:	26 83       	std	Z+6, r18	; 0x06
    14c4:	14 c0       	rjmp	.+40     	; 0x14ee <fputc+0x6e>
    14c6:	8b 01       	movw	r16, r22
    14c8:	ec 01       	movw	r28, r24
    14ca:	fb 01       	movw	r30, r22
    14cc:	00 84       	ldd	r0, Z+8	; 0x08
    14ce:	f1 85       	ldd	r31, Z+9	; 0x09
    14d0:	e0 2d       	mov	r30, r0
    14d2:	09 95       	icall
    14d4:	89 2b       	or	r24, r25
    14d6:	e1 f6       	brne	.-72     	; 0x1490 <fputc+0x10>
    14d8:	d8 01       	movw	r26, r16
    14da:	16 96       	adiw	r26, 0x06	; 6
    14dc:	8d 91       	ld	r24, X+
    14de:	9c 91       	ld	r25, X
    14e0:	17 97       	sbiw	r26, 0x07	; 7
    14e2:	01 96       	adiw	r24, 0x01	; 1
    14e4:	17 96       	adiw	r26, 0x07	; 7
    14e6:	9c 93       	st	X, r25
    14e8:	8e 93       	st	-X, r24
    14ea:	16 97       	sbiw	r26, 0x06	; 6
    14ec:	ce 01       	movw	r24, r28
    14ee:	df 91       	pop	r29
    14f0:	cf 91       	pop	r28
    14f2:	1f 91       	pop	r17
    14f4:	0f 91       	pop	r16
    14f6:	08 95       	ret

000014f8 <__ultoa_invert>:
    14f8:	fa 01       	movw	r30, r20
    14fa:	aa 27       	eor	r26, r26
    14fc:	28 30       	cpi	r18, 0x08	; 8
    14fe:	51 f1       	breq	.+84     	; 0x1554 <__ultoa_invert+0x5c>
    1500:	20 31       	cpi	r18, 0x10	; 16
    1502:	81 f1       	breq	.+96     	; 0x1564 <__ultoa_invert+0x6c>
    1504:	e8 94       	clt
    1506:	6f 93       	push	r22
    1508:	6e 7f       	andi	r22, 0xFE	; 254
    150a:	6e 5f       	subi	r22, 0xFE	; 254
    150c:	7f 4f       	sbci	r23, 0xFF	; 255
    150e:	8f 4f       	sbci	r24, 0xFF	; 255
    1510:	9f 4f       	sbci	r25, 0xFF	; 255
    1512:	af 4f       	sbci	r26, 0xFF	; 255
    1514:	b1 e0       	ldi	r27, 0x01	; 1
    1516:	3e d0       	rcall	.+124    	; 0x1594 <__ultoa_invert+0x9c>
    1518:	b4 e0       	ldi	r27, 0x04	; 4
    151a:	3c d0       	rcall	.+120    	; 0x1594 <__ultoa_invert+0x9c>
    151c:	67 0f       	add	r22, r23
    151e:	78 1f       	adc	r23, r24
    1520:	89 1f       	adc	r24, r25
    1522:	9a 1f       	adc	r25, r26
    1524:	a1 1d       	adc	r26, r1
    1526:	68 0f       	add	r22, r24
    1528:	79 1f       	adc	r23, r25
    152a:	8a 1f       	adc	r24, r26
    152c:	91 1d       	adc	r25, r1
    152e:	a1 1d       	adc	r26, r1
    1530:	6a 0f       	add	r22, r26
    1532:	71 1d       	adc	r23, r1
    1534:	81 1d       	adc	r24, r1
    1536:	91 1d       	adc	r25, r1
    1538:	a1 1d       	adc	r26, r1
    153a:	20 d0       	rcall	.+64     	; 0x157c <__ultoa_invert+0x84>
    153c:	09 f4       	brne	.+2      	; 0x1540 <__ultoa_invert+0x48>
    153e:	68 94       	set
    1540:	3f 91       	pop	r19
    1542:	2a e0       	ldi	r18, 0x0A	; 10
    1544:	26 9f       	mul	r18, r22
    1546:	11 24       	eor	r1, r1
    1548:	30 19       	sub	r19, r0
    154a:	30 5d       	subi	r19, 0xD0	; 208
    154c:	31 93       	st	Z+, r19
    154e:	de f6       	brtc	.-74     	; 0x1506 <__ultoa_invert+0xe>
    1550:	cf 01       	movw	r24, r30
    1552:	08 95       	ret
    1554:	46 2f       	mov	r20, r22
    1556:	47 70       	andi	r20, 0x07	; 7
    1558:	40 5d       	subi	r20, 0xD0	; 208
    155a:	41 93       	st	Z+, r20
    155c:	b3 e0       	ldi	r27, 0x03	; 3
    155e:	0f d0       	rcall	.+30     	; 0x157e <__ultoa_invert+0x86>
    1560:	c9 f7       	brne	.-14     	; 0x1554 <__ultoa_invert+0x5c>
    1562:	f6 cf       	rjmp	.-20     	; 0x1550 <__ultoa_invert+0x58>
    1564:	46 2f       	mov	r20, r22
    1566:	4f 70       	andi	r20, 0x0F	; 15
    1568:	40 5d       	subi	r20, 0xD0	; 208
    156a:	4a 33       	cpi	r20, 0x3A	; 58
    156c:	18 f0       	brcs	.+6      	; 0x1574 <__ultoa_invert+0x7c>
    156e:	49 5d       	subi	r20, 0xD9	; 217
    1570:	31 fd       	sbrc	r19, 1
    1572:	40 52       	subi	r20, 0x20	; 32
    1574:	41 93       	st	Z+, r20
    1576:	02 d0       	rcall	.+4      	; 0x157c <__ultoa_invert+0x84>
    1578:	a9 f7       	brne	.-22     	; 0x1564 <__ultoa_invert+0x6c>
    157a:	ea cf       	rjmp	.-44     	; 0x1550 <__ultoa_invert+0x58>
    157c:	b4 e0       	ldi	r27, 0x04	; 4
    157e:	a6 95       	lsr	r26
    1580:	97 95       	ror	r25
    1582:	87 95       	ror	r24
    1584:	77 95       	ror	r23
    1586:	67 95       	ror	r22
    1588:	ba 95       	dec	r27
    158a:	c9 f7       	brne	.-14     	; 0x157e <__ultoa_invert+0x86>
    158c:	00 97       	sbiw	r24, 0x00	; 0
    158e:	61 05       	cpc	r22, r1
    1590:	71 05       	cpc	r23, r1
    1592:	08 95       	ret
    1594:	9b 01       	movw	r18, r22
    1596:	ac 01       	movw	r20, r24
    1598:	0a 2e       	mov	r0, r26
    159a:	06 94       	lsr	r0
    159c:	57 95       	ror	r21
    159e:	47 95       	ror	r20
    15a0:	37 95       	ror	r19
    15a2:	27 95       	ror	r18
    15a4:	ba 95       	dec	r27
    15a6:	c9 f7       	brne	.-14     	; 0x159a <__ultoa_invert+0xa2>
    15a8:	62 0f       	add	r22, r18
    15aa:	73 1f       	adc	r23, r19
    15ac:	84 1f       	adc	r24, r20
    15ae:	95 1f       	adc	r25, r21
    15b0:	a0 1d       	adc	r26, r0
    15b2:	08 95       	ret

000015b4 <__prologue_saves__>:
    15b4:	2f 92       	push	r2
    15b6:	3f 92       	push	r3
    15b8:	4f 92       	push	r4
    15ba:	5f 92       	push	r5
    15bc:	6f 92       	push	r6
    15be:	7f 92       	push	r7
    15c0:	8f 92       	push	r8
    15c2:	9f 92       	push	r9
    15c4:	af 92       	push	r10
    15c6:	bf 92       	push	r11
    15c8:	cf 92       	push	r12
    15ca:	df 92       	push	r13
    15cc:	ef 92       	push	r14
    15ce:	ff 92       	push	r15
    15d0:	0f 93       	push	r16
    15d2:	1f 93       	push	r17
    15d4:	cf 93       	push	r28
    15d6:	df 93       	push	r29
    15d8:	cd b7       	in	r28, 0x3d	; 61
    15da:	de b7       	in	r29, 0x3e	; 62
    15dc:	ca 1b       	sub	r28, r26
    15de:	db 0b       	sbc	r29, r27
    15e0:	0f b6       	in	r0, 0x3f	; 63
    15e2:	f8 94       	cli
    15e4:	de bf       	out	0x3e, r29	; 62
    15e6:	0f be       	out	0x3f, r0	; 63
    15e8:	cd bf       	out	0x3d, r28	; 61
    15ea:	09 94       	ijmp

000015ec <__epilogue_restores__>:
    15ec:	2a 88       	ldd	r2, Y+18	; 0x12
    15ee:	39 88       	ldd	r3, Y+17	; 0x11
    15f0:	48 88       	ldd	r4, Y+16	; 0x10
    15f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    15f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    15f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    15f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    15fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    15fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    15fe:	b9 84       	ldd	r11, Y+9	; 0x09
    1600:	c8 84       	ldd	r12, Y+8	; 0x08
    1602:	df 80       	ldd	r13, Y+7	; 0x07
    1604:	ee 80       	ldd	r14, Y+6	; 0x06
    1606:	fd 80       	ldd	r15, Y+5	; 0x05
    1608:	0c 81       	ldd	r16, Y+4	; 0x04
    160a:	1b 81       	ldd	r17, Y+3	; 0x03
    160c:	aa 81       	ldd	r26, Y+2	; 0x02
    160e:	b9 81       	ldd	r27, Y+1	; 0x01
    1610:	ce 0f       	add	r28, r30
    1612:	d1 1d       	adc	r29, r1
    1614:	0f b6       	in	r0, 0x3f	; 63
    1616:	f8 94       	cli
    1618:	de bf       	out	0x3e, r29	; 62
    161a:	0f be       	out	0x3f, r0	; 63
    161c:	cd bf       	out	0x3d, r28	; 61
    161e:	ed 01       	movw	r28, r26
    1620:	08 95       	ret

00001622 <_exit>:
    1622:	f8 94       	cli

00001624 <__stop_program>:
    1624:	ff cf       	rjmp	.-2      	; 0x1624 <__stop_program>
