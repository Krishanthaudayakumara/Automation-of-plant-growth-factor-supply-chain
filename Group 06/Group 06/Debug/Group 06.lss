
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000096  00800100  00001622  000016b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001622  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800196  00800196  0000174c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000174c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  000017e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000015b1  00000000  00000000  00001874  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4a  00000000  00000000  00002e25  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000861  00000000  00000000  0000386f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  000040d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055d  00000000  00000000  00004294  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ca3  00000000  00000000  000047f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00005494  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__addsf3x+0x76>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e2 e2       	ldi	r30, 0x22	; 34
     122:	f6 e1       	ldi	r31, 0x16	; 22
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	a6 39       	cpi	r26, 0x96	; 150
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	a6 e9       	ldi	r26, 0x96	; 150
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	ab 39       	cpi	r26, 0x9B	; 155
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <main>
     144:	0c 94 0f 0b 	jmp	0x161e	; 0x161e <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <lcd_clear>:


void lcd_clear()
{
	lcdcmd(0x01);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     20e:	08 95       	ret

00000210 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     216:	08 95       	ret

00000218 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     218:	80 ec       	ldi	r24, 0xC0	; 192
     21a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     21e:	08 95       	ret

00000220 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     220:	8f ee       	ldi	r24, 0xEF	; 239
     222:	82 bb       	out	0x12, r24	; 18
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x8>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0xe>
     22e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     230:	80 9b       	sbis	0x10, 0	; 16
     232:	30 c0       	rjmp	.+96     	; 0x294 <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     234:	81 9b       	sbis	0x10, 1	; 16
     236:	30 c0       	rjmp	.+96     	; 0x298 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     238:	82 9b       	sbis	0x10, 2	; 16
     23a:	30 c0       	rjmp	.+96     	; 0x29c <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     23c:	8f ed       	ldi	r24, 0xDF	; 223
     23e:	82 bb       	out	0x12, r24	; 18
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x24>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x2a>
     24a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     24c:	80 9b       	sbis	0x10, 0	; 16
     24e:	28 c0       	rjmp	.+80     	; 0x2a0 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     250:	81 9b       	sbis	0x10, 1	; 16
     252:	28 c0       	rjmp	.+80     	; 0x2a4 <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     254:	82 9b       	sbis	0x10, 2	; 16
     256:	28 c0       	rjmp	.+80     	; 0x2a8 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     258:	8f eb       	ldi	r24, 0xBF	; 191
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	83 ec       	ldi	r24, 0xC3	; 195
     25e:	99 e0       	ldi	r25, 0x09	; 9
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <keycheck+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <keycheck+0x46>
     266:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     268:	80 9b       	sbis	0x10, 0	; 16
     26a:	20 c0       	rjmp	.+64     	; 0x2ac <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     26c:	81 9b       	sbis	0x10, 1	; 16
     26e:	20 c0       	rjmp	.+64     	; 0x2b0 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     270:	82 9b       	sbis	0x10, 2	; 16
     272:	20 c0       	rjmp	.+64     	; 0x2b4 <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     274:	8f e7       	ldi	r24, 0x7F	; 127
     276:	82 bb       	out	0x12, r24	; 18
     278:	83 ec       	ldi	r24, 0xC3	; 195
     27a:	99 e0       	ldi	r25, 0x09	; 9
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <keycheck+0x5c>
     280:	00 c0       	rjmp	.+0      	; 0x282 <keycheck+0x62>
     282:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     284:	80 9b       	sbis	0x10, 0	; 16
     286:	18 c0       	rjmp	.+48     	; 0x2b8 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     288:	81 9b       	sbis	0x10, 1	; 16
     28a:	18 c0       	rjmp	.+48     	; 0x2bc <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     28c:	82 99       	sbic	0x10, 2	; 16
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <keycheck+0xa0>
	{
		return '#';
     290:	83 e2       	ldi	r24, 0x23	; 35
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     294:	81 e3       	ldi	r24, 0x31	; 49
     296:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     298:	82 e3       	ldi	r24, 0x32	; 50
     29a:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     2a0:	84 e3       	ldi	r24, 0x34	; 52
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     2a4:	85 e3       	ldi	r24, 0x35	; 53
     2a6:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     2a8:	86 e3       	ldi	r24, 0x36	; 54
     2aa:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     2ac:	87 e3       	ldi	r24, 0x37	; 55
     2ae:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     2b4:	89 e3       	ldi	r24, 0x39	; 57
     2b6:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2b8:	8a e2       	ldi	r24, 0x2A	; 42
     2ba:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2bc:	80 e3       	ldi	r24, 0x30	; 48
     2be:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2c0:	81 e6       	ldi	r24, 0x61	; 97

}
     2c2:	08 95       	ret

000002c4 <scankey>:

char scankey()
{
	char key='a';
     2c4:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <scankey+0x8>
	{
		key=keycheck();
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2cc:	81 36       	cpi	r24, 0x61	; 97
     2ce:	e1 f3       	breq	.-8      	; 0x2c8 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2d0:	08 95       	ret

000002d2 <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2d2:	84 b3       	in	r24, 0x14	; 20
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	84 bb       	out	0x14, r24	; 20
     2d8:	08 95       	ret

000002da <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2da:	85 b3       	in	r24, 0x15	; 21
     2dc:	81 60       	ori	r24, 0x01	; 1
     2de:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	85 e0       	ldi	r24, 0x05	; 5
     2e2:	8a 95       	dec	r24
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2e6:	85 b3       	in	r24, 0x15	; 21
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	85 bb       	out	0x15, r24	; 21
     2ec:	08 95       	ret

000002ee <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c0 e0       	ldi	r28, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	f1 2c       	mov	r15, r1
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	15 c0       	rjmp	.+42     	; 0x342 <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     318:	99 99       	sbic	0x13, 1	; 19
     31a:	25 c0       	rjmp	.+74     	; 0x366 <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     31c:	2d 2f       	mov	r18, r29
     31e:	3c 2f       	mov	r19, r28
     320:	4b 2f       	mov	r20, r27
     322:	5a 2f       	mov	r21, r26
     324:	6f 2f       	mov	r22, r31
     326:	7f 2d       	mov	r23, r15
     328:	80 2f       	mov	r24, r16
     32a:	91 2f       	mov	r25, r17
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__adddi3_s8>
     332:	d2 2f       	mov	r29, r18
     334:	c3 2f       	mov	r28, r19
     336:	b4 2f       	mov	r27, r20
     338:	a5 2f       	mov	r26, r21
     33a:	f6 2f       	mov	r31, r22
     33c:	f7 2e       	mov	r15, r23
     33e:	08 2f       	mov	r16, r24
     340:	19 2f       	mov	r17, r25
     342:	2d 2f       	mov	r18, r29
     344:	3c 2f       	mov	r19, r28
     346:	4b 2f       	mov	r20, r27
     348:	5a 2f       	mov	r21, r26
     34a:	6f 2f       	mov	r22, r31
     34c:	7f 2d       	mov	r23, r15
     34e:	80 2f       	mov	r24, r16
     350:	91 2f       	mov	r25, r17
     352:	2f 3b       	cpi	r18, 0xBF	; 191
     354:	37 42       	sbci	r19, 0x27	; 39
     356:	49 40       	sbci	r20, 0x09	; 9
     358:	51 05       	cpc	r21, r1
     35a:	61 05       	cpc	r22, r1
     35c:	71 05       	cpc	r23, r1
     35e:	81 05       	cpc	r24, r1
     360:	91 05       	cpc	r25, r1
     362:	d1 f2       	breq	.-76     	; 0x318 <GetPulseWidth+0x2a>
     364:	c8 f2       	brcs	.-78     	; 0x318 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     366:	2d 2f       	mov	r18, r29
     368:	3c 2f       	mov	r19, r28
     36a:	4b 2f       	mov	r20, r27
     36c:	5a 2f       	mov	r21, r26
     36e:	6f 2f       	mov	r22, r31
     370:	7f 2d       	mov	r23, r15
     372:	80 2f       	mov	r24, r16
     374:	91 2f       	mov	r25, r17
     376:	20 3c       	cpi	r18, 0xC0	; 192
     378:	37 42       	sbci	r19, 0x27	; 39
     37a:	49 40       	sbci	r20, 0x09	; 9
     37c:	51 05       	cpc	r21, r1
     37e:	61 05       	cpc	r22, r1
     380:	71 05       	cpc	r23, r1
     382:	81 05       	cpc	r24, r1
     384:	91 05       	cpc	r25, r1
     386:	09 f4       	brne	.+2      	; 0x38a <GetPulseWidth+0x9c>
     388:	69 c0       	rjmp	.+210    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	return US_ERROR;
	
	TCCR1A=0X00;
     38a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     394:	d0 e0       	ldi	r29, 0x00	; 0
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	f1 2c       	mov	r15, r1
     3a0:	00 e0       	ldi	r16, 0x00	; 0
     3a2:	10 e0       	ldi	r17, 0x00	; 0
     3a4:	1a c0       	rjmp	.+52     	; 0x3da <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3a6:	99 9b       	sbis	0x13, 1	; 19
     3a8:	2a c0       	rjmp	.+84     	; 0x3fe <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     3aa:	8c b5       	in	r24, 0x2c	; 44
     3ac:	9d b5       	in	r25, 0x2d	; 45
     3ae:	81 36       	cpi	r24, 0x61	; 97
     3b0:	9a 4e       	sbci	r25, 0xEA	; 234
     3b2:	28 f5       	brcc	.+74     	; 0x3fe <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     3b4:	2d 2f       	mov	r18, r29
     3b6:	3c 2f       	mov	r19, r28
     3b8:	4b 2f       	mov	r20, r27
     3ba:	5a 2f       	mov	r21, r26
     3bc:	6f 2f       	mov	r22, r31
     3be:	7f 2d       	mov	r23, r15
     3c0:	80 2f       	mov	r24, r16
     3c2:	91 2f       	mov	r25, r17
     3c4:	a1 e0       	ldi	r26, 0x01	; 1
     3c6:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__adddi3_s8>
     3ca:	d2 2f       	mov	r29, r18
     3cc:	c3 2f       	mov	r28, r19
     3ce:	b4 2f       	mov	r27, r20
     3d0:	a5 2f       	mov	r26, r21
     3d2:	f6 2f       	mov	r31, r22
     3d4:	f7 2e       	mov	r15, r23
     3d6:	08 2f       	mov	r16, r24
     3d8:	19 2f       	mov	r17, r25
     3da:	2d 2f       	mov	r18, r29
     3dc:	3c 2f       	mov	r19, r28
     3de:	4b 2f       	mov	r20, r27
     3e0:	5a 2f       	mov	r21, r26
     3e2:	6f 2f       	mov	r22, r31
     3e4:	7f 2d       	mov	r23, r15
     3e6:	80 2f       	mov	r24, r16
     3e8:	91 2f       	mov	r25, r17
     3ea:	2f 3b       	cpi	r18, 0xBF	; 191
     3ec:	37 42       	sbci	r19, 0x27	; 39
     3ee:	49 40       	sbci	r20, 0x09	; 9
     3f0:	51 05       	cpc	r21, r1
     3f2:	61 05       	cpc	r22, r1
     3f4:	71 05       	cpc	r23, r1
     3f6:	81 05       	cpc	r24, r1
     3f8:	91 05       	cpc	r25, r1
     3fa:	a9 f2       	breq	.-86     	; 0x3a6 <GetPulseWidth+0xb8>
     3fc:	a0 f2       	brcs	.-88     	; 0x3a6 <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3fe:	2d 2f       	mov	r18, r29
     400:	3c 2f       	mov	r19, r28
     402:	4b 2f       	mov	r20, r27
     404:	5a 2f       	mov	r21, r26
     406:	6f 2f       	mov	r22, r31
     408:	7f 2d       	mov	r23, r15
     40a:	80 2f       	mov	r24, r16
     40c:	91 2f       	mov	r25, r17
     40e:	20 3c       	cpi	r18, 0xC0	; 192
     410:	37 42       	sbci	r19, 0x27	; 39
     412:	49 40       	sbci	r20, 0x09	; 9
     414:	51 05       	cpc	r21, r1
     416:	61 05       	cpc	r22, r1
     418:	71 05       	cpc	r23, r1
     41a:	81 05       	cpc	r24, r1
     41c:	91 05       	cpc	r25, r1
     41e:	19 f1       	breq	.+70     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	return US_NO_OBSTACLE;

	result=TCNT1;
     420:	8c b4       	in	r8, 0x2c	; 44
     422:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     424:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     426:	28 2d       	mov	r18, r8
     428:	39 2d       	mov	r19, r9
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	20 36       	cpi	r18, 0x60	; 96
     438:	ea ee       	ldi	r30, 0xEA	; 234
     43a:	3e 07       	cpc	r19, r30
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	61 05       	cpc	r22, r1
     442:	71 05       	cpc	r23, r1
     444:	81 05       	cpc	r24, r1
     446:	91 05       	cpc	r25, r1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	90 f4       	brcc	.+36     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     44c:	01 e0       	ldi	r16, 0x01	; 1
     44e:	0e 94 c8 07 	call	0xf90	; 0xf90 <__lshrdi3>
     452:	62 2f       	mov	r22, r18
     454:	73 2f       	mov	r23, r19
     456:	84 2f       	mov	r24, r20
     458:	95 2f       	mov	r25, r21
     45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	7f ef       	ldi	r23, 0xFF	; 255
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     466:	6e ef       	ldi	r22, 0xFE	; 254
     468:	7f ef       	ldi	r23, 0xFF	; 255
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     470:	6e ef       	ldi	r22, 0xFE	; 254
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <displayKey>:




int displayKey()
{
     492:	4f 92       	push	r4
     494:	5f 92       	push	r5
     496:	6f 92       	push	r6
     498:	7f 92       	push	r7
     49a:	8f 92       	push	r8
     49c:	9f 92       	push	r9
     49e:	af 92       	push	r10
     4a0:	bf 92       	push	r11
     4a2:	cf 92       	push	r12
     4a4:	df 92       	push	r13
     4a6:	ef 92       	push	r14
     4a8:	ff 92       	push	r15
     4aa:	0f 93       	push	r16
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62
     4b6:	64 97       	sbiw	r28, 0x14	; 20
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     4c2:	00 e0       	ldi	r16, 0x00	; 0
     4c4:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     4c6:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     4ca:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <key>
		lcddata(key);
     4ce:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     4d2:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <key>
     4d6:	83 32       	cpi	r24, 0x23	; 35
     4d8:	c9 f0       	breq	.+50     	; 0x50c <displayKey+0x7a>
		tmpNum = charToInt(key);
     4da:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     4de:	f8 01       	movw	r30, r16
     4e0:	ee 0f       	add	r30, r30
     4e2:	ff 1f       	adc	r31, r31
     4e4:	21 e0       	ldi	r18, 0x01	; 1
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	2c 0f       	add	r18, r28
     4ea:	3d 1f       	adc	r19, r29
     4ec:	e2 0f       	add	r30, r18
     4ee:	f3 1f       	adc	r31, r19
     4f0:	91 83       	std	Z+1, r25	; 0x01
     4f2:	80 83       	st	Z, r24
		i++;
     4f4:	0f 5f       	subi	r16, 0xFF	; 255
     4f6:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4f8:	3f e5       	ldi	r19, 0x5F	; 95
     4fa:	8a ee       	ldi	r24, 0xEA	; 234
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	31 50       	subi	r19, 0x01	; 1
     500:	80 40       	sbci	r24, 0x00	; 0
     502:	90 40       	sbci	r25, 0x00	; 0
     504:	e1 f7       	brne	.-8      	; 0x4fe <displayKey+0x6c>
     506:	00 c0       	rjmp	.+0      	; 0x508 <displayKey+0x76>
     508:	00 00       	nop
     50a:	dd cf       	rjmp	.-70     	; 0x4c6 <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     50c:	58 01       	movw	r10, r16
     50e:	21 e0       	ldi	r18, 0x01	; 1
     510:	a2 1a       	sub	r10, r18
     512:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     514:	e1 2c       	mov	r14, r1
     516:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     518:	81 2c       	mov	r8, r1
     51a:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     51c:	3b c0       	rjmp	.+118    	; 0x594 <displayKey+0x102>
		num += data[j]*pow(10,k);
     51e:	f7 01       	movw	r30, r14
     520:	ee 0f       	add	r30, r30
     522:	ff 1f       	adc	r31, r31
     524:	81 e0       	ldi	r24, 0x01	; 1
     526:	90 e0       	ldi	r25, 0x00	; 0
     528:	8c 0f       	add	r24, r28
     52a:	9d 1f       	adc	r25, r29
     52c:	e8 0f       	add	r30, r24
     52e:	f9 1f       	adc	r31, r25
     530:	c0 80       	ld	r12, Z
     532:	d1 80       	ldd	r13, Z+1	; 0x01
     534:	b5 01       	movw	r22, r10
     536:	0b 2c       	mov	r0, r11
     538:	00 0c       	add	r0, r0
     53a:	88 0b       	sbc	r24, r24
     53c:	99 0b       	sbc	r25, r25
     53e:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatsisf>
     542:	9b 01       	movw	r18, r22
     544:	ac 01       	movw	r20, r24
     546:	60 e0       	ldi	r22, 0x00	; 0
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	80 e2       	ldi	r24, 0x20	; 32
     54c:	91 e4       	ldi	r25, 0x41	; 65
     54e:	0e 94 cf 05 	call	0xb9e	; 0xb9e <pow>
     552:	2b 01       	movw	r4, r22
     554:	3c 01       	movw	r6, r24
     556:	b6 01       	movw	r22, r12
     558:	dd 0c       	add	r13, r13
     55a:	88 0b       	sbc	r24, r24
     55c:	99 0b       	sbc	r25, r25
     55e:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatsisf>
     562:	a3 01       	movw	r20, r6
     564:	92 01       	movw	r18, r4
     566:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
     56a:	2b 01       	movw	r4, r22
     56c:	3c 01       	movw	r6, r24
     56e:	b4 01       	movw	r22, r8
     570:	99 0c       	add	r9, r9
     572:	88 0b       	sbc	r24, r24
     574:	99 0b       	sbc	r25, r25
     576:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatsisf>
     57a:	a3 01       	movw	r20, r6
     57c:	92 01       	movw	r18, r4
     57e:	0e 94 32 04 	call	0x864	; 0x864 <__addsf3>
     582:	0e 94 9e 04 	call	0x93c	; 0x93c <__fixsfsi>
     586:	4b 01       	movw	r8, r22
		k--;
     588:	91 e0       	ldi	r25, 0x01	; 1
     58a:	a9 1a       	sub	r10, r25
     58c:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     58e:	2f ef       	ldi	r18, 0xFF	; 255
     590:	e2 1a       	sub	r14, r18
     592:	f2 0a       	sbc	r15, r18
     594:	e0 16       	cp	r14, r16
     596:	f1 06       	cpc	r15, r17
     598:	14 f2       	brlt	.-124    	; 0x51e <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     59a:	81 e0       	ldi	r24, 0x01	; 1
     59c:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     5a0:	c4 01       	movw	r24, r8
     5a2:	64 96       	adiw	r28, 0x14	; 20
     5a4:	0f b6       	in	r0, 0x3f	; 63
     5a6:	f8 94       	cli
     5a8:	de bf       	out	0x3e, r29	; 62
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	cd bf       	out	0x3d, r28	; 61
     5ae:	df 91       	pop	r29
     5b0:	cf 91       	pop	r28
     5b2:	1f 91       	pop	r17
     5b4:	0f 91       	pop	r16
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	bf 90       	pop	r11
     5c0:	af 90       	pop	r10
     5c2:	9f 90       	pop	r9
     5c4:	8f 90       	pop	r8
     5c6:	7f 90       	pop	r7
     5c8:	6f 90       	pop	r6
     5ca:	5f 90       	pop	r5
     5cc:	4f 90       	pop	r4
     5ce:	08 95       	ret

000005d0 <main>:



int main(void)

{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	2e 97       	sbiw	r28, 0x0e	; 14
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	f8 94       	cli
     5de:	de bf       	out	0x3e, r29	; 62
     5e0:	0f be       	out	0x3f, r0	; 63
     5e2:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     5e4:	8f ef       	ldi	r24, 0xFF	; 255
     5e6:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     5e8:	87 e0       	ldi	r24, 0x07	; 7
     5ea:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     5ec:	80 ef       	ldi	r24, 0xF0	; 240
     5ee:	81 bb       	out	0x11, r24	; 17

	char key;
	char numberString[4];

	lcdint();
     5f0:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     5f4:	6e e0       	ldi	r22, 0x0E	; 14
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     5fe:	2f e7       	ldi	r18, 0x7F	; 127
     600:	89 ea       	ldi	r24, 0xA9	; 169
     602:	93 e0       	ldi	r25, 0x03	; 3
     604:	21 50       	subi	r18, 0x01	; 1
     606:	80 40       	sbci	r24, 0x00	; 0
     608:	90 40       	sbci	r25, 0x00	; 0
     60a:	e1 f7       	brne	.-8      	; 0x604 <main+0x34>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <main+0x3e>
     60e:	00 00       	nop
	_delay_ms(1200);
	lcd_line_two();
     610:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("from ~GROUP 06~",16);
     614:	60 e1       	ldi	r22, 0x10	; 16
     616:	80 e1       	ldi	r24, 0x10	; 16
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     61e:	2f e3       	ldi	r18, 0x3F	; 63
     620:	8d e0       	ldi	r24, 0x0D	; 13
     622:	93 e0       	ldi	r25, 0x03	; 3
     624:	21 50       	subi	r18, 0x01	; 1
     626:	80 40       	sbci	r24, 0x00	; 0
     628:	90 40       	sbci	r25, 0x00	; 0
     62a:	e1 f7       	brne	.-8      	; 0x624 <main+0x54>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <main+0x5e>
     62e:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clear();
     630:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
	lcd_line_one();
     634:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
	lcd_string("ENTER 1 TO",10);
     638:	6a e0       	ldi	r22, 0x0A	; 10
     63a:	80 e2       	ldi	r24, 0x20	; 32
     63c:	91 e0       	ldi	r25, 0x01	; 1
     63e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     642:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("INSTRUCTIONS",12);
     646:	6c e0       	ldi	r22, 0x0C	; 12
     648:	8b e2       	ldi	r24, 0x2B	; 43
     64a:	91 e0       	ldi	r25, 0x01	; 1
     64c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     650:	2f e7       	ldi	r18, 0x7F	; 127
     652:	89 ea       	ldi	r24, 0xA9	; 169
     654:	93 e0       	ldi	r25, 0x03	; 3
     656:	21 50       	subi	r18, 0x01	; 1
     658:	80 40       	sbci	r24, 0x00	; 0
     65a:	90 40       	sbci	r25, 0x00	; 0
     65c:	e1 f7       	brne	.-8      	; 0x656 <main+0x86>
     65e:	00 c0       	rjmp	.+0      	; 0x660 <main+0x90>
     660:	00 00       	nop

	
	while(1)
	{
		
		lcd_clear();
     662:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     666:	6f e0       	ldi	r22, 0x0F	; 15
     668:	88 e3       	ldi	r24, 0x38	; 56
     66a:	91 e0       	ldi	r25, 0x01	; 1
     66c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		key = scankey();
     670:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
		
		switch(key)
     674:	82 33       	cpi	r24, 0x32	; 50
     676:	69 f0       	breq	.+26     	; 0x692 <main+0xc2>
     678:	83 33       	cpi	r24, 0x33	; 51
     67a:	09 f4       	brne	.+2      	; 0x67e <main+0xae>
     67c:	4c c0       	rjmp	.+152    	; 0x716 <main+0x146>
     67e:	81 33       	cpi	r24, 0x31	; 49
     680:	81 f7       	brne	.-32     	; 0x662 <main+0x92>
		{
			case '1':
				lcd_clear();
     682:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     686:	6c e0       	ldi	r22, 0x0C	; 12
     688:	8b e2       	ldi	r24, 0x2B	; 43
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				break;
     690:	e8 cf       	rjmp	.-48     	; 0x662 <main+0x92>
			case '2':
				lcd_clear();
     692:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();
     696:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("ENTER PLANT",11);
     69a:	6b e0       	ldi	r22, 0x0B	; 11
     69c:	87 e4       	ldi	r24, 0x47	; 71
     69e:	91 e0       	ldi	r25, 0x01	; 1
     6a0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcd_line_two();
     6a4:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
				lcd_string("COUNT: ",7);
     6a8:	67 e0       	ldi	r22, 0x07	; 7
     6aa:	83 e5       	ldi	r24, 0x53	; 83
     6ac:	91 e0       	ldi	r25, 0x01	; 1
     6ae:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				key = scankey();
     6b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
				if(key == '*') break;
     6b6:	8a 32       	cpi	r24, 0x2A	; 42
     6b8:	a1 f2       	breq	.-88     	; 0x662 <main+0x92>
				int plantCount = displayKey();
     6ba:	0e 94 49 02 	call	0x492	; 0x492 <displayKey>
				
				char text[10];
				sprintf(text, "%d", plantCount);
     6be:	9f 93       	push	r25
     6c0:	8f 93       	push	r24
     6c2:	8b e5       	ldi	r24, 0x5B	; 91
     6c4:	91 e0       	ldi	r25, 0x01	; 1
     6c6:	9f 93       	push	r25
     6c8:	8f 93       	push	r24
     6ca:	8e 01       	movw	r16, r28
     6cc:	0b 5f       	subi	r16, 0xFB	; 251
     6ce:	1f 4f       	sbci	r17, 0xFF	; 255
     6d0:	1f 93       	push	r17
     6d2:	0f 93       	push	r16
     6d4:	0e 94 15 08 	call	0x102a	; 0x102a <sprintf>
				
				lcdcmd(0x01);
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("PLANT COUNT IS",15);
     6de:	6f e0       	ldi	r22, 0x0F	; 15
     6e0:	8e e5       	ldi	r24, 0x5E	; 94
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcdcmd(0xC0);
     6e8:	80 ec       	ldi	r24, 0xC0	; 192
     6ea:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string(text,10);
     6ee:	6a e0       	ldi	r22, 0x0A	; 10
     6f0:	c8 01       	movw	r24, r16
     6f2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     6f6:	2f e3       	ldi	r18, 0x3F	; 63
     6f8:	8d e0       	ldi	r24, 0x0D	; 13
     6fa:	93 e0       	ldi	r25, 0x03	; 3
     6fc:	21 50       	subi	r18, 0x01	; 1
     6fe:	80 40       	sbci	r24, 0x00	; 0
     700:	90 40       	sbci	r25, 0x00	; 0
     702:	e1 f7       	brne	.-8      	; 0x6fc <main+0x12c>
     704:	00 c0       	rjmp	.+0      	; 0x706 <main+0x136>
     706:	00 00       	nop
     708:	0f 90       	pop	r0
     70a:	0f 90       	pop	r0
     70c:	0f 90       	pop	r0
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	a6 cf       	rjmp	.-180    	; 0x662 <main+0x92>
     716:	87 ea       	ldi	r24, 0xA7	; 167
     718:	91 e6       	ldi	r25, 0x61	; 97
     71a:	01 97       	sbiw	r24, 0x01	; 1
     71c:	f1 f7       	brne	.-4      	; 0x71a <main+0x14a>
     71e:	00 c0       	rjmp	.+0      	; 0x720 <main+0x150>
     720:	00 00       	nop
					
					uint16_t r;
					
					_delay_ms(100);

					lcd_clear();
     722:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					
					
					HCSR04Init();
     726:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HCSR04Init>

					while(1)
					{	
						HCSR04Trigger();              
     72a:	0e 94 6d 01 	call	0x2da	; 0x2da <HCSR04Trigger>
						r=GetPulseWidth();
     72e:	0e 94 77 01 	call	0x2ee	; 0x2ee <GetPulseWidth>
						if(r==US_ERROR) 
     732:	6f 3f       	cpi	r22, 0xFF	; 255
     734:	2f ef       	ldi	r18, 0xFF	; 255
     736:	72 07       	cpc	r23, r18
     738:	89 f4       	brne	.+34     	; 0x75c <main+0x18c>
						{
							lcd_clear();
     73a:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							lcd_string("E!",2);
     73e:	62 e0       	ldi	r22, 0x02	; 2
     740:	8d e0       	ldi	r24, 0x0D	; 13
     742:	91 e0       	ldi	r25, 0x01	; 1
     744:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     748:	8f e3       	ldi	r24, 0x3F	; 63
     74a:	9d e0       	ldi	r25, 0x0D	; 13
     74c:	23 e0       	ldi	r18, 0x03	; 3
     74e:	81 50       	subi	r24, 0x01	; 1
     750:	90 40       	sbci	r25, 0x00	; 0
     752:	20 40       	sbci	r18, 0x00	; 0
     754:	e1 f7       	brne	.-8      	; 0x74e <main+0x17e>
     756:	00 c0       	rjmp	.+0      	; 0x758 <main+0x188>
     758:	00 00       	nop
     75a:	e7 cf       	rjmp	.-50     	; 0x72a <main+0x15a>
							
						}
						else
						{
							
							distance=50-(r*0.034/2.0);	
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__floatunsisf>
     764:	26 e9       	ldi	r18, 0x96	; 150
     766:	33 e4       	ldi	r19, 0x43	; 67
     768:	4b e0       	ldi	r20, 0x0B	; 11
     76a:	5d e3       	ldi	r21, 0x3D	; 61
     76c:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
     770:	20 e0       	ldi	r18, 0x00	; 0
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	40 e0       	ldi	r20, 0x00	; 0
     776:	5f e3       	ldi	r21, 0x3F	; 63
     778:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
     77c:	9b 01       	movw	r18, r22
     77e:	ac 01       	movw	r20, r24
     780:	60 e0       	ldi	r22, 0x00	; 0
     782:	70 e0       	ldi	r23, 0x00	; 0
     784:	88 e4       	ldi	r24, 0x48	; 72
     786:	92 e4       	ldi	r25, 0x42	; 66
     788:	0e 94 31 04 	call	0x862	; 0x862 <__subsf3>
     78c:	0e 94 9e 04 	call	0x93c	; 0x93c <__fixsfsi>
     790:	70 93 99 01 	sts	0x0199, r23	; 0x800199 <distance+0x1>
     794:	60 93 98 01 	sts	0x0198, r22	; 0x800198 <distance>
							
							
							
							if (distance != previous_distance)    
     798:	20 91 96 01 	lds	r18, 0x0196	; 0x800196 <__data_end>
     79c:	30 91 97 01 	lds	r19, 0x0197	; 0x800197 <__data_end+0x1>
     7a0:	26 17       	cp	r18, r22
     7a2:	37 07       	cpc	r19, r23
     7a4:	19 f0       	breq	.+6      	; 0x7ac <main+0x1dc>
							{
								lcdcmd(0x01);
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
							}
							
							lcdcmd(0x01);
     7ac:	81 e0       	ldi	r24, 0x01	; 1
     7ae:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
							
							lcdcmd(0x80);
     7b2:	80 e8       	ldi	r24, 0x80	; 128
     7b4:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
							lcd_string("WATER LV =",11);
     7b8:	6b e0       	ldi	r22, 0x0B	; 11
     7ba:	8d e6       	ldi	r24, 0x6D	; 109
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     7c2:	4a e0       	ldi	r20, 0x0A	; 10
     7c4:	be 01       	movw	r22, r28
     7c6:	6f 5f       	subi	r22, 0xFF	; 255
     7c8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ca:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     7ce:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     7d2:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <__itoa_ncheck>
							
							itoa(distance, numberString, 10);   
							lcd_string(numberString,3);
     7d6:	63 e0       	ldi	r22, 0x03	; 3
     7d8:	ce 01       	movw	r24, r28
     7da:	01 96       	adiw	r24, 0x01	; 1
     7dc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

							lcd_string("cm",2);
     7e0:	62 e0       	ldi	r22, 0x02	; 2
     7e2:	88 e7       	ldi	r24, 0x78	; 120
     7e4:	91 e0       	ldi	r25, 0x01	; 1
     7e6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
							
							
							previous_distance = distance;
     7ea:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     7ee:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     7f2:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <__data_end+0x1>
     7f6:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <__data_end>
     7fa:	8b e4       	ldi	r24, 0x4B	; 75
     7fc:	9d e1       	ldi	r25, 0x1D	; 29
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	f1 f7       	brne	.-4      	; 0x7fe <main+0x22e>
     802:	00 c0       	rjmp	.+0      	; 0x804 <__EEPROM_REGION_LENGTH__+0x4>
     804:	00 00       	nop
							_delay_ms(30);
							
							if(distance<10)
     806:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     80a:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     80e:	0a 97       	sbiw	r24, 0x0a	; 10
     810:	44 f4       	brge	.+16     	; 0x822 <__EEPROM_REGION_LENGTH__+0x22>
							{
								lcdcmd(0xC0);
     812:	80 ec       	ldi	r24, 0xC0	; 192
     814:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
								lcd_string("WATER LOW!!!",13);
     818:	6d e0       	ldi	r22, 0x0D	; 13
     81a:	8b e7       	ldi	r24, 0x7B	; 123
     81c:	91 e0       	ldi	r25, 0x01	; 1
     81e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(1<<PINA0);
								
							}
							if(distance>=10)
     822:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distance>
     826:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distance+0x1>
     82a:	0a 97       	sbiw	r24, 0x0a	; 10
     82c:	44 f0       	brlt	.+16     	; 0x83e <__EEPROM_REGION_LENGTH__+0x3e>
							{
								lcdcmd(0xC0);
     82e:	80 ec       	ldi	r24, 0xC0	; 192
     830:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
								lcd_string("ENOUGH WATER",12);
     834:	6c e0       	ldi	r22, 0x0C	; 12
     836:	88 e8       	ldi	r24, 0x88	; 136
     838:	91 e0       	ldi	r25, 0x01	; 1
     83a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(0<<PINA0);
								
							}
							key = scankey();
     83e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
							if(key == '*') break;
     842:	8a 32       	cpi	r24, 0x2A	; 42
     844:	51 f0       	breq	.+20     	; 0x85a <__EEPROM_REGION_LENGTH__+0x5a>
     846:	9f e7       	ldi	r25, 0x7F	; 127
     848:	29 ea       	ldi	r18, 0xA9	; 169
     84a:	83 e0       	ldi	r24, 0x03	; 3
     84c:	91 50       	subi	r25, 0x01	; 1
     84e:	20 40       	sbci	r18, 0x00	; 0
     850:	80 40       	sbci	r24, 0x00	; 0
     852:	e1 f7       	brne	.-8      	; 0x84c <__EEPROM_REGION_LENGTH__+0x4c>
     854:	00 c0       	rjmp	.+0      	; 0x856 <__EEPROM_REGION_LENGTH__+0x56>
     856:	00 00       	nop
     858:	68 cf       	rjmp	.-304    	; 0x72a <main+0x15a>
							_delay_ms(1200);
							
						}
					}
					
				if(key == '*') break;
     85a:	8a 32       	cpi	r24, 0x2A	; 42
     85c:	09 f0       	breq	.+2      	; 0x860 <__EEPROM_REGION_LENGTH__+0x60>
     85e:	5b cf       	rjmp	.-330    	; 0x716 <main+0x146>
     860:	00 cf       	rjmp	.-512    	; 0x662 <main+0x92>

00000862 <__subsf3>:
     862:	50 58       	subi	r21, 0x80	; 128

00000864 <__addsf3>:
     864:	bb 27       	eor	r27, r27
     866:	aa 27       	eor	r26, r26
     868:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3x>
     86c:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     870:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     874:	38 f0       	brcs	.+14     	; 0x884 <__addsf3+0x20>
     876:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     87a:	20 f0       	brcs	.+8      	; 0x884 <__addsf3+0x20>
     87c:	39 f4       	brne	.+14     	; 0x88c <__addsf3+0x28>
     87e:	9f 3f       	cpi	r25, 0xFF	; 255
     880:	19 f4       	brne	.+6      	; 0x888 <__addsf3+0x24>
     882:	26 f4       	brtc	.+8      	; 0x88c <__addsf3+0x28>
     884:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     888:	0e f4       	brtc	.+2      	; 0x88c <__addsf3+0x28>
     88a:	e0 95       	com	r30
     88c:	e7 fb       	bst	r30, 7
     88e:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>

00000892 <__addsf3x>:
     892:	e9 2f       	mov	r30, r25
     894:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     898:	58 f3       	brcs	.-42     	; 0x870 <__addsf3+0xc>
     89a:	ba 17       	cp	r27, r26
     89c:	62 07       	cpc	r22, r18
     89e:	73 07       	cpc	r23, r19
     8a0:	84 07       	cpc	r24, r20
     8a2:	95 07       	cpc	r25, r21
     8a4:	20 f0       	brcs	.+8      	; 0x8ae <__addsf3x+0x1c>
     8a6:	79 f4       	brne	.+30     	; 0x8c6 <__addsf3x+0x34>
     8a8:	a6 f5       	brtc	.+104    	; 0x912 <__addsf3x+0x80>
     8aa:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_zero>
     8ae:	0e f4       	brtc	.+2      	; 0x8b2 <__addsf3x+0x20>
     8b0:	e0 95       	com	r30
     8b2:	0b 2e       	mov	r0, r27
     8b4:	ba 2f       	mov	r27, r26
     8b6:	a0 2d       	mov	r26, r0
     8b8:	0b 01       	movw	r0, r22
     8ba:	b9 01       	movw	r22, r18
     8bc:	90 01       	movw	r18, r0
     8be:	0c 01       	movw	r0, r24
     8c0:	ca 01       	movw	r24, r20
     8c2:	a0 01       	movw	r20, r0
     8c4:	11 24       	eor	r1, r1
     8c6:	ff 27       	eor	r31, r31
     8c8:	59 1b       	sub	r21, r25
     8ca:	99 f0       	breq	.+38     	; 0x8f2 <__addsf3x+0x60>
     8cc:	59 3f       	cpi	r21, 0xF9	; 249
     8ce:	50 f4       	brcc	.+20     	; 0x8e4 <__addsf3x+0x52>
     8d0:	50 3e       	cpi	r21, 0xE0	; 224
     8d2:	68 f1       	brcs	.+90     	; 0x92e <__addsf3x+0x9c>
     8d4:	1a 16       	cp	r1, r26
     8d6:	f0 40       	sbci	r31, 0x00	; 0
     8d8:	a2 2f       	mov	r26, r18
     8da:	23 2f       	mov	r18, r19
     8dc:	34 2f       	mov	r19, r20
     8de:	44 27       	eor	r20, r20
     8e0:	58 5f       	subi	r21, 0xF8	; 248
     8e2:	f3 cf       	rjmp	.-26     	; 0x8ca <__addsf3x+0x38>
     8e4:	46 95       	lsr	r20
     8e6:	37 95       	ror	r19
     8e8:	27 95       	ror	r18
     8ea:	a7 95       	ror	r26
     8ec:	f0 40       	sbci	r31, 0x00	; 0
     8ee:	53 95       	inc	r21
     8f0:	c9 f7       	brne	.-14     	; 0x8e4 <__addsf3x+0x52>
     8f2:	7e f4       	brtc	.+30     	; 0x912 <__addsf3x+0x80>
     8f4:	1f 16       	cp	r1, r31
     8f6:	ba 0b       	sbc	r27, r26
     8f8:	62 0b       	sbc	r22, r18
     8fa:	73 0b       	sbc	r23, r19
     8fc:	84 0b       	sbc	r24, r20
     8fe:	ba f0       	brmi	.+46     	; 0x92e <__addsf3x+0x9c>
     900:	91 50       	subi	r25, 0x01	; 1
     902:	a1 f0       	breq	.+40     	; 0x92c <__addsf3x+0x9a>
     904:	ff 0f       	add	r31, r31
     906:	bb 1f       	adc	r27, r27
     908:	66 1f       	adc	r22, r22
     90a:	77 1f       	adc	r23, r23
     90c:	88 1f       	adc	r24, r24
     90e:	c2 f7       	brpl	.-16     	; 0x900 <__addsf3x+0x6e>
     910:	0e c0       	rjmp	.+28     	; 0x92e <__addsf3x+0x9c>
     912:	ba 0f       	add	r27, r26
     914:	62 1f       	adc	r22, r18
     916:	73 1f       	adc	r23, r19
     918:	84 1f       	adc	r24, r20
     91a:	48 f4       	brcc	.+18     	; 0x92e <__addsf3x+0x9c>
     91c:	87 95       	ror	r24
     91e:	77 95       	ror	r23
     920:	67 95       	ror	r22
     922:	b7 95       	ror	r27
     924:	f7 95       	ror	r31
     926:	9e 3f       	cpi	r25, 0xFE	; 254
     928:	08 f0       	brcs	.+2      	; 0x92c <__addsf3x+0x9a>
     92a:	b0 cf       	rjmp	.-160    	; 0x88c <__addsf3+0x28>
     92c:	93 95       	inc	r25
     92e:	88 0f       	add	r24, r24
     930:	08 f0       	brcs	.+2      	; 0x934 <__addsf3x+0xa2>
     932:	99 27       	eor	r25, r25
     934:	ee 0f       	add	r30, r30
     936:	97 95       	ror	r25
     938:	87 95       	ror	r24
     93a:	08 95       	ret

0000093c <__fixsfsi>:
     93c:	0e 94 a5 04 	call	0x94a	; 0x94a <__fixunssfsi>
     940:	68 94       	set
     942:	b1 11       	cpse	r27, r1
     944:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     948:	08 95       	ret

0000094a <__fixunssfsi>:
     94a:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_splitA>
     94e:	88 f0       	brcs	.+34     	; 0x972 <__fixunssfsi+0x28>
     950:	9f 57       	subi	r25, 0x7F	; 127
     952:	98 f0       	brcs	.+38     	; 0x97a <__fixunssfsi+0x30>
     954:	b9 2f       	mov	r27, r25
     956:	99 27       	eor	r25, r25
     958:	b7 51       	subi	r27, 0x17	; 23
     95a:	b0 f0       	brcs	.+44     	; 0x988 <__fixunssfsi+0x3e>
     95c:	e1 f0       	breq	.+56     	; 0x996 <__fixunssfsi+0x4c>
     95e:	66 0f       	add	r22, r22
     960:	77 1f       	adc	r23, r23
     962:	88 1f       	adc	r24, r24
     964:	99 1f       	adc	r25, r25
     966:	1a f0       	brmi	.+6      	; 0x96e <__fixunssfsi+0x24>
     968:	ba 95       	dec	r27
     96a:	c9 f7       	brne	.-14     	; 0x95e <__fixunssfsi+0x14>
     96c:	14 c0       	rjmp	.+40     	; 0x996 <__fixunssfsi+0x4c>
     96e:	b1 30       	cpi	r27, 0x01	; 1
     970:	91 f0       	breq	.+36     	; 0x996 <__fixunssfsi+0x4c>
     972:	0e 94 5b 05 	call	0xab6	; 0xab6 <__fp_zero>
     976:	b1 e0       	ldi	r27, 0x01	; 1
     978:	08 95       	ret
     97a:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_zero>
     97e:	67 2f       	mov	r22, r23
     980:	78 2f       	mov	r23, r24
     982:	88 27       	eor	r24, r24
     984:	b8 5f       	subi	r27, 0xF8	; 248
     986:	39 f0       	breq	.+14     	; 0x996 <__fixunssfsi+0x4c>
     988:	b9 3f       	cpi	r27, 0xF9	; 249
     98a:	cc f3       	brlt	.-14     	; 0x97e <__fixunssfsi+0x34>
     98c:	86 95       	lsr	r24
     98e:	77 95       	ror	r23
     990:	67 95       	ror	r22
     992:	b3 95       	inc	r27
     994:	d9 f7       	brne	.-10     	; 0x98c <__fixunssfsi+0x42>
     996:	3e f4       	brtc	.+14     	; 0x9a6 <__fixunssfsi+0x5c>
     998:	90 95       	com	r25
     99a:	80 95       	com	r24
     99c:	70 95       	com	r23
     99e:	61 95       	neg	r22
     9a0:	7f 4f       	sbci	r23, 0xFF	; 255
     9a2:	8f 4f       	sbci	r24, 0xFF	; 255
     9a4:	9f 4f       	sbci	r25, 0xFF	; 255
     9a6:	08 95       	ret

000009a8 <__floatunsisf>:
     9a8:	e8 94       	clt
     9aa:	09 c0       	rjmp	.+18     	; 0x9be <__floatsisf+0x12>

000009ac <__floatsisf>:
     9ac:	97 fb       	bst	r25, 7
     9ae:	3e f4       	brtc	.+14     	; 0x9be <__floatsisf+0x12>
     9b0:	90 95       	com	r25
     9b2:	80 95       	com	r24
     9b4:	70 95       	com	r23
     9b6:	61 95       	neg	r22
     9b8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ba:	8f 4f       	sbci	r24, 0xFF	; 255
     9bc:	9f 4f       	sbci	r25, 0xFF	; 255
     9be:	99 23       	and	r25, r25
     9c0:	a9 f0       	breq	.+42     	; 0x9ec <__floatsisf+0x40>
     9c2:	f9 2f       	mov	r31, r25
     9c4:	96 e9       	ldi	r25, 0x96	; 150
     9c6:	bb 27       	eor	r27, r27
     9c8:	93 95       	inc	r25
     9ca:	f6 95       	lsr	r31
     9cc:	87 95       	ror	r24
     9ce:	77 95       	ror	r23
     9d0:	67 95       	ror	r22
     9d2:	b7 95       	ror	r27
     9d4:	f1 11       	cpse	r31, r1
     9d6:	f8 cf       	rjmp	.-16     	; 0x9c8 <__floatsisf+0x1c>
     9d8:	fa f4       	brpl	.+62     	; 0xa18 <__floatsisf+0x6c>
     9da:	bb 0f       	add	r27, r27
     9dc:	11 f4       	brne	.+4      	; 0x9e2 <__floatsisf+0x36>
     9de:	60 ff       	sbrs	r22, 0
     9e0:	1b c0       	rjmp	.+54     	; 0xa18 <__floatsisf+0x6c>
     9e2:	6f 5f       	subi	r22, 0xFF	; 255
     9e4:	7f 4f       	sbci	r23, 0xFF	; 255
     9e6:	8f 4f       	sbci	r24, 0xFF	; 255
     9e8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ea:	16 c0       	rjmp	.+44     	; 0xa18 <__floatsisf+0x6c>
     9ec:	88 23       	and	r24, r24
     9ee:	11 f0       	breq	.+4      	; 0x9f4 <__floatsisf+0x48>
     9f0:	96 e9       	ldi	r25, 0x96	; 150
     9f2:	11 c0       	rjmp	.+34     	; 0xa16 <__floatsisf+0x6a>
     9f4:	77 23       	and	r23, r23
     9f6:	21 f0       	breq	.+8      	; 0xa00 <__floatsisf+0x54>
     9f8:	9e e8       	ldi	r25, 0x8E	; 142
     9fa:	87 2f       	mov	r24, r23
     9fc:	76 2f       	mov	r23, r22
     9fe:	05 c0       	rjmp	.+10     	; 0xa0a <__floatsisf+0x5e>
     a00:	66 23       	and	r22, r22
     a02:	71 f0       	breq	.+28     	; 0xa20 <__floatsisf+0x74>
     a04:	96 e8       	ldi	r25, 0x86	; 134
     a06:	86 2f       	mov	r24, r22
     a08:	70 e0       	ldi	r23, 0x00	; 0
     a0a:	60 e0       	ldi	r22, 0x00	; 0
     a0c:	2a f0       	brmi	.+10     	; 0xa18 <__floatsisf+0x6c>
     a0e:	9a 95       	dec	r25
     a10:	66 0f       	add	r22, r22
     a12:	77 1f       	adc	r23, r23
     a14:	88 1f       	adc	r24, r24
     a16:	da f7       	brpl	.-10     	; 0xa0e <__floatsisf+0x62>
     a18:	88 0f       	add	r24, r24
     a1a:	96 95       	lsr	r25
     a1c:	87 95       	ror	r24
     a1e:	97 f9       	bld	r25, 7
     a20:	08 95       	ret

00000a22 <__fp_inf>:
     a22:	97 f9       	bld	r25, 7
     a24:	9f 67       	ori	r25, 0x7F	; 127
     a26:	80 e8       	ldi	r24, 0x80	; 128
     a28:	70 e0       	ldi	r23, 0x00	; 0
     a2a:	60 e0       	ldi	r22, 0x00	; 0
     a2c:	08 95       	ret

00000a2e <__fp_nan>:
     a2e:	9f ef       	ldi	r25, 0xFF	; 255
     a30:	80 ec       	ldi	r24, 0xC0	; 192
     a32:	08 95       	ret

00000a34 <__fp_pscA>:
     a34:	00 24       	eor	r0, r0
     a36:	0a 94       	dec	r0
     a38:	16 16       	cp	r1, r22
     a3a:	17 06       	cpc	r1, r23
     a3c:	18 06       	cpc	r1, r24
     a3e:	09 06       	cpc	r0, r25
     a40:	08 95       	ret

00000a42 <__fp_pscB>:
     a42:	00 24       	eor	r0, r0
     a44:	0a 94       	dec	r0
     a46:	12 16       	cp	r1, r18
     a48:	13 06       	cpc	r1, r19
     a4a:	14 06       	cpc	r1, r20
     a4c:	05 06       	cpc	r0, r21
     a4e:	08 95       	ret

00000a50 <__fp_round>:
     a50:	09 2e       	mov	r0, r25
     a52:	03 94       	inc	r0
     a54:	00 0c       	add	r0, r0
     a56:	11 f4       	brne	.+4      	; 0xa5c <__fp_round+0xc>
     a58:	88 23       	and	r24, r24
     a5a:	52 f0       	brmi	.+20     	; 0xa70 <__fp_round+0x20>
     a5c:	bb 0f       	add	r27, r27
     a5e:	40 f4       	brcc	.+16     	; 0xa70 <__fp_round+0x20>
     a60:	bf 2b       	or	r27, r31
     a62:	11 f4       	brne	.+4      	; 0xa68 <__fp_round+0x18>
     a64:	60 ff       	sbrs	r22, 0
     a66:	04 c0       	rjmp	.+8      	; 0xa70 <__fp_round+0x20>
     a68:	6f 5f       	subi	r22, 0xFF	; 255
     a6a:	7f 4f       	sbci	r23, 0xFF	; 255
     a6c:	8f 4f       	sbci	r24, 0xFF	; 255
     a6e:	9f 4f       	sbci	r25, 0xFF	; 255
     a70:	08 95       	ret

00000a72 <__fp_split3>:
     a72:	57 fd       	sbrc	r21, 7
     a74:	90 58       	subi	r25, 0x80	; 128
     a76:	44 0f       	add	r20, r20
     a78:	55 1f       	adc	r21, r21
     a7a:	59 f0       	breq	.+22     	; 0xa92 <__fp_splitA+0x10>
     a7c:	5f 3f       	cpi	r21, 0xFF	; 255
     a7e:	71 f0       	breq	.+28     	; 0xa9c <__fp_splitA+0x1a>
     a80:	47 95       	ror	r20

00000a82 <__fp_splitA>:
     a82:	88 0f       	add	r24, r24
     a84:	97 fb       	bst	r25, 7
     a86:	99 1f       	adc	r25, r25
     a88:	61 f0       	breq	.+24     	; 0xaa2 <__fp_splitA+0x20>
     a8a:	9f 3f       	cpi	r25, 0xFF	; 255
     a8c:	79 f0       	breq	.+30     	; 0xaac <__fp_splitA+0x2a>
     a8e:	87 95       	ror	r24
     a90:	08 95       	ret
     a92:	12 16       	cp	r1, r18
     a94:	13 06       	cpc	r1, r19
     a96:	14 06       	cpc	r1, r20
     a98:	55 1f       	adc	r21, r21
     a9a:	f2 cf       	rjmp	.-28     	; 0xa80 <__fp_split3+0xe>
     a9c:	46 95       	lsr	r20
     a9e:	f1 df       	rcall	.-30     	; 0xa82 <__fp_splitA>
     aa0:	08 c0       	rjmp	.+16     	; 0xab2 <__fp_splitA+0x30>
     aa2:	16 16       	cp	r1, r22
     aa4:	17 06       	cpc	r1, r23
     aa6:	18 06       	cpc	r1, r24
     aa8:	99 1f       	adc	r25, r25
     aaa:	f1 cf       	rjmp	.-30     	; 0xa8e <__fp_splitA+0xc>
     aac:	86 95       	lsr	r24
     aae:	71 05       	cpc	r23, r1
     ab0:	61 05       	cpc	r22, r1
     ab2:	08 94       	sec
     ab4:	08 95       	ret

00000ab6 <__fp_zero>:
     ab6:	e8 94       	clt

00000ab8 <__fp_szero>:
     ab8:	bb 27       	eor	r27, r27
     aba:	66 27       	eor	r22, r22
     abc:	77 27       	eor	r23, r23
     abe:	cb 01       	movw	r24, r22
     ac0:	97 f9       	bld	r25, 7
     ac2:	08 95       	ret

00000ac4 <__mulsf3>:
     ac4:	0e 94 75 05 	call	0xaea	; 0xaea <__mulsf3x>
     ac8:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     acc:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     ad0:	38 f0       	brcs	.+14     	; 0xae0 <__mulsf3+0x1c>
     ad2:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     ad6:	20 f0       	brcs	.+8      	; 0xae0 <__mulsf3+0x1c>
     ad8:	95 23       	and	r25, r21
     ada:	11 f0       	breq	.+4      	; 0xae0 <__mulsf3+0x1c>
     adc:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     ae0:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     ae4:	11 24       	eor	r1, r1
     ae6:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>

00000aea <__mulsf3x>:
     aea:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     aee:	70 f3       	brcs	.-36     	; 0xacc <__mulsf3+0x8>

00000af0 <__mulsf3_pse>:
     af0:	95 9f       	mul	r25, r21
     af2:	c1 f3       	breq	.-16     	; 0xae4 <__mulsf3+0x20>
     af4:	95 0f       	add	r25, r21
     af6:	50 e0       	ldi	r21, 0x00	; 0
     af8:	55 1f       	adc	r21, r21
     afa:	62 9f       	mul	r22, r18
     afc:	f0 01       	movw	r30, r0
     afe:	72 9f       	mul	r23, r18
     b00:	bb 27       	eor	r27, r27
     b02:	f0 0d       	add	r31, r0
     b04:	b1 1d       	adc	r27, r1
     b06:	63 9f       	mul	r22, r19
     b08:	aa 27       	eor	r26, r26
     b0a:	f0 0d       	add	r31, r0
     b0c:	b1 1d       	adc	r27, r1
     b0e:	aa 1f       	adc	r26, r26
     b10:	64 9f       	mul	r22, r20
     b12:	66 27       	eor	r22, r22
     b14:	b0 0d       	add	r27, r0
     b16:	a1 1d       	adc	r26, r1
     b18:	66 1f       	adc	r22, r22
     b1a:	82 9f       	mul	r24, r18
     b1c:	22 27       	eor	r18, r18
     b1e:	b0 0d       	add	r27, r0
     b20:	a1 1d       	adc	r26, r1
     b22:	62 1f       	adc	r22, r18
     b24:	73 9f       	mul	r23, r19
     b26:	b0 0d       	add	r27, r0
     b28:	a1 1d       	adc	r26, r1
     b2a:	62 1f       	adc	r22, r18
     b2c:	83 9f       	mul	r24, r19
     b2e:	a0 0d       	add	r26, r0
     b30:	61 1d       	adc	r22, r1
     b32:	22 1f       	adc	r18, r18
     b34:	74 9f       	mul	r23, r20
     b36:	33 27       	eor	r19, r19
     b38:	a0 0d       	add	r26, r0
     b3a:	61 1d       	adc	r22, r1
     b3c:	23 1f       	adc	r18, r19
     b3e:	84 9f       	mul	r24, r20
     b40:	60 0d       	add	r22, r0
     b42:	21 1d       	adc	r18, r1
     b44:	82 2f       	mov	r24, r18
     b46:	76 2f       	mov	r23, r22
     b48:	6a 2f       	mov	r22, r26
     b4a:	11 24       	eor	r1, r1
     b4c:	9f 57       	subi	r25, 0x7F	; 127
     b4e:	50 40       	sbci	r21, 0x00	; 0
     b50:	9a f0       	brmi	.+38     	; 0xb78 <__mulsf3_pse+0x88>
     b52:	f1 f0       	breq	.+60     	; 0xb90 <__mulsf3_pse+0xa0>
     b54:	88 23       	and	r24, r24
     b56:	4a f0       	brmi	.+18     	; 0xb6a <__mulsf3_pse+0x7a>
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	bb 1f       	adc	r27, r27
     b5e:	66 1f       	adc	r22, r22
     b60:	77 1f       	adc	r23, r23
     b62:	88 1f       	adc	r24, r24
     b64:	91 50       	subi	r25, 0x01	; 1
     b66:	50 40       	sbci	r21, 0x00	; 0
     b68:	a9 f7       	brne	.-22     	; 0xb54 <__mulsf3_pse+0x64>
     b6a:	9e 3f       	cpi	r25, 0xFE	; 254
     b6c:	51 05       	cpc	r21, r1
     b6e:	80 f0       	brcs	.+32     	; 0xb90 <__mulsf3_pse+0xa0>
     b70:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     b74:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     b78:	5f 3f       	cpi	r21, 0xFF	; 255
     b7a:	e4 f3       	brlt	.-8      	; 0xb74 <__mulsf3_pse+0x84>
     b7c:	98 3e       	cpi	r25, 0xE8	; 232
     b7e:	d4 f3       	brlt	.-12     	; 0xb74 <__mulsf3_pse+0x84>
     b80:	86 95       	lsr	r24
     b82:	77 95       	ror	r23
     b84:	67 95       	ror	r22
     b86:	b7 95       	ror	r27
     b88:	f7 95       	ror	r31
     b8a:	e7 95       	ror	r30
     b8c:	9f 5f       	subi	r25, 0xFF	; 255
     b8e:	c1 f7       	brne	.-16     	; 0xb80 <__mulsf3_pse+0x90>
     b90:	fe 2b       	or	r31, r30
     b92:	88 0f       	add	r24, r24
     b94:	91 1d       	adc	r25, r1
     b96:	96 95       	lsr	r25
     b98:	87 95       	ror	r24
     b9a:	97 f9       	bld	r25, 7
     b9c:	08 95       	ret

00000b9e <pow>:
     b9e:	fa 01       	movw	r30, r20
     ba0:	ee 0f       	add	r30, r30
     ba2:	ff 1f       	adc	r31, r31
     ba4:	30 96       	adiw	r30, 0x00	; 0
     ba6:	21 05       	cpc	r18, r1
     ba8:	31 05       	cpc	r19, r1
     baa:	a1 f1       	breq	.+104    	; 0xc14 <pow+0x76>
     bac:	61 15       	cp	r22, r1
     bae:	71 05       	cpc	r23, r1
     bb0:	61 f4       	brne	.+24     	; 0xbca <pow+0x2c>
     bb2:	80 38       	cpi	r24, 0x80	; 128
     bb4:	bf e3       	ldi	r27, 0x3F	; 63
     bb6:	9b 07       	cpc	r25, r27
     bb8:	49 f1       	breq	.+82     	; 0xc0c <pow+0x6e>
     bba:	68 94       	set
     bbc:	90 38       	cpi	r25, 0x80	; 128
     bbe:	81 05       	cpc	r24, r1
     bc0:	61 f0       	breq	.+24     	; 0xbda <pow+0x3c>
     bc2:	80 38       	cpi	r24, 0x80	; 128
     bc4:	bf ef       	ldi	r27, 0xFF	; 255
     bc6:	9b 07       	cpc	r25, r27
     bc8:	41 f0       	breq	.+16     	; 0xbda <pow+0x3c>
     bca:	99 23       	and	r25, r25
     bcc:	4a f5       	brpl	.+82     	; 0xc20 <pow+0x82>
     bce:	ff 3f       	cpi	r31, 0xFF	; 255
     bd0:	e1 05       	cpc	r30, r1
     bd2:	31 05       	cpc	r19, r1
     bd4:	21 05       	cpc	r18, r1
     bd6:	19 f1       	breq	.+70     	; 0xc1e <pow+0x80>
     bd8:	e8 94       	clt
     bda:	08 94       	sec
     bdc:	e7 95       	ror	r30
     bde:	d9 01       	movw	r26, r18
     be0:	aa 23       	and	r26, r26
     be2:	29 f4       	brne	.+10     	; 0xbee <pow+0x50>
     be4:	ab 2f       	mov	r26, r27
     be6:	be 2f       	mov	r27, r30
     be8:	f8 5f       	subi	r31, 0xF8	; 248
     bea:	d0 f3       	brcs	.-12     	; 0xbe0 <pow+0x42>
     bec:	10 c0       	rjmp	.+32     	; 0xc0e <pow+0x70>
     bee:	ff 5f       	subi	r31, 0xFF	; 255
     bf0:	70 f4       	brcc	.+28     	; 0xc0e <pow+0x70>
     bf2:	a6 95       	lsr	r26
     bf4:	e0 f7       	brcc	.-8      	; 0xbee <pow+0x50>
     bf6:	f7 39       	cpi	r31, 0x97	; 151
     bf8:	50 f0       	brcs	.+20     	; 0xc0e <pow+0x70>
     bfa:	19 f0       	breq	.+6      	; 0xc02 <pow+0x64>
     bfc:	ff 3a       	cpi	r31, 0xAF	; 175
     bfe:	38 f4       	brcc	.+14     	; 0xc0e <pow+0x70>
     c00:	9f 77       	andi	r25, 0x7F	; 127
     c02:	9f 93       	push	r25
     c04:	0d d0       	rcall	.+26     	; 0xc20 <pow+0x82>
     c06:	0f 90       	pop	r0
     c08:	07 fc       	sbrc	r0, 7
     c0a:	90 58       	subi	r25, 0x80	; 128
     c0c:	08 95       	ret
     c0e:	46 f0       	brts	.+16     	; 0xc20 <pow+0x82>
     c10:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     c14:	60 e0       	ldi	r22, 0x00	; 0
     c16:	70 e0       	ldi	r23, 0x00	; 0
     c18:	80 e8       	ldi	r24, 0x80	; 128
     c1a:	9f e3       	ldi	r25, 0x3F	; 63
     c1c:	08 95       	ret
     c1e:	4f e7       	ldi	r20, 0x7F	; 127
     c20:	9f 77       	andi	r25, 0x7F	; 127
     c22:	5f 93       	push	r21
     c24:	4f 93       	push	r20
     c26:	3f 93       	push	r19
     c28:	2f 93       	push	r18
     c2a:	0e 94 ca 06 	call	0xd94	; 0xd94 <log>
     c2e:	2f 91       	pop	r18
     c30:	3f 91       	pop	r19
     c32:	4f 91       	pop	r20
     c34:	5f 91       	pop	r21
     c36:	0e 94 62 05 	call	0xac4	; 0xac4 <__mulsf3>
     c3a:	0c 94 27 06 	jmp	0xc4e	; 0xc4e <exp>
     c3e:	29 f4       	brne	.+10     	; 0xc4a <pow+0xac>
     c40:	16 f0       	brts	.+4      	; 0xc46 <pow+0xa8>
     c42:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     c46:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__fp_zero>
     c4a:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>

00000c4e <exp>:
     c4e:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_splitA>
     c52:	a8 f3       	brcs	.-22     	; 0xc3e <pow+0xa0>
     c54:	96 38       	cpi	r25, 0x86	; 134
     c56:	a0 f7       	brcc	.-24     	; 0xc40 <pow+0xa2>
     c58:	07 f8       	bld	r0, 7
     c5a:	0f 92       	push	r0
     c5c:	e8 94       	clt
     c5e:	2b e3       	ldi	r18, 0x3B	; 59
     c60:	3a ea       	ldi	r19, 0xAA	; 170
     c62:	48 eb       	ldi	r20, 0xB8	; 184
     c64:	5f e7       	ldi	r21, 0x7F	; 127
     c66:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__mulsf3_pse>
     c6a:	0f 92       	push	r0
     c6c:	0f 92       	push	r0
     c6e:	0f 92       	push	r0
     c70:	4d b7       	in	r20, 0x3d	; 61
     c72:	5e b7       	in	r21, 0x3e	; 62
     c74:	0f 92       	push	r0
     c76:	0e 94 12 07 	call	0xe24	; 0xe24 <modf>
     c7a:	ec e8       	ldi	r30, 0x8C	; 140
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_powser>
     c82:	4f 91       	pop	r20
     c84:	5f 91       	pop	r21
     c86:	ef 91       	pop	r30
     c88:	ff 91       	pop	r31
     c8a:	e5 95       	asr	r30
     c8c:	ee 1f       	adc	r30, r30
     c8e:	ff 1f       	adc	r31, r31
     c90:	49 f0       	breq	.+18     	; 0xca4 <exp+0x56>
     c92:	fe 57       	subi	r31, 0x7E	; 126
     c94:	e0 68       	ori	r30, 0x80	; 128
     c96:	44 27       	eor	r20, r20
     c98:	ee 0f       	add	r30, r30
     c9a:	44 1f       	adc	r20, r20
     c9c:	fa 95       	dec	r31
     c9e:	e1 f7       	brne	.-8      	; 0xc98 <exp+0x4a>
     ca0:	41 95       	neg	r20
     ca2:	55 0b       	sbc	r21, r21
     ca4:	0e 94 8c 06 	call	0xd18	; 0xd18 <ldexp>
     ca8:	0f 90       	pop	r0
     caa:	07 fe       	sbrs	r0, 7
     cac:	0c 94 80 06 	jmp	0xd00	; 0xd00 <inverse>
     cb0:	08 95       	ret

00000cb2 <__fp_powser>:
     cb2:	df 93       	push	r29
     cb4:	cf 93       	push	r28
     cb6:	1f 93       	push	r17
     cb8:	0f 93       	push	r16
     cba:	ff 92       	push	r15
     cbc:	ef 92       	push	r14
     cbe:	df 92       	push	r13
     cc0:	7b 01       	movw	r14, r22
     cc2:	8c 01       	movw	r16, r24
     cc4:	68 94       	set
     cc6:	06 c0       	rjmp	.+12     	; 0xcd4 <__fp_powser+0x22>
     cc8:	da 2e       	mov	r13, r26
     cca:	ef 01       	movw	r28, r30
     ccc:	0e 94 75 05 	call	0xaea	; 0xaea <__mulsf3x>
     cd0:	fe 01       	movw	r30, r28
     cd2:	e8 94       	clt
     cd4:	a5 91       	lpm	r26, Z+
     cd6:	25 91       	lpm	r18, Z+
     cd8:	35 91       	lpm	r19, Z+
     cda:	45 91       	lpm	r20, Z+
     cdc:	55 91       	lpm	r21, Z+
     cde:	a6 f3       	brts	.-24     	; 0xcc8 <__fp_powser+0x16>
     ce0:	ef 01       	movw	r28, r30
     ce2:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3x>
     ce6:	fe 01       	movw	r30, r28
     ce8:	97 01       	movw	r18, r14
     cea:	a8 01       	movw	r20, r16
     cec:	da 94       	dec	r13
     cee:	69 f7       	brne	.-38     	; 0xcca <__fp_powser+0x18>
     cf0:	df 90       	pop	r13
     cf2:	ef 90       	pop	r14
     cf4:	ff 90       	pop	r15
     cf6:	0f 91       	pop	r16
     cf8:	1f 91       	pop	r17
     cfa:	cf 91       	pop	r28
     cfc:	df 91       	pop	r29
     cfe:	08 95       	ret

00000d00 <inverse>:
     d00:	9b 01       	movw	r18, r22
     d02:	ac 01       	movw	r20, r24
     d04:	60 e0       	ldi	r22, 0x00	; 0
     d06:	70 e0       	ldi	r23, 0x00	; 0
     d08:	80 e8       	ldi	r24, 0x80	; 128
     d0a:	9f e3       	ldi	r25, 0x3F	; 63
     d0c:	0c 94 46 07 	jmp	0xe8c	; 0xe8c <__divsf3>
     d10:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     d14:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <__fp_mpack>

00000d18 <ldexp>:
     d18:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_splitA>
     d1c:	d8 f3       	brcs	.-10     	; 0xd14 <inverse+0x14>
     d1e:	99 23       	and	r25, r25
     d20:	c9 f3       	breq	.-14     	; 0xd14 <inverse+0x14>
     d22:	94 0f       	add	r25, r20
     d24:	51 1d       	adc	r21, r1
     d26:	a3 f3       	brvs	.-24     	; 0xd10 <inverse+0x10>
     d28:	91 50       	subi	r25, 0x01	; 1
     d2a:	50 40       	sbci	r21, 0x00	; 0
     d2c:	94 f0       	brlt	.+36     	; 0xd52 <ldexp+0x3a>
     d2e:	59 f0       	breq	.+22     	; 0xd46 <ldexp+0x2e>
     d30:	88 23       	and	r24, r24
     d32:	32 f0       	brmi	.+12     	; 0xd40 <ldexp+0x28>
     d34:	66 0f       	add	r22, r22
     d36:	77 1f       	adc	r23, r23
     d38:	88 1f       	adc	r24, r24
     d3a:	91 50       	subi	r25, 0x01	; 1
     d3c:	50 40       	sbci	r21, 0x00	; 0
     d3e:	c1 f7       	brne	.-16     	; 0xd30 <ldexp+0x18>
     d40:	9e 3f       	cpi	r25, 0xFE	; 254
     d42:	51 05       	cpc	r21, r1
     d44:	2c f7       	brge	.-54     	; 0xd10 <inverse+0x10>
     d46:	88 0f       	add	r24, r24
     d48:	91 1d       	adc	r25, r1
     d4a:	96 95       	lsr	r25
     d4c:	87 95       	ror	r24
     d4e:	97 f9       	bld	r25, 7
     d50:	08 95       	ret
     d52:	5f 3f       	cpi	r21, 0xFF	; 255
     d54:	ac f0       	brlt	.+42     	; 0xd80 <ldexp+0x68>
     d56:	98 3e       	cpi	r25, 0xE8	; 232
     d58:	9c f0       	brlt	.+38     	; 0xd80 <ldexp+0x68>
     d5a:	bb 27       	eor	r27, r27
     d5c:	86 95       	lsr	r24
     d5e:	77 95       	ror	r23
     d60:	67 95       	ror	r22
     d62:	b7 95       	ror	r27
     d64:	08 f4       	brcc	.+2      	; 0xd68 <ldexp+0x50>
     d66:	b1 60       	ori	r27, 0x01	; 1
     d68:	93 95       	inc	r25
     d6a:	c1 f7       	brne	.-16     	; 0xd5c <ldexp+0x44>
     d6c:	bb 0f       	add	r27, r27
     d6e:	58 f7       	brcc	.-42     	; 0xd46 <ldexp+0x2e>
     d70:	11 f4       	brne	.+4      	; 0xd76 <ldexp+0x5e>
     d72:	60 ff       	sbrs	r22, 0
     d74:	e8 cf       	rjmp	.-48     	; 0xd46 <ldexp+0x2e>
     d76:	6f 5f       	subi	r22, 0xFF	; 255
     d78:	7f 4f       	sbci	r23, 0xFF	; 255
     d7a:	8f 4f       	sbci	r24, 0xFF	; 255
     d7c:	9f 4f       	sbci	r25, 0xFF	; 255
     d7e:	e3 cf       	rjmp	.-58     	; 0xd46 <ldexp+0x2e>
     d80:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     d84:	16 f0       	brts	.+4      	; 0xd8a <ldexp+0x72>
     d86:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <__fp_mpack>
     d8a:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>
     d8e:	68 94       	set
     d90:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>

00000d94 <log>:
     d94:	0e 94 41 05 	call	0xa82	; 0xa82 <__fp_splitA>
     d98:	a8 f3       	brcs	.-22     	; 0xd84 <ldexp+0x6c>
     d9a:	99 23       	and	r25, r25
     d9c:	c1 f3       	breq	.-16     	; 0xd8e <ldexp+0x76>
     d9e:	ae f3       	brts	.-22     	; 0xd8a <ldexp+0x72>
     da0:	df 93       	push	r29
     da2:	cf 93       	push	r28
     da4:	1f 93       	push	r17
     da6:	0f 93       	push	r16
     da8:	ff 92       	push	r15
     daa:	c9 2f       	mov	r28, r25
     dac:	dd 27       	eor	r29, r29
     dae:	88 23       	and	r24, r24
     db0:	2a f0       	brmi	.+10     	; 0xdbc <log+0x28>
     db2:	21 97       	sbiw	r28, 0x01	; 1
     db4:	66 0f       	add	r22, r22
     db6:	77 1f       	adc	r23, r23
     db8:	88 1f       	adc	r24, r24
     dba:	da f7       	brpl	.-10     	; 0xdb2 <log+0x1e>
     dbc:	20 e0       	ldi	r18, 0x00	; 0
     dbe:	30 e0       	ldi	r19, 0x00	; 0
     dc0:	40 e8       	ldi	r20, 0x80	; 128
     dc2:	5f eb       	ldi	r21, 0xBF	; 191
     dc4:	9f e3       	ldi	r25, 0x3F	; 63
     dc6:	88 39       	cpi	r24, 0x98	; 152
     dc8:	20 f0       	brcs	.+8      	; 0xdd2 <log+0x3e>
     dca:	80 3e       	cpi	r24, 0xE0	; 224
     dcc:	38 f0       	brcs	.+14     	; 0xddc <log+0x48>
     dce:	21 96       	adiw	r28, 0x01	; 1
     dd0:	8f 77       	andi	r24, 0x7F	; 127
     dd2:	0e 94 32 04 	call	0x864	; 0x864 <__addsf3>
     dd6:	e4 eb       	ldi	r30, 0xB4	; 180
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	04 c0       	rjmp	.+8      	; 0xde4 <log+0x50>
     ddc:	0e 94 32 04 	call	0x864	; 0x864 <__addsf3>
     de0:	e1 ee       	ldi	r30, 0xE1	; 225
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_powser>
     de8:	8b 01       	movw	r16, r22
     dea:	be 01       	movw	r22, r28
     dec:	ec 01       	movw	r28, r24
     dee:	fb 2e       	mov	r15, r27
     df0:	6f 57       	subi	r22, 0x7F	; 127
     df2:	71 09       	sbc	r23, r1
     df4:	75 95       	asr	r23
     df6:	77 1f       	adc	r23, r23
     df8:	88 0b       	sbc	r24, r24
     dfa:	99 0b       	sbc	r25, r25
     dfc:	0e 94 d6 04 	call	0x9ac	; 0x9ac <__floatsisf>
     e00:	28 e1       	ldi	r18, 0x18	; 24
     e02:	32 e7       	ldi	r19, 0x72	; 114
     e04:	41 e3       	ldi	r20, 0x31	; 49
     e06:	5f e3       	ldi	r21, 0x3F	; 63
     e08:	0e 94 75 05 	call	0xaea	; 0xaea <__mulsf3x>
     e0c:	af 2d       	mov	r26, r15
     e0e:	98 01       	movw	r18, r16
     e10:	ae 01       	movw	r20, r28
     e12:	ff 90       	pop	r15
     e14:	0f 91       	pop	r16
     e16:	1f 91       	pop	r17
     e18:	cf 91       	pop	r28
     e1a:	df 91       	pop	r29
     e1c:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3x>
     e20:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>

00000e24 <modf>:
     e24:	fa 01       	movw	r30, r20
     e26:	dc 01       	movw	r26, r24
     e28:	aa 0f       	add	r26, r26
     e2a:	bb 1f       	adc	r27, r27
     e2c:	9b 01       	movw	r18, r22
     e2e:	ac 01       	movw	r20, r24
     e30:	bf 57       	subi	r27, 0x7F	; 127
     e32:	28 f4       	brcc	.+10     	; 0xe3e <modf+0x1a>
     e34:	22 27       	eor	r18, r18
     e36:	33 27       	eor	r19, r19
     e38:	44 27       	eor	r20, r20
     e3a:	50 78       	andi	r21, 0x80	; 128
     e3c:	20 c0       	rjmp	.+64     	; 0xe7e <modf+0x5a>
     e3e:	b7 51       	subi	r27, 0x17	; 23
     e40:	90 f4       	brcc	.+36     	; 0xe66 <modf+0x42>
     e42:	ab 2f       	mov	r26, r27
     e44:	00 24       	eor	r0, r0
     e46:	46 95       	lsr	r20
     e48:	37 95       	ror	r19
     e4a:	27 95       	ror	r18
     e4c:	01 1c       	adc	r0, r1
     e4e:	a3 95       	inc	r26
     e50:	d2 f3       	brmi	.-12     	; 0xe46 <modf+0x22>
     e52:	00 20       	and	r0, r0
     e54:	71 f0       	breq	.+28     	; 0xe72 <modf+0x4e>
     e56:	22 0f       	add	r18, r18
     e58:	33 1f       	adc	r19, r19
     e5a:	44 1f       	adc	r20, r20
     e5c:	b3 95       	inc	r27
     e5e:	da f3       	brmi	.-10     	; 0xe56 <modf+0x32>
     e60:	0e d0       	rcall	.+28     	; 0xe7e <modf+0x5a>
     e62:	0c 94 31 04 	jmp	0x862	; 0x862 <__subsf3>
     e66:	61 30       	cpi	r22, 0x01	; 1
     e68:	71 05       	cpc	r23, r1
     e6a:	a0 e8       	ldi	r26, 0x80	; 128
     e6c:	8a 07       	cpc	r24, r26
     e6e:	b9 46       	sbci	r27, 0x69	; 105
     e70:	30 f4       	brcc	.+12     	; 0xe7e <modf+0x5a>
     e72:	9b 01       	movw	r18, r22
     e74:	ac 01       	movw	r20, r24
     e76:	66 27       	eor	r22, r22
     e78:	77 27       	eor	r23, r23
     e7a:	88 27       	eor	r24, r24
     e7c:	90 78       	andi	r25, 0x80	; 128
     e7e:	30 96       	adiw	r30, 0x00	; 0
     e80:	21 f0       	breq	.+8      	; 0xe8a <modf+0x66>
     e82:	20 83       	st	Z, r18
     e84:	31 83       	std	Z+1, r19	; 0x01
     e86:	42 83       	std	Z+2, r20	; 0x02
     e88:	53 83       	std	Z+3, r21	; 0x03
     e8a:	08 95       	ret

00000e8c <__divsf3>:
     e8c:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__divsf3x>
     e90:	0c 94 28 05 	jmp	0xa50	; 0xa50 <__fp_round>
     e94:	0e 94 21 05 	call	0xa42	; 0xa42 <__fp_pscB>
     e98:	58 f0       	brcs	.+22     	; 0xeb0 <__divsf3+0x24>
     e9a:	0e 94 1a 05 	call	0xa34	; 0xa34 <__fp_pscA>
     e9e:	40 f0       	brcs	.+16     	; 0xeb0 <__divsf3+0x24>
     ea0:	29 f4       	brne	.+10     	; 0xeac <__divsf3+0x20>
     ea2:	5f 3f       	cpi	r21, 0xFF	; 255
     ea4:	29 f0       	breq	.+10     	; 0xeb0 <__divsf3+0x24>
     ea6:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     eaa:	51 11       	cpse	r21, r1
     eac:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     eb0:	0c 94 17 05 	jmp	0xa2e	; 0xa2e <__fp_nan>

00000eb4 <__divsf3x>:
     eb4:	0e 94 39 05 	call	0xa72	; 0xa72 <__fp_split3>
     eb8:	68 f3       	brcs	.-38     	; 0xe94 <__divsf3+0x8>

00000eba <__divsf3_pse>:
     eba:	99 23       	and	r25, r25
     ebc:	b1 f3       	breq	.-20     	; 0xeaa <__divsf3+0x1e>
     ebe:	55 23       	and	r21, r21
     ec0:	91 f3       	breq	.-28     	; 0xea6 <__divsf3+0x1a>
     ec2:	95 1b       	sub	r25, r21
     ec4:	55 0b       	sbc	r21, r21
     ec6:	bb 27       	eor	r27, r27
     ec8:	aa 27       	eor	r26, r26
     eca:	62 17       	cp	r22, r18
     ecc:	73 07       	cpc	r23, r19
     ece:	84 07       	cpc	r24, r20
     ed0:	38 f0       	brcs	.+14     	; 0xee0 <__divsf3_pse+0x26>
     ed2:	9f 5f       	subi	r25, 0xFF	; 255
     ed4:	5f 4f       	sbci	r21, 0xFF	; 255
     ed6:	22 0f       	add	r18, r18
     ed8:	33 1f       	adc	r19, r19
     eda:	44 1f       	adc	r20, r20
     edc:	aa 1f       	adc	r26, r26
     ede:	a9 f3       	breq	.-22     	; 0xeca <__divsf3_pse+0x10>
     ee0:	35 d0       	rcall	.+106    	; 0xf4c <__divsf3_pse+0x92>
     ee2:	0e 2e       	mov	r0, r30
     ee4:	3a f0       	brmi	.+14     	; 0xef4 <__divsf3_pse+0x3a>
     ee6:	e0 e8       	ldi	r30, 0x80	; 128
     ee8:	32 d0       	rcall	.+100    	; 0xf4e <__divsf3_pse+0x94>
     eea:	91 50       	subi	r25, 0x01	; 1
     eec:	50 40       	sbci	r21, 0x00	; 0
     eee:	e6 95       	lsr	r30
     ef0:	00 1c       	adc	r0, r0
     ef2:	ca f7       	brpl	.-14     	; 0xee6 <__divsf3_pse+0x2c>
     ef4:	2b d0       	rcall	.+86     	; 0xf4c <__divsf3_pse+0x92>
     ef6:	fe 2f       	mov	r31, r30
     ef8:	29 d0       	rcall	.+82     	; 0xf4c <__divsf3_pse+0x92>
     efa:	66 0f       	add	r22, r22
     efc:	77 1f       	adc	r23, r23
     efe:	88 1f       	adc	r24, r24
     f00:	bb 1f       	adc	r27, r27
     f02:	26 17       	cp	r18, r22
     f04:	37 07       	cpc	r19, r23
     f06:	48 07       	cpc	r20, r24
     f08:	ab 07       	cpc	r26, r27
     f0a:	b0 e8       	ldi	r27, 0x80	; 128
     f0c:	09 f0       	breq	.+2      	; 0xf10 <__divsf3_pse+0x56>
     f0e:	bb 0b       	sbc	r27, r27
     f10:	80 2d       	mov	r24, r0
     f12:	bf 01       	movw	r22, r30
     f14:	ff 27       	eor	r31, r31
     f16:	93 58       	subi	r25, 0x83	; 131
     f18:	5f 4f       	sbci	r21, 0xFF	; 255
     f1a:	3a f0       	brmi	.+14     	; 0xf2a <__divsf3_pse+0x70>
     f1c:	9e 3f       	cpi	r25, 0xFE	; 254
     f1e:	51 05       	cpc	r21, r1
     f20:	78 f0       	brcs	.+30     	; 0xf40 <__divsf3_pse+0x86>
     f22:	0c 94 11 05 	jmp	0xa22	; 0xa22 <__fp_inf>
     f26:	0c 94 5c 05 	jmp	0xab8	; 0xab8 <__fp_szero>
     f2a:	5f 3f       	cpi	r21, 0xFF	; 255
     f2c:	e4 f3       	brlt	.-8      	; 0xf26 <__divsf3_pse+0x6c>
     f2e:	98 3e       	cpi	r25, 0xE8	; 232
     f30:	d4 f3       	brlt	.-12     	; 0xf26 <__divsf3_pse+0x6c>
     f32:	86 95       	lsr	r24
     f34:	77 95       	ror	r23
     f36:	67 95       	ror	r22
     f38:	b7 95       	ror	r27
     f3a:	f7 95       	ror	r31
     f3c:	9f 5f       	subi	r25, 0xFF	; 255
     f3e:	c9 f7       	brne	.-14     	; 0xf32 <__divsf3_pse+0x78>
     f40:	88 0f       	add	r24, r24
     f42:	91 1d       	adc	r25, r1
     f44:	96 95       	lsr	r25
     f46:	87 95       	ror	r24
     f48:	97 f9       	bld	r25, 7
     f4a:	08 95       	ret
     f4c:	e1 e0       	ldi	r30, 0x01	; 1
     f4e:	66 0f       	add	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	bb 1f       	adc	r27, r27
     f56:	62 17       	cp	r22, r18
     f58:	73 07       	cpc	r23, r19
     f5a:	84 07       	cpc	r24, r20
     f5c:	ba 07       	cpc	r27, r26
     f5e:	20 f0       	brcs	.+8      	; 0xf68 <__divsf3_pse+0xae>
     f60:	62 1b       	sub	r22, r18
     f62:	73 0b       	sbc	r23, r19
     f64:	84 0b       	sbc	r24, r20
     f66:	ba 0b       	sbc	r27, r26
     f68:	ee 1f       	adc	r30, r30
     f6a:	88 f7       	brcc	.-30     	; 0xf4e <__divsf3_pse+0x94>
     f6c:	e0 95       	com	r30
     f6e:	08 95       	ret

00000f70 <__fp_mpack>:
     f70:	9f 3f       	cpi	r25, 0xFF	; 255
     f72:	31 f0       	breq	.+12     	; 0xf80 <__fp_mpack_finite+0xc>

00000f74 <__fp_mpack_finite>:
     f74:	91 50       	subi	r25, 0x01	; 1
     f76:	20 f4       	brcc	.+8      	; 0xf80 <__fp_mpack_finite+0xc>
     f78:	87 95       	ror	r24
     f7a:	77 95       	ror	r23
     f7c:	67 95       	ror	r22
     f7e:	b7 95       	ror	r27
     f80:	88 0f       	add	r24, r24
     f82:	91 1d       	adc	r25, r1
     f84:	96 95       	lsr	r25
     f86:	87 95       	ror	r24
     f88:	97 f9       	bld	r25, 7
     f8a:	08 95       	ret

00000f8c <__ashrdi3>:
     f8c:	97 fb       	bst	r25, 7
     f8e:	10 f8       	bld	r1, 0

00000f90 <__lshrdi3>:
     f90:	16 94       	lsr	r1
     f92:	00 08       	sbc	r0, r0
     f94:	0f 93       	push	r16
     f96:	08 30       	cpi	r16, 0x08	; 8
     f98:	98 f0       	brcs	.+38     	; 0xfc0 <__lshrdi3+0x30>
     f9a:	08 50       	subi	r16, 0x08	; 8
     f9c:	23 2f       	mov	r18, r19
     f9e:	34 2f       	mov	r19, r20
     fa0:	45 2f       	mov	r20, r21
     fa2:	56 2f       	mov	r21, r22
     fa4:	67 2f       	mov	r22, r23
     fa6:	78 2f       	mov	r23, r24
     fa8:	89 2f       	mov	r24, r25
     faa:	90 2d       	mov	r25, r0
     fac:	f4 cf       	rjmp	.-24     	; 0xf96 <__lshrdi3+0x6>
     fae:	05 94       	asr	r0
     fb0:	97 95       	ror	r25
     fb2:	87 95       	ror	r24
     fb4:	77 95       	ror	r23
     fb6:	67 95       	ror	r22
     fb8:	57 95       	ror	r21
     fba:	47 95       	ror	r20
     fbc:	37 95       	ror	r19
     fbe:	27 95       	ror	r18
     fc0:	0a 95       	dec	r16
     fc2:	aa f7       	brpl	.-22     	; 0xfae <__lshrdi3+0x1e>
     fc4:	0f 91       	pop	r16
     fc6:	08 95       	ret

00000fc8 <__adddi3_s8>:
     fc8:	00 24       	eor	r0, r0
     fca:	a7 fd       	sbrc	r26, 7
     fcc:	00 94       	com	r0
     fce:	2a 0f       	add	r18, r26
     fd0:	30 1d       	adc	r19, r0
     fd2:	40 1d       	adc	r20, r0
     fd4:	50 1d       	adc	r21, r0
     fd6:	60 1d       	adc	r22, r0
     fd8:	70 1d       	adc	r23, r0
     fda:	80 1d       	adc	r24, r0
     fdc:	90 1d       	adc	r25, r0
     fde:	08 95       	ret

00000fe0 <__itoa_ncheck>:
     fe0:	bb 27       	eor	r27, r27
     fe2:	4a 30       	cpi	r20, 0x0A	; 10
     fe4:	31 f4       	brne	.+12     	; 0xff2 <__itoa_ncheck+0x12>
     fe6:	99 23       	and	r25, r25
     fe8:	22 f4       	brpl	.+8      	; 0xff2 <__itoa_ncheck+0x12>
     fea:	bd e2       	ldi	r27, 0x2D	; 45
     fec:	90 95       	com	r25
     fee:	81 95       	neg	r24
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	0c 94 fc 07 	jmp	0xff8	; 0xff8 <__utoa_common>

00000ff6 <__utoa_ncheck>:
     ff6:	bb 27       	eor	r27, r27

00000ff8 <__utoa_common>:
     ff8:	fb 01       	movw	r30, r22
     ffa:	55 27       	eor	r21, r21
     ffc:	aa 27       	eor	r26, r26
     ffe:	88 0f       	add	r24, r24
    1000:	99 1f       	adc	r25, r25
    1002:	aa 1f       	adc	r26, r26
    1004:	a4 17       	cp	r26, r20
    1006:	10 f0       	brcs	.+4      	; 0x100c <__DATA_REGION_LENGTH__+0xc>
    1008:	a4 1b       	sub	r26, r20
    100a:	83 95       	inc	r24
    100c:	50 51       	subi	r21, 0x10	; 16
    100e:	b9 f7       	brne	.-18     	; 0xffe <__utoa_common+0x6>
    1010:	a0 5d       	subi	r26, 0xD0	; 208
    1012:	aa 33       	cpi	r26, 0x3A	; 58
    1014:	08 f0       	brcs	.+2      	; 0x1018 <__DATA_REGION_LENGTH__+0x18>
    1016:	a9 5d       	subi	r26, 0xD9	; 217
    1018:	a1 93       	st	Z+, r26
    101a:	00 97       	sbiw	r24, 0x00	; 0
    101c:	79 f7       	brne	.-34     	; 0xffc <__utoa_common+0x4>
    101e:	b1 11       	cpse	r27, r1
    1020:	b1 93       	st	Z+, r27
    1022:	11 92       	st	Z+, r1
    1024:	cb 01       	movw	r24, r22
    1026:	0c 94 2e 0a 	jmp	0x145c	; 0x145c <strrev>

0000102a <sprintf>:
    102a:	ae e0       	ldi	r26, 0x0E	; 14
    102c:	b0 e0       	ldi	r27, 0x00	; 0
    102e:	eb e1       	ldi	r30, 0x1B	; 27
    1030:	f8 e0       	ldi	r31, 0x08	; 8
    1032:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__prologue_saves__+0x1c>
    1036:	0d 89       	ldd	r16, Y+21	; 0x15
    1038:	1e 89       	ldd	r17, Y+22	; 0x16
    103a:	86 e0       	ldi	r24, 0x06	; 6
    103c:	8c 83       	std	Y+4, r24	; 0x04
    103e:	1a 83       	std	Y+2, r17	; 0x02
    1040:	09 83       	std	Y+1, r16	; 0x01
    1042:	8f ef       	ldi	r24, 0xFF	; 255
    1044:	9f e7       	ldi	r25, 0x7F	; 127
    1046:	9e 83       	std	Y+6, r25	; 0x06
    1048:	8d 83       	std	Y+5, r24	; 0x05
    104a:	ae 01       	movw	r20, r28
    104c:	47 5e       	subi	r20, 0xE7	; 231
    104e:	5f 4f       	sbci	r21, 0xFF	; 255
    1050:	6f 89       	ldd	r22, Y+23	; 0x17
    1052:	78 8d       	ldd	r23, Y+24	; 0x18
    1054:	ce 01       	movw	r24, r28
    1056:	01 96       	adiw	r24, 0x01	; 1
    1058:	0e 94 37 08 	call	0x106e	; 0x106e <vfprintf>
    105c:	ef 81       	ldd	r30, Y+7	; 0x07
    105e:	f8 85       	ldd	r31, Y+8	; 0x08
    1060:	e0 0f       	add	r30, r16
    1062:	f1 1f       	adc	r31, r17
    1064:	10 82       	st	Z, r1
    1066:	2e 96       	adiw	r28, 0x0e	; 14
    1068:	e4 e0       	ldi	r30, 0x04	; 4
    106a:	0c 94 02 0b 	jmp	0x1604	; 0x1604 <__epilogue_restores__+0x1c>

0000106e <vfprintf>:
    106e:	ab e0       	ldi	r26, 0x0B	; 11
    1070:	b0 e0       	ldi	r27, 0x00	; 0
    1072:	ed e3       	ldi	r30, 0x3D	; 61
    1074:	f8 e0       	ldi	r31, 0x08	; 8
    1076:	0c 94 d8 0a 	jmp	0x15b0	; 0x15b0 <__prologue_saves__>
    107a:	6c 01       	movw	r12, r24
    107c:	7b 01       	movw	r14, r22
    107e:	8a 01       	movw	r16, r20
    1080:	fc 01       	movw	r30, r24
    1082:	17 82       	std	Z+7, r1	; 0x07
    1084:	16 82       	std	Z+6, r1	; 0x06
    1086:	83 81       	ldd	r24, Z+3	; 0x03
    1088:	81 ff       	sbrs	r24, 1
    108a:	cc c1       	rjmp	.+920    	; 0x1424 <__stack+0x325>
    108c:	ce 01       	movw	r24, r28
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	3c 01       	movw	r6, r24
    1092:	f6 01       	movw	r30, r12
    1094:	93 81       	ldd	r25, Z+3	; 0x03
    1096:	f7 01       	movw	r30, r14
    1098:	93 fd       	sbrc	r25, 3
    109a:	85 91       	lpm	r24, Z+
    109c:	93 ff       	sbrs	r25, 3
    109e:	81 91       	ld	r24, Z+
    10a0:	7f 01       	movw	r14, r30
    10a2:	88 23       	and	r24, r24
    10a4:	09 f4       	brne	.+2      	; 0x10a8 <vfprintf+0x3a>
    10a6:	ba c1       	rjmp	.+884    	; 0x141c <__stack+0x31d>
    10a8:	85 32       	cpi	r24, 0x25	; 37
    10aa:	39 f4       	brne	.+14     	; 0x10ba <vfprintf+0x4c>
    10ac:	93 fd       	sbrc	r25, 3
    10ae:	85 91       	lpm	r24, Z+
    10b0:	93 ff       	sbrs	r25, 3
    10b2:	81 91       	ld	r24, Z+
    10b4:	7f 01       	movw	r14, r30
    10b6:	85 32       	cpi	r24, 0x25	; 37
    10b8:	29 f4       	brne	.+10     	; 0x10c4 <vfprintf+0x56>
    10ba:	b6 01       	movw	r22, r12
    10bc:	90 e0       	ldi	r25, 0x00	; 0
    10be:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    10c2:	e7 cf       	rjmp	.-50     	; 0x1092 <vfprintf+0x24>
    10c4:	91 2c       	mov	r9, r1
    10c6:	21 2c       	mov	r2, r1
    10c8:	31 2c       	mov	r3, r1
    10ca:	ff e1       	ldi	r31, 0x1F	; 31
    10cc:	f3 15       	cp	r31, r3
    10ce:	d8 f0       	brcs	.+54     	; 0x1106 <__stack+0x7>
    10d0:	8b 32       	cpi	r24, 0x2B	; 43
    10d2:	79 f0       	breq	.+30     	; 0x10f2 <vfprintf+0x84>
    10d4:	38 f4       	brcc	.+14     	; 0x10e4 <vfprintf+0x76>
    10d6:	80 32       	cpi	r24, 0x20	; 32
    10d8:	79 f0       	breq	.+30     	; 0x10f8 <vfprintf+0x8a>
    10da:	83 32       	cpi	r24, 0x23	; 35
    10dc:	a1 f4       	brne	.+40     	; 0x1106 <__stack+0x7>
    10de:	23 2d       	mov	r18, r3
    10e0:	20 61       	ori	r18, 0x10	; 16
    10e2:	1d c0       	rjmp	.+58     	; 0x111e <__stack+0x1f>
    10e4:	8d 32       	cpi	r24, 0x2D	; 45
    10e6:	61 f0       	breq	.+24     	; 0x1100 <__stack+0x1>
    10e8:	80 33       	cpi	r24, 0x30	; 48
    10ea:	69 f4       	brne	.+26     	; 0x1106 <__stack+0x7>
    10ec:	23 2d       	mov	r18, r3
    10ee:	21 60       	ori	r18, 0x01	; 1
    10f0:	16 c0       	rjmp	.+44     	; 0x111e <__stack+0x1f>
    10f2:	83 2d       	mov	r24, r3
    10f4:	82 60       	ori	r24, 0x02	; 2
    10f6:	38 2e       	mov	r3, r24
    10f8:	e3 2d       	mov	r30, r3
    10fa:	e4 60       	ori	r30, 0x04	; 4
    10fc:	3e 2e       	mov	r3, r30
    10fe:	2a c0       	rjmp	.+84     	; 0x1154 <__stack+0x55>
    1100:	f3 2d       	mov	r31, r3
    1102:	f8 60       	ori	r31, 0x08	; 8
    1104:	1d c0       	rjmp	.+58     	; 0x1140 <__stack+0x41>
    1106:	37 fc       	sbrc	r3, 7
    1108:	2d c0       	rjmp	.+90     	; 0x1164 <__stack+0x65>
    110a:	20 ed       	ldi	r18, 0xD0	; 208
    110c:	28 0f       	add	r18, r24
    110e:	2a 30       	cpi	r18, 0x0A	; 10
    1110:	40 f0       	brcs	.+16     	; 0x1122 <__stack+0x23>
    1112:	8e 32       	cpi	r24, 0x2E	; 46
    1114:	b9 f4       	brne	.+46     	; 0x1144 <__stack+0x45>
    1116:	36 fc       	sbrc	r3, 6
    1118:	81 c1       	rjmp	.+770    	; 0x141c <__stack+0x31d>
    111a:	23 2d       	mov	r18, r3
    111c:	20 64       	ori	r18, 0x40	; 64
    111e:	32 2e       	mov	r3, r18
    1120:	19 c0       	rjmp	.+50     	; 0x1154 <__stack+0x55>
    1122:	36 fe       	sbrs	r3, 6
    1124:	06 c0       	rjmp	.+12     	; 0x1132 <__stack+0x33>
    1126:	8a e0       	ldi	r24, 0x0A	; 10
    1128:	98 9e       	mul	r9, r24
    112a:	20 0d       	add	r18, r0
    112c:	11 24       	eor	r1, r1
    112e:	92 2e       	mov	r9, r18
    1130:	11 c0       	rjmp	.+34     	; 0x1154 <__stack+0x55>
    1132:	ea e0       	ldi	r30, 0x0A	; 10
    1134:	2e 9e       	mul	r2, r30
    1136:	20 0d       	add	r18, r0
    1138:	11 24       	eor	r1, r1
    113a:	22 2e       	mov	r2, r18
    113c:	f3 2d       	mov	r31, r3
    113e:	f0 62       	ori	r31, 0x20	; 32
    1140:	3f 2e       	mov	r3, r31
    1142:	08 c0       	rjmp	.+16     	; 0x1154 <__stack+0x55>
    1144:	8c 36       	cpi	r24, 0x6C	; 108
    1146:	21 f4       	brne	.+8      	; 0x1150 <__stack+0x51>
    1148:	83 2d       	mov	r24, r3
    114a:	80 68       	ori	r24, 0x80	; 128
    114c:	38 2e       	mov	r3, r24
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <__stack+0x55>
    1150:	88 36       	cpi	r24, 0x68	; 104
    1152:	41 f4       	brne	.+16     	; 0x1164 <__stack+0x65>
    1154:	f7 01       	movw	r30, r14
    1156:	93 fd       	sbrc	r25, 3
    1158:	85 91       	lpm	r24, Z+
    115a:	93 ff       	sbrs	r25, 3
    115c:	81 91       	ld	r24, Z+
    115e:	7f 01       	movw	r14, r30
    1160:	81 11       	cpse	r24, r1
    1162:	b3 cf       	rjmp	.-154    	; 0x10ca <vfprintf+0x5c>
    1164:	98 2f       	mov	r25, r24
    1166:	9f 7d       	andi	r25, 0xDF	; 223
    1168:	95 54       	subi	r25, 0x45	; 69
    116a:	93 30       	cpi	r25, 0x03	; 3
    116c:	28 f4       	brcc	.+10     	; 0x1178 <__stack+0x79>
    116e:	0c 5f       	subi	r16, 0xFC	; 252
    1170:	1f 4f       	sbci	r17, 0xFF	; 255
    1172:	9f e3       	ldi	r25, 0x3F	; 63
    1174:	99 83       	std	Y+1, r25	; 0x01
    1176:	0d c0       	rjmp	.+26     	; 0x1192 <__stack+0x93>
    1178:	83 36       	cpi	r24, 0x63	; 99
    117a:	31 f0       	breq	.+12     	; 0x1188 <__stack+0x89>
    117c:	83 37       	cpi	r24, 0x73	; 115
    117e:	71 f0       	breq	.+28     	; 0x119c <__stack+0x9d>
    1180:	83 35       	cpi	r24, 0x53	; 83
    1182:	09 f0       	breq	.+2      	; 0x1186 <__stack+0x87>
    1184:	59 c0       	rjmp	.+178    	; 0x1238 <__stack+0x139>
    1186:	21 c0       	rjmp	.+66     	; 0x11ca <__stack+0xcb>
    1188:	f8 01       	movw	r30, r16
    118a:	80 81       	ld	r24, Z
    118c:	89 83       	std	Y+1, r24	; 0x01
    118e:	0e 5f       	subi	r16, 0xFE	; 254
    1190:	1f 4f       	sbci	r17, 0xFF	; 255
    1192:	88 24       	eor	r8, r8
    1194:	83 94       	inc	r8
    1196:	91 2c       	mov	r9, r1
    1198:	53 01       	movw	r10, r6
    119a:	13 c0       	rjmp	.+38     	; 0x11c2 <__stack+0xc3>
    119c:	28 01       	movw	r4, r16
    119e:	f2 e0       	ldi	r31, 0x02	; 2
    11a0:	4f 0e       	add	r4, r31
    11a2:	51 1c       	adc	r5, r1
    11a4:	f8 01       	movw	r30, r16
    11a6:	a0 80       	ld	r10, Z
    11a8:	b1 80       	ldd	r11, Z+1	; 0x01
    11aa:	36 fe       	sbrs	r3, 6
    11ac:	03 c0       	rjmp	.+6      	; 0x11b4 <__stack+0xb5>
    11ae:	69 2d       	mov	r22, r9
    11b0:	70 e0       	ldi	r23, 0x00	; 0
    11b2:	02 c0       	rjmp	.+4      	; 0x11b8 <__stack+0xb9>
    11b4:	6f ef       	ldi	r22, 0xFF	; 255
    11b6:	7f ef       	ldi	r23, 0xFF	; 255
    11b8:	c5 01       	movw	r24, r10
    11ba:	0e 94 23 0a 	call	0x1446	; 0x1446 <strnlen>
    11be:	4c 01       	movw	r8, r24
    11c0:	82 01       	movw	r16, r4
    11c2:	f3 2d       	mov	r31, r3
    11c4:	ff 77       	andi	r31, 0x7F	; 127
    11c6:	3f 2e       	mov	r3, r31
    11c8:	16 c0       	rjmp	.+44     	; 0x11f6 <__stack+0xf7>
    11ca:	28 01       	movw	r4, r16
    11cc:	22 e0       	ldi	r18, 0x02	; 2
    11ce:	42 0e       	add	r4, r18
    11d0:	51 1c       	adc	r5, r1
    11d2:	f8 01       	movw	r30, r16
    11d4:	a0 80       	ld	r10, Z
    11d6:	b1 80       	ldd	r11, Z+1	; 0x01
    11d8:	36 fe       	sbrs	r3, 6
    11da:	03 c0       	rjmp	.+6      	; 0x11e2 <__stack+0xe3>
    11dc:	69 2d       	mov	r22, r9
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <__stack+0xe7>
    11e2:	6f ef       	ldi	r22, 0xFF	; 255
    11e4:	7f ef       	ldi	r23, 0xFF	; 255
    11e6:	c5 01       	movw	r24, r10
    11e8:	0e 94 18 0a 	call	0x1430	; 0x1430 <strnlen_P>
    11ec:	4c 01       	movw	r8, r24
    11ee:	f3 2d       	mov	r31, r3
    11f0:	f0 68       	ori	r31, 0x80	; 128
    11f2:	3f 2e       	mov	r3, r31
    11f4:	82 01       	movw	r16, r4
    11f6:	33 fc       	sbrc	r3, 3
    11f8:	1b c0       	rjmp	.+54     	; 0x1230 <__stack+0x131>
    11fa:	82 2d       	mov	r24, r2
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	88 16       	cp	r8, r24
    1200:	99 06       	cpc	r9, r25
    1202:	b0 f4       	brcc	.+44     	; 0x1230 <__stack+0x131>
    1204:	b6 01       	movw	r22, r12
    1206:	80 e2       	ldi	r24, 0x20	; 32
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    120e:	2a 94       	dec	r2
    1210:	f4 cf       	rjmp	.-24     	; 0x11fa <__stack+0xfb>
    1212:	f5 01       	movw	r30, r10
    1214:	37 fc       	sbrc	r3, 7
    1216:	85 91       	lpm	r24, Z+
    1218:	37 fe       	sbrs	r3, 7
    121a:	81 91       	ld	r24, Z+
    121c:	5f 01       	movw	r10, r30
    121e:	b6 01       	movw	r22, r12
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    1226:	21 10       	cpse	r2, r1
    1228:	2a 94       	dec	r2
    122a:	21 e0       	ldi	r18, 0x01	; 1
    122c:	82 1a       	sub	r8, r18
    122e:	91 08       	sbc	r9, r1
    1230:	81 14       	cp	r8, r1
    1232:	91 04       	cpc	r9, r1
    1234:	71 f7       	brne	.-36     	; 0x1212 <__stack+0x113>
    1236:	e8 c0       	rjmp	.+464    	; 0x1408 <__stack+0x309>
    1238:	84 36       	cpi	r24, 0x64	; 100
    123a:	11 f0       	breq	.+4      	; 0x1240 <__stack+0x141>
    123c:	89 36       	cpi	r24, 0x69	; 105
    123e:	41 f5       	brne	.+80     	; 0x1290 <__stack+0x191>
    1240:	f8 01       	movw	r30, r16
    1242:	37 fe       	sbrs	r3, 7
    1244:	07 c0       	rjmp	.+14     	; 0x1254 <__stack+0x155>
    1246:	60 81       	ld	r22, Z
    1248:	71 81       	ldd	r23, Z+1	; 0x01
    124a:	82 81       	ldd	r24, Z+2	; 0x02
    124c:	93 81       	ldd	r25, Z+3	; 0x03
    124e:	0c 5f       	subi	r16, 0xFC	; 252
    1250:	1f 4f       	sbci	r17, 0xFF	; 255
    1252:	08 c0       	rjmp	.+16     	; 0x1264 <__stack+0x165>
    1254:	60 81       	ld	r22, Z
    1256:	71 81       	ldd	r23, Z+1	; 0x01
    1258:	07 2e       	mov	r0, r23
    125a:	00 0c       	add	r0, r0
    125c:	88 0b       	sbc	r24, r24
    125e:	99 0b       	sbc	r25, r25
    1260:	0e 5f       	subi	r16, 0xFE	; 254
    1262:	1f 4f       	sbci	r17, 0xFF	; 255
    1264:	f3 2d       	mov	r31, r3
    1266:	ff 76       	andi	r31, 0x6F	; 111
    1268:	3f 2e       	mov	r3, r31
    126a:	97 ff       	sbrs	r25, 7
    126c:	09 c0       	rjmp	.+18     	; 0x1280 <__stack+0x181>
    126e:	90 95       	com	r25
    1270:	80 95       	com	r24
    1272:	70 95       	com	r23
    1274:	61 95       	neg	r22
    1276:	7f 4f       	sbci	r23, 0xFF	; 255
    1278:	8f 4f       	sbci	r24, 0xFF	; 255
    127a:	9f 4f       	sbci	r25, 0xFF	; 255
    127c:	f0 68       	ori	r31, 0x80	; 128
    127e:	3f 2e       	mov	r3, r31
    1280:	2a e0       	ldi	r18, 0x0A	; 10
    1282:	30 e0       	ldi	r19, 0x00	; 0
    1284:	a3 01       	movw	r20, r6
    1286:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__ultoa_invert>
    128a:	88 2e       	mov	r8, r24
    128c:	86 18       	sub	r8, r6
    128e:	45 c0       	rjmp	.+138    	; 0x131a <__stack+0x21b>
    1290:	85 37       	cpi	r24, 0x75	; 117
    1292:	31 f4       	brne	.+12     	; 0x12a0 <__stack+0x1a1>
    1294:	23 2d       	mov	r18, r3
    1296:	2f 7e       	andi	r18, 0xEF	; 239
    1298:	b2 2e       	mov	r11, r18
    129a:	2a e0       	ldi	r18, 0x0A	; 10
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	25 c0       	rjmp	.+74     	; 0x12ea <__stack+0x1eb>
    12a0:	93 2d       	mov	r25, r3
    12a2:	99 7f       	andi	r25, 0xF9	; 249
    12a4:	b9 2e       	mov	r11, r25
    12a6:	8f 36       	cpi	r24, 0x6F	; 111
    12a8:	c1 f0       	breq	.+48     	; 0x12da <__stack+0x1db>
    12aa:	18 f4       	brcc	.+6      	; 0x12b2 <__stack+0x1b3>
    12ac:	88 35       	cpi	r24, 0x58	; 88
    12ae:	79 f0       	breq	.+30     	; 0x12ce <__stack+0x1cf>
    12b0:	b5 c0       	rjmp	.+362    	; 0x141c <__stack+0x31d>
    12b2:	80 37       	cpi	r24, 0x70	; 112
    12b4:	19 f0       	breq	.+6      	; 0x12bc <__stack+0x1bd>
    12b6:	88 37       	cpi	r24, 0x78	; 120
    12b8:	21 f0       	breq	.+8      	; 0x12c2 <__stack+0x1c3>
    12ba:	b0 c0       	rjmp	.+352    	; 0x141c <__stack+0x31d>
    12bc:	e9 2f       	mov	r30, r25
    12be:	e0 61       	ori	r30, 0x10	; 16
    12c0:	be 2e       	mov	r11, r30
    12c2:	b4 fe       	sbrs	r11, 4
    12c4:	0d c0       	rjmp	.+26     	; 0x12e0 <__stack+0x1e1>
    12c6:	fb 2d       	mov	r31, r11
    12c8:	f4 60       	ori	r31, 0x04	; 4
    12ca:	bf 2e       	mov	r11, r31
    12cc:	09 c0       	rjmp	.+18     	; 0x12e0 <__stack+0x1e1>
    12ce:	34 fe       	sbrs	r3, 4
    12d0:	0a c0       	rjmp	.+20     	; 0x12e6 <__stack+0x1e7>
    12d2:	29 2f       	mov	r18, r25
    12d4:	26 60       	ori	r18, 0x06	; 6
    12d6:	b2 2e       	mov	r11, r18
    12d8:	06 c0       	rjmp	.+12     	; 0x12e6 <__stack+0x1e7>
    12da:	28 e0       	ldi	r18, 0x08	; 8
    12dc:	30 e0       	ldi	r19, 0x00	; 0
    12de:	05 c0       	rjmp	.+10     	; 0x12ea <__stack+0x1eb>
    12e0:	20 e1       	ldi	r18, 0x10	; 16
    12e2:	30 e0       	ldi	r19, 0x00	; 0
    12e4:	02 c0       	rjmp	.+4      	; 0x12ea <__stack+0x1eb>
    12e6:	20 e1       	ldi	r18, 0x10	; 16
    12e8:	32 e0       	ldi	r19, 0x02	; 2
    12ea:	f8 01       	movw	r30, r16
    12ec:	b7 fe       	sbrs	r11, 7
    12ee:	07 c0       	rjmp	.+14     	; 0x12fe <__stack+0x1ff>
    12f0:	60 81       	ld	r22, Z
    12f2:	71 81       	ldd	r23, Z+1	; 0x01
    12f4:	82 81       	ldd	r24, Z+2	; 0x02
    12f6:	93 81       	ldd	r25, Z+3	; 0x03
    12f8:	0c 5f       	subi	r16, 0xFC	; 252
    12fa:	1f 4f       	sbci	r17, 0xFF	; 255
    12fc:	06 c0       	rjmp	.+12     	; 0x130a <__stack+0x20b>
    12fe:	60 81       	ld	r22, Z
    1300:	71 81       	ldd	r23, Z+1	; 0x01
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	90 e0       	ldi	r25, 0x00	; 0
    1306:	0e 5f       	subi	r16, 0xFE	; 254
    1308:	1f 4f       	sbci	r17, 0xFF	; 255
    130a:	a3 01       	movw	r20, r6
    130c:	0e 94 7a 0a 	call	0x14f4	; 0x14f4 <__ultoa_invert>
    1310:	88 2e       	mov	r8, r24
    1312:	86 18       	sub	r8, r6
    1314:	fb 2d       	mov	r31, r11
    1316:	ff 77       	andi	r31, 0x7F	; 127
    1318:	3f 2e       	mov	r3, r31
    131a:	36 fe       	sbrs	r3, 6
    131c:	0d c0       	rjmp	.+26     	; 0x1338 <__stack+0x239>
    131e:	23 2d       	mov	r18, r3
    1320:	2e 7f       	andi	r18, 0xFE	; 254
    1322:	a2 2e       	mov	r10, r18
    1324:	89 14       	cp	r8, r9
    1326:	58 f4       	brcc	.+22     	; 0x133e <__stack+0x23f>
    1328:	34 fe       	sbrs	r3, 4
    132a:	0b c0       	rjmp	.+22     	; 0x1342 <__stack+0x243>
    132c:	32 fc       	sbrc	r3, 2
    132e:	09 c0       	rjmp	.+18     	; 0x1342 <__stack+0x243>
    1330:	83 2d       	mov	r24, r3
    1332:	8e 7e       	andi	r24, 0xEE	; 238
    1334:	a8 2e       	mov	r10, r24
    1336:	05 c0       	rjmp	.+10     	; 0x1342 <__stack+0x243>
    1338:	b8 2c       	mov	r11, r8
    133a:	a3 2c       	mov	r10, r3
    133c:	03 c0       	rjmp	.+6      	; 0x1344 <__stack+0x245>
    133e:	b8 2c       	mov	r11, r8
    1340:	01 c0       	rjmp	.+2      	; 0x1344 <__stack+0x245>
    1342:	b9 2c       	mov	r11, r9
    1344:	a4 fe       	sbrs	r10, 4
    1346:	0f c0       	rjmp	.+30     	; 0x1366 <__stack+0x267>
    1348:	fe 01       	movw	r30, r28
    134a:	e8 0d       	add	r30, r8
    134c:	f1 1d       	adc	r31, r1
    134e:	80 81       	ld	r24, Z
    1350:	80 33       	cpi	r24, 0x30	; 48
    1352:	21 f4       	brne	.+8      	; 0x135c <__stack+0x25d>
    1354:	9a 2d       	mov	r25, r10
    1356:	99 7e       	andi	r25, 0xE9	; 233
    1358:	a9 2e       	mov	r10, r25
    135a:	09 c0       	rjmp	.+18     	; 0x136e <__stack+0x26f>
    135c:	a2 fe       	sbrs	r10, 2
    135e:	06 c0       	rjmp	.+12     	; 0x136c <__stack+0x26d>
    1360:	b3 94       	inc	r11
    1362:	b3 94       	inc	r11
    1364:	04 c0       	rjmp	.+8      	; 0x136e <__stack+0x26f>
    1366:	8a 2d       	mov	r24, r10
    1368:	86 78       	andi	r24, 0x86	; 134
    136a:	09 f0       	breq	.+2      	; 0x136e <__stack+0x26f>
    136c:	b3 94       	inc	r11
    136e:	a3 fc       	sbrc	r10, 3
    1370:	11 c0       	rjmp	.+34     	; 0x1394 <__stack+0x295>
    1372:	a0 fe       	sbrs	r10, 0
    1374:	06 c0       	rjmp	.+12     	; 0x1382 <__stack+0x283>
    1376:	b2 14       	cp	r11, r2
    1378:	88 f4       	brcc	.+34     	; 0x139c <__stack+0x29d>
    137a:	28 0c       	add	r2, r8
    137c:	92 2c       	mov	r9, r2
    137e:	9b 18       	sub	r9, r11
    1380:	0e c0       	rjmp	.+28     	; 0x139e <__stack+0x29f>
    1382:	b2 14       	cp	r11, r2
    1384:	60 f4       	brcc	.+24     	; 0x139e <__stack+0x29f>
    1386:	b6 01       	movw	r22, r12
    1388:	80 e2       	ldi	r24, 0x20	; 32
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    1390:	b3 94       	inc	r11
    1392:	f7 cf       	rjmp	.-18     	; 0x1382 <__stack+0x283>
    1394:	b2 14       	cp	r11, r2
    1396:	18 f4       	brcc	.+6      	; 0x139e <__stack+0x29f>
    1398:	2b 18       	sub	r2, r11
    139a:	02 c0       	rjmp	.+4      	; 0x13a0 <__stack+0x2a1>
    139c:	98 2c       	mov	r9, r8
    139e:	21 2c       	mov	r2, r1
    13a0:	a4 fe       	sbrs	r10, 4
    13a2:	10 c0       	rjmp	.+32     	; 0x13c4 <__stack+0x2c5>
    13a4:	b6 01       	movw	r22, r12
    13a6:	80 e3       	ldi	r24, 0x30	; 48
    13a8:	90 e0       	ldi	r25, 0x00	; 0
    13aa:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    13ae:	a2 fe       	sbrs	r10, 2
    13b0:	17 c0       	rjmp	.+46     	; 0x13e0 <__stack+0x2e1>
    13b2:	a1 fc       	sbrc	r10, 1
    13b4:	03 c0       	rjmp	.+6      	; 0x13bc <__stack+0x2bd>
    13b6:	88 e7       	ldi	r24, 0x78	; 120
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <__stack+0x2c1>
    13bc:	88 e5       	ldi	r24, 0x58	; 88
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	b6 01       	movw	r22, r12
    13c2:	0c c0       	rjmp	.+24     	; 0x13dc <__stack+0x2dd>
    13c4:	8a 2d       	mov	r24, r10
    13c6:	86 78       	andi	r24, 0x86	; 134
    13c8:	59 f0       	breq	.+22     	; 0x13e0 <__stack+0x2e1>
    13ca:	a1 fe       	sbrs	r10, 1
    13cc:	02 c0       	rjmp	.+4      	; 0x13d2 <__stack+0x2d3>
    13ce:	8b e2       	ldi	r24, 0x2B	; 43
    13d0:	01 c0       	rjmp	.+2      	; 0x13d4 <__stack+0x2d5>
    13d2:	80 e2       	ldi	r24, 0x20	; 32
    13d4:	a7 fc       	sbrc	r10, 7
    13d6:	8d e2       	ldi	r24, 0x2D	; 45
    13d8:	b6 01       	movw	r22, r12
    13da:	90 e0       	ldi	r25, 0x00	; 0
    13dc:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    13e0:	89 14       	cp	r8, r9
    13e2:	38 f4       	brcc	.+14     	; 0x13f2 <__stack+0x2f3>
    13e4:	b6 01       	movw	r22, r12
    13e6:	80 e3       	ldi	r24, 0x30	; 48
    13e8:	90 e0       	ldi	r25, 0x00	; 0
    13ea:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    13ee:	9a 94       	dec	r9
    13f0:	f7 cf       	rjmp	.-18     	; 0x13e0 <__stack+0x2e1>
    13f2:	8a 94       	dec	r8
    13f4:	f3 01       	movw	r30, r6
    13f6:	e8 0d       	add	r30, r8
    13f8:	f1 1d       	adc	r31, r1
    13fa:	80 81       	ld	r24, Z
    13fc:	b6 01       	movw	r22, r12
    13fe:	90 e0       	ldi	r25, 0x00	; 0
    1400:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    1404:	81 10       	cpse	r8, r1
    1406:	f5 cf       	rjmp	.-22     	; 0x13f2 <__stack+0x2f3>
    1408:	22 20       	and	r2, r2
    140a:	09 f4       	brne	.+2      	; 0x140e <__stack+0x30f>
    140c:	42 ce       	rjmp	.-892    	; 0x1092 <vfprintf+0x24>
    140e:	b6 01       	movw	r22, r12
    1410:	80 e2       	ldi	r24, 0x20	; 32
    1412:	90 e0       	ldi	r25, 0x00	; 0
    1414:	0e 94 3e 0a 	call	0x147c	; 0x147c <fputc>
    1418:	2a 94       	dec	r2
    141a:	f6 cf       	rjmp	.-20     	; 0x1408 <__stack+0x309>
    141c:	f6 01       	movw	r30, r12
    141e:	86 81       	ldd	r24, Z+6	; 0x06
    1420:	97 81       	ldd	r25, Z+7	; 0x07
    1422:	02 c0       	rjmp	.+4      	; 0x1428 <__stack+0x329>
    1424:	8f ef       	ldi	r24, 0xFF	; 255
    1426:	9f ef       	ldi	r25, 0xFF	; 255
    1428:	2b 96       	adiw	r28, 0x0b	; 11
    142a:	e2 e1       	ldi	r30, 0x12	; 18
    142c:	0c 94 f4 0a 	jmp	0x15e8	; 0x15e8 <__epilogue_restores__>

00001430 <strnlen_P>:
    1430:	fc 01       	movw	r30, r24
    1432:	05 90       	lpm	r0, Z+
    1434:	61 50       	subi	r22, 0x01	; 1
    1436:	70 40       	sbci	r23, 0x00	; 0
    1438:	01 10       	cpse	r0, r1
    143a:	d8 f7       	brcc	.-10     	; 0x1432 <strnlen_P+0x2>
    143c:	80 95       	com	r24
    143e:	90 95       	com	r25
    1440:	8e 0f       	add	r24, r30
    1442:	9f 1f       	adc	r25, r31
    1444:	08 95       	ret

00001446 <strnlen>:
    1446:	fc 01       	movw	r30, r24
    1448:	61 50       	subi	r22, 0x01	; 1
    144a:	70 40       	sbci	r23, 0x00	; 0
    144c:	01 90       	ld	r0, Z+
    144e:	01 10       	cpse	r0, r1
    1450:	d8 f7       	brcc	.-10     	; 0x1448 <strnlen+0x2>
    1452:	80 95       	com	r24
    1454:	90 95       	com	r25
    1456:	8e 0f       	add	r24, r30
    1458:	9f 1f       	adc	r25, r31
    145a:	08 95       	ret

0000145c <strrev>:
    145c:	dc 01       	movw	r26, r24
    145e:	fc 01       	movw	r30, r24
    1460:	67 2f       	mov	r22, r23
    1462:	71 91       	ld	r23, Z+
    1464:	77 23       	and	r23, r23
    1466:	e1 f7       	brne	.-8      	; 0x1460 <strrev+0x4>
    1468:	32 97       	sbiw	r30, 0x02	; 2
    146a:	04 c0       	rjmp	.+8      	; 0x1474 <strrev+0x18>
    146c:	7c 91       	ld	r23, X
    146e:	6d 93       	st	X+, r22
    1470:	70 83       	st	Z, r23
    1472:	62 91       	ld	r22, -Z
    1474:	ae 17       	cp	r26, r30
    1476:	bf 07       	cpc	r27, r31
    1478:	c8 f3       	brcs	.-14     	; 0x146c <strrev+0x10>
    147a:	08 95       	ret

0000147c <fputc>:
    147c:	0f 93       	push	r16
    147e:	1f 93       	push	r17
    1480:	cf 93       	push	r28
    1482:	df 93       	push	r29
    1484:	fb 01       	movw	r30, r22
    1486:	23 81       	ldd	r18, Z+3	; 0x03
    1488:	21 fd       	sbrc	r18, 1
    148a:	03 c0       	rjmp	.+6      	; 0x1492 <fputc+0x16>
    148c:	8f ef       	ldi	r24, 0xFF	; 255
    148e:	9f ef       	ldi	r25, 0xFF	; 255
    1490:	2c c0       	rjmp	.+88     	; 0x14ea <fputc+0x6e>
    1492:	22 ff       	sbrs	r18, 2
    1494:	16 c0       	rjmp	.+44     	; 0x14c2 <fputc+0x46>
    1496:	46 81       	ldd	r20, Z+6	; 0x06
    1498:	57 81       	ldd	r21, Z+7	; 0x07
    149a:	24 81       	ldd	r18, Z+4	; 0x04
    149c:	35 81       	ldd	r19, Z+5	; 0x05
    149e:	42 17       	cp	r20, r18
    14a0:	53 07       	cpc	r21, r19
    14a2:	44 f4       	brge	.+16     	; 0x14b4 <fputc+0x38>
    14a4:	a0 81       	ld	r26, Z
    14a6:	b1 81       	ldd	r27, Z+1	; 0x01
    14a8:	9d 01       	movw	r18, r26
    14aa:	2f 5f       	subi	r18, 0xFF	; 255
    14ac:	3f 4f       	sbci	r19, 0xFF	; 255
    14ae:	31 83       	std	Z+1, r19	; 0x01
    14b0:	20 83       	st	Z, r18
    14b2:	8c 93       	st	X, r24
    14b4:	26 81       	ldd	r18, Z+6	; 0x06
    14b6:	37 81       	ldd	r19, Z+7	; 0x07
    14b8:	2f 5f       	subi	r18, 0xFF	; 255
    14ba:	3f 4f       	sbci	r19, 0xFF	; 255
    14bc:	37 83       	std	Z+7, r19	; 0x07
    14be:	26 83       	std	Z+6, r18	; 0x06
    14c0:	14 c0       	rjmp	.+40     	; 0x14ea <fputc+0x6e>
    14c2:	8b 01       	movw	r16, r22
    14c4:	ec 01       	movw	r28, r24
    14c6:	fb 01       	movw	r30, r22
    14c8:	00 84       	ldd	r0, Z+8	; 0x08
    14ca:	f1 85       	ldd	r31, Z+9	; 0x09
    14cc:	e0 2d       	mov	r30, r0
    14ce:	09 95       	icall
    14d0:	89 2b       	or	r24, r25
    14d2:	e1 f6       	brne	.-72     	; 0x148c <fputc+0x10>
    14d4:	d8 01       	movw	r26, r16
    14d6:	16 96       	adiw	r26, 0x06	; 6
    14d8:	8d 91       	ld	r24, X+
    14da:	9c 91       	ld	r25, X
    14dc:	17 97       	sbiw	r26, 0x07	; 7
    14de:	01 96       	adiw	r24, 0x01	; 1
    14e0:	17 96       	adiw	r26, 0x07	; 7
    14e2:	9c 93       	st	X, r25
    14e4:	8e 93       	st	-X, r24
    14e6:	16 97       	sbiw	r26, 0x06	; 6
    14e8:	ce 01       	movw	r24, r28
    14ea:	df 91       	pop	r29
    14ec:	cf 91       	pop	r28
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	08 95       	ret

000014f4 <__ultoa_invert>:
    14f4:	fa 01       	movw	r30, r20
    14f6:	aa 27       	eor	r26, r26
    14f8:	28 30       	cpi	r18, 0x08	; 8
    14fa:	51 f1       	breq	.+84     	; 0x1550 <__ultoa_invert+0x5c>
    14fc:	20 31       	cpi	r18, 0x10	; 16
    14fe:	81 f1       	breq	.+96     	; 0x1560 <__ultoa_invert+0x6c>
    1500:	e8 94       	clt
    1502:	6f 93       	push	r22
    1504:	6e 7f       	andi	r22, 0xFE	; 254
    1506:	6e 5f       	subi	r22, 0xFE	; 254
    1508:	7f 4f       	sbci	r23, 0xFF	; 255
    150a:	8f 4f       	sbci	r24, 0xFF	; 255
    150c:	9f 4f       	sbci	r25, 0xFF	; 255
    150e:	af 4f       	sbci	r26, 0xFF	; 255
    1510:	b1 e0       	ldi	r27, 0x01	; 1
    1512:	3e d0       	rcall	.+124    	; 0x1590 <__ultoa_invert+0x9c>
    1514:	b4 e0       	ldi	r27, 0x04	; 4
    1516:	3c d0       	rcall	.+120    	; 0x1590 <__ultoa_invert+0x9c>
    1518:	67 0f       	add	r22, r23
    151a:	78 1f       	adc	r23, r24
    151c:	89 1f       	adc	r24, r25
    151e:	9a 1f       	adc	r25, r26
    1520:	a1 1d       	adc	r26, r1
    1522:	68 0f       	add	r22, r24
    1524:	79 1f       	adc	r23, r25
    1526:	8a 1f       	adc	r24, r26
    1528:	91 1d       	adc	r25, r1
    152a:	a1 1d       	adc	r26, r1
    152c:	6a 0f       	add	r22, r26
    152e:	71 1d       	adc	r23, r1
    1530:	81 1d       	adc	r24, r1
    1532:	91 1d       	adc	r25, r1
    1534:	a1 1d       	adc	r26, r1
    1536:	20 d0       	rcall	.+64     	; 0x1578 <__ultoa_invert+0x84>
    1538:	09 f4       	brne	.+2      	; 0x153c <__ultoa_invert+0x48>
    153a:	68 94       	set
    153c:	3f 91       	pop	r19
    153e:	2a e0       	ldi	r18, 0x0A	; 10
    1540:	26 9f       	mul	r18, r22
    1542:	11 24       	eor	r1, r1
    1544:	30 19       	sub	r19, r0
    1546:	30 5d       	subi	r19, 0xD0	; 208
    1548:	31 93       	st	Z+, r19
    154a:	de f6       	brtc	.-74     	; 0x1502 <__ultoa_invert+0xe>
    154c:	cf 01       	movw	r24, r30
    154e:	08 95       	ret
    1550:	46 2f       	mov	r20, r22
    1552:	47 70       	andi	r20, 0x07	; 7
    1554:	40 5d       	subi	r20, 0xD0	; 208
    1556:	41 93       	st	Z+, r20
    1558:	b3 e0       	ldi	r27, 0x03	; 3
    155a:	0f d0       	rcall	.+30     	; 0x157a <__ultoa_invert+0x86>
    155c:	c9 f7       	brne	.-14     	; 0x1550 <__ultoa_invert+0x5c>
    155e:	f6 cf       	rjmp	.-20     	; 0x154c <__ultoa_invert+0x58>
    1560:	46 2f       	mov	r20, r22
    1562:	4f 70       	andi	r20, 0x0F	; 15
    1564:	40 5d       	subi	r20, 0xD0	; 208
    1566:	4a 33       	cpi	r20, 0x3A	; 58
    1568:	18 f0       	brcs	.+6      	; 0x1570 <__ultoa_invert+0x7c>
    156a:	49 5d       	subi	r20, 0xD9	; 217
    156c:	31 fd       	sbrc	r19, 1
    156e:	40 52       	subi	r20, 0x20	; 32
    1570:	41 93       	st	Z+, r20
    1572:	02 d0       	rcall	.+4      	; 0x1578 <__ultoa_invert+0x84>
    1574:	a9 f7       	brne	.-22     	; 0x1560 <__ultoa_invert+0x6c>
    1576:	ea cf       	rjmp	.-44     	; 0x154c <__ultoa_invert+0x58>
    1578:	b4 e0       	ldi	r27, 0x04	; 4
    157a:	a6 95       	lsr	r26
    157c:	97 95       	ror	r25
    157e:	87 95       	ror	r24
    1580:	77 95       	ror	r23
    1582:	67 95       	ror	r22
    1584:	ba 95       	dec	r27
    1586:	c9 f7       	brne	.-14     	; 0x157a <__ultoa_invert+0x86>
    1588:	00 97       	sbiw	r24, 0x00	; 0
    158a:	61 05       	cpc	r22, r1
    158c:	71 05       	cpc	r23, r1
    158e:	08 95       	ret
    1590:	9b 01       	movw	r18, r22
    1592:	ac 01       	movw	r20, r24
    1594:	0a 2e       	mov	r0, r26
    1596:	06 94       	lsr	r0
    1598:	57 95       	ror	r21
    159a:	47 95       	ror	r20
    159c:	37 95       	ror	r19
    159e:	27 95       	ror	r18
    15a0:	ba 95       	dec	r27
    15a2:	c9 f7       	brne	.-14     	; 0x1596 <__ultoa_invert+0xa2>
    15a4:	62 0f       	add	r22, r18
    15a6:	73 1f       	adc	r23, r19
    15a8:	84 1f       	adc	r24, r20
    15aa:	95 1f       	adc	r25, r21
    15ac:	a0 1d       	adc	r26, r0
    15ae:	08 95       	ret

000015b0 <__prologue_saves__>:
    15b0:	2f 92       	push	r2
    15b2:	3f 92       	push	r3
    15b4:	4f 92       	push	r4
    15b6:	5f 92       	push	r5
    15b8:	6f 92       	push	r6
    15ba:	7f 92       	push	r7
    15bc:	8f 92       	push	r8
    15be:	9f 92       	push	r9
    15c0:	af 92       	push	r10
    15c2:	bf 92       	push	r11
    15c4:	cf 92       	push	r12
    15c6:	df 92       	push	r13
    15c8:	ef 92       	push	r14
    15ca:	ff 92       	push	r15
    15cc:	0f 93       	push	r16
    15ce:	1f 93       	push	r17
    15d0:	cf 93       	push	r28
    15d2:	df 93       	push	r29
    15d4:	cd b7       	in	r28, 0x3d	; 61
    15d6:	de b7       	in	r29, 0x3e	; 62
    15d8:	ca 1b       	sub	r28, r26
    15da:	db 0b       	sbc	r29, r27
    15dc:	0f b6       	in	r0, 0x3f	; 63
    15de:	f8 94       	cli
    15e0:	de bf       	out	0x3e, r29	; 62
    15e2:	0f be       	out	0x3f, r0	; 63
    15e4:	cd bf       	out	0x3d, r28	; 61
    15e6:	09 94       	ijmp

000015e8 <__epilogue_restores__>:
    15e8:	2a 88       	ldd	r2, Y+18	; 0x12
    15ea:	39 88       	ldd	r3, Y+17	; 0x11
    15ec:	48 88       	ldd	r4, Y+16	; 0x10
    15ee:	5f 84       	ldd	r5, Y+15	; 0x0f
    15f0:	6e 84       	ldd	r6, Y+14	; 0x0e
    15f2:	7d 84       	ldd	r7, Y+13	; 0x0d
    15f4:	8c 84       	ldd	r8, Y+12	; 0x0c
    15f6:	9b 84       	ldd	r9, Y+11	; 0x0b
    15f8:	aa 84       	ldd	r10, Y+10	; 0x0a
    15fa:	b9 84       	ldd	r11, Y+9	; 0x09
    15fc:	c8 84       	ldd	r12, Y+8	; 0x08
    15fe:	df 80       	ldd	r13, Y+7	; 0x07
    1600:	ee 80       	ldd	r14, Y+6	; 0x06
    1602:	fd 80       	ldd	r15, Y+5	; 0x05
    1604:	0c 81       	ldd	r16, Y+4	; 0x04
    1606:	1b 81       	ldd	r17, Y+3	; 0x03
    1608:	aa 81       	ldd	r26, Y+2	; 0x02
    160a:	b9 81       	ldd	r27, Y+1	; 0x01
    160c:	ce 0f       	add	r28, r30
    160e:	d1 1d       	adc	r29, r1
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	f8 94       	cli
    1614:	de bf       	out	0x3e, r29	; 62
    1616:	0f be       	out	0x3f, r0	; 63
    1618:	cd bf       	out	0x3d, r28	; 61
    161a:	ed 01       	movw	r28, r26
    161c:	08 95       	ret

0000161e <_exit>:
    161e:	f8 94       	cli

00001620 <__stop_program>:
    1620:	ff cf       	rjmp	.-2      	; 0x1620 <__stop_program>
