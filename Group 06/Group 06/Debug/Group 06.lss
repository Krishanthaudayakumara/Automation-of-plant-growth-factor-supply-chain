
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800100  00001852  000018e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001852  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  008001ba  008001ba  000019a0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000019a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00001a38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b1c  00000000  00000000  00001ae0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a88  00000000  00000000  000035fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a5f  00000000  00000000  00004084  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00004ae4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059c  00000000  00000000  00004cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ef0  00000000  00000000  00005274  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00006164  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__EEPROM_REGION_LENGTH__+0x108>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e2 e5       	ldi	r30, 0x52	; 82
     122:	f8 e1       	ldi	r31, 0x18	; 24
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	aa 3b       	cpi	r26, 0xBA	; 186
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	aa eb       	ldi	r26, 0xBA	; 186
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	a5 3c       	cpi	r26, 0xC5	; 197
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 24 03 	call	0x648	; 0x648 <main>
     144:	0c 94 27 0c 	jmp	0x184e	; 0x184e <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <lcd_clear>:


void lcd_clear()
{
	lcdcmd(0x01);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     20e:	08 95       	ret

00000210 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     216:	08 95       	ret

00000218 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     218:	80 ec       	ldi	r24, 0xC0	; 192
     21a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     21e:	08 95       	ret

00000220 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     220:	8f ee       	ldi	r24, 0xEF	; 239
     222:	82 bb       	out	0x12, r24	; 18
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x8>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0xe>
     22e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     230:	80 9b       	sbis	0x10, 0	; 16
     232:	30 c0       	rjmp	.+96     	; 0x294 <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     234:	81 9b       	sbis	0x10, 1	; 16
     236:	30 c0       	rjmp	.+96     	; 0x298 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     238:	82 9b       	sbis	0x10, 2	; 16
     23a:	30 c0       	rjmp	.+96     	; 0x29c <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     23c:	8f ed       	ldi	r24, 0xDF	; 223
     23e:	82 bb       	out	0x12, r24	; 18
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x24>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x2a>
     24a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     24c:	80 9b       	sbis	0x10, 0	; 16
     24e:	28 c0       	rjmp	.+80     	; 0x2a0 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     250:	81 9b       	sbis	0x10, 1	; 16
     252:	28 c0       	rjmp	.+80     	; 0x2a4 <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     254:	82 9b       	sbis	0x10, 2	; 16
     256:	28 c0       	rjmp	.+80     	; 0x2a8 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     258:	8f eb       	ldi	r24, 0xBF	; 191
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	83 ec       	ldi	r24, 0xC3	; 195
     25e:	99 e0       	ldi	r25, 0x09	; 9
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <keycheck+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <keycheck+0x46>
     266:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     268:	80 9b       	sbis	0x10, 0	; 16
     26a:	20 c0       	rjmp	.+64     	; 0x2ac <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     26c:	81 9b       	sbis	0x10, 1	; 16
     26e:	20 c0       	rjmp	.+64     	; 0x2b0 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     270:	82 9b       	sbis	0x10, 2	; 16
     272:	20 c0       	rjmp	.+64     	; 0x2b4 <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     274:	8f e7       	ldi	r24, 0x7F	; 127
     276:	82 bb       	out	0x12, r24	; 18
     278:	83 ec       	ldi	r24, 0xC3	; 195
     27a:	99 e0       	ldi	r25, 0x09	; 9
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <keycheck+0x5c>
     280:	00 c0       	rjmp	.+0      	; 0x282 <keycheck+0x62>
     282:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     284:	80 9b       	sbis	0x10, 0	; 16
     286:	18 c0       	rjmp	.+48     	; 0x2b8 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     288:	81 9b       	sbis	0x10, 1	; 16
     28a:	18 c0       	rjmp	.+48     	; 0x2bc <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     28c:	82 99       	sbic	0x10, 2	; 16
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <keycheck+0xa0>
	{
		return '#';
     290:	83 e2       	ldi	r24, 0x23	; 35
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     294:	81 e3       	ldi	r24, 0x31	; 49
     296:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     298:	82 e3       	ldi	r24, 0x32	; 50
     29a:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     2a0:	84 e3       	ldi	r24, 0x34	; 52
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     2a4:	85 e3       	ldi	r24, 0x35	; 53
     2a6:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     2a8:	86 e3       	ldi	r24, 0x36	; 54
     2aa:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     2ac:	87 e3       	ldi	r24, 0x37	; 55
     2ae:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     2b4:	89 e3       	ldi	r24, 0x39	; 57
     2b6:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2b8:	8a e2       	ldi	r24, 0x2A	; 42
     2ba:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2bc:	80 e3       	ldi	r24, 0x30	; 48
     2be:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2c0:	81 e6       	ldi	r24, 0x61	; 97

}
     2c2:	08 95       	ret

000002c4 <scankey>:

char scankey()
{
	char key='a';
     2c4:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <scankey+0x8>
	{
		key=keycheck();
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2cc:	81 36       	cpi	r24, 0x61	; 97
     2ce:	e1 f3       	breq	.-8      	; 0x2c8 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2d0:	08 95       	ret

000002d2 <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2d2:	84 b3       	in	r24, 0x14	; 20
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	84 bb       	out	0x14, r24	; 20
     2d8:	08 95       	ret

000002da <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2da:	85 b3       	in	r24, 0x15	; 21
     2dc:	81 60       	ori	r24, 0x01	; 1
     2de:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	85 e0       	ldi	r24, 0x05	; 5
     2e2:	8a 95       	dec	r24
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2e6:	85 b3       	in	r24, 0x15	; 21
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	85 bb       	out	0x15, r24	; 21
     2ec:	08 95       	ret

000002ee <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c0 e0       	ldi	r28, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	f1 2c       	mov	r15, r1
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	15 c0       	rjmp	.+42     	; 0x342 <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     318:	99 99       	sbic	0x13, 1	; 19
     31a:	25 c0       	rjmp	.+74     	; 0x366 <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     31c:	2d 2f       	mov	r18, r29
     31e:	3c 2f       	mov	r19, r28
     320:	4b 2f       	mov	r20, r27
     322:	5a 2f       	mov	r21, r26
     324:	6f 2f       	mov	r22, r31
     326:	7f 2d       	mov	r23, r15
     328:	80 2f       	mov	r24, r16
     32a:	91 2f       	mov	r25, r17
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__adddi3_s8>
     332:	d2 2f       	mov	r29, r18
     334:	c3 2f       	mov	r28, r19
     336:	b4 2f       	mov	r27, r20
     338:	a5 2f       	mov	r26, r21
     33a:	f6 2f       	mov	r31, r22
     33c:	f7 2e       	mov	r15, r23
     33e:	08 2f       	mov	r16, r24
     340:	19 2f       	mov	r17, r25
     342:	2d 2f       	mov	r18, r29
     344:	3c 2f       	mov	r19, r28
     346:	4b 2f       	mov	r20, r27
     348:	5a 2f       	mov	r21, r26
     34a:	6f 2f       	mov	r22, r31
     34c:	7f 2d       	mov	r23, r15
     34e:	80 2f       	mov	r24, r16
     350:	91 2f       	mov	r25, r17
     352:	2f 3b       	cpi	r18, 0xBF	; 191
     354:	37 42       	sbci	r19, 0x27	; 39
     356:	49 40       	sbci	r20, 0x09	; 9
     358:	51 05       	cpc	r21, r1
     35a:	61 05       	cpc	r22, r1
     35c:	71 05       	cpc	r23, r1
     35e:	81 05       	cpc	r24, r1
     360:	91 05       	cpc	r25, r1
     362:	d1 f2       	breq	.-76     	; 0x318 <GetPulseWidth+0x2a>
     364:	c8 f2       	brcs	.-78     	; 0x318 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     366:	2d 2f       	mov	r18, r29
     368:	3c 2f       	mov	r19, r28
     36a:	4b 2f       	mov	r20, r27
     36c:	5a 2f       	mov	r21, r26
     36e:	6f 2f       	mov	r22, r31
     370:	7f 2d       	mov	r23, r15
     372:	80 2f       	mov	r24, r16
     374:	91 2f       	mov	r25, r17
     376:	20 3c       	cpi	r18, 0xC0	; 192
     378:	37 42       	sbci	r19, 0x27	; 39
     37a:	49 40       	sbci	r20, 0x09	; 9
     37c:	51 05       	cpc	r21, r1
     37e:	61 05       	cpc	r22, r1
     380:	71 05       	cpc	r23, r1
     382:	81 05       	cpc	r24, r1
     384:	91 05       	cpc	r25, r1
     386:	09 f4       	brne	.+2      	; 0x38a <GetPulseWidth+0x9c>
     388:	69 c0       	rjmp	.+210    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	return US_ERROR;
	
	TCCR1A=0X00;
     38a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     394:	d0 e0       	ldi	r29, 0x00	; 0
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	f1 2c       	mov	r15, r1
     3a0:	00 e0       	ldi	r16, 0x00	; 0
     3a2:	10 e0       	ldi	r17, 0x00	; 0
     3a4:	1a c0       	rjmp	.+52     	; 0x3da <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3a6:	99 9b       	sbis	0x13, 1	; 19
     3a8:	2a c0       	rjmp	.+84     	; 0x3fe <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     3aa:	8c b5       	in	r24, 0x2c	; 44
     3ac:	9d b5       	in	r25, 0x2d	; 45
     3ae:	81 36       	cpi	r24, 0x61	; 97
     3b0:	9a 4e       	sbci	r25, 0xEA	; 234
     3b2:	28 f5       	brcc	.+74     	; 0x3fe <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     3b4:	2d 2f       	mov	r18, r29
     3b6:	3c 2f       	mov	r19, r28
     3b8:	4b 2f       	mov	r20, r27
     3ba:	5a 2f       	mov	r21, r26
     3bc:	6f 2f       	mov	r22, r31
     3be:	7f 2d       	mov	r23, r15
     3c0:	80 2f       	mov	r24, r16
     3c2:	91 2f       	mov	r25, r17
     3c4:	a1 e0       	ldi	r26, 0x01	; 1
     3c6:	0e 94 fc 08 	call	0x11f8	; 0x11f8 <__adddi3_s8>
     3ca:	d2 2f       	mov	r29, r18
     3cc:	c3 2f       	mov	r28, r19
     3ce:	b4 2f       	mov	r27, r20
     3d0:	a5 2f       	mov	r26, r21
     3d2:	f6 2f       	mov	r31, r22
     3d4:	f7 2e       	mov	r15, r23
     3d6:	08 2f       	mov	r16, r24
     3d8:	19 2f       	mov	r17, r25
     3da:	2d 2f       	mov	r18, r29
     3dc:	3c 2f       	mov	r19, r28
     3de:	4b 2f       	mov	r20, r27
     3e0:	5a 2f       	mov	r21, r26
     3e2:	6f 2f       	mov	r22, r31
     3e4:	7f 2d       	mov	r23, r15
     3e6:	80 2f       	mov	r24, r16
     3e8:	91 2f       	mov	r25, r17
     3ea:	2f 3b       	cpi	r18, 0xBF	; 191
     3ec:	37 42       	sbci	r19, 0x27	; 39
     3ee:	49 40       	sbci	r20, 0x09	; 9
     3f0:	51 05       	cpc	r21, r1
     3f2:	61 05       	cpc	r22, r1
     3f4:	71 05       	cpc	r23, r1
     3f6:	81 05       	cpc	r24, r1
     3f8:	91 05       	cpc	r25, r1
     3fa:	a9 f2       	breq	.-86     	; 0x3a6 <GetPulseWidth+0xb8>
     3fc:	a0 f2       	brcs	.-88     	; 0x3a6 <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3fe:	2d 2f       	mov	r18, r29
     400:	3c 2f       	mov	r19, r28
     402:	4b 2f       	mov	r20, r27
     404:	5a 2f       	mov	r21, r26
     406:	6f 2f       	mov	r22, r31
     408:	7f 2d       	mov	r23, r15
     40a:	80 2f       	mov	r24, r16
     40c:	91 2f       	mov	r25, r17
     40e:	20 3c       	cpi	r18, 0xC0	; 192
     410:	37 42       	sbci	r19, 0x27	; 39
     412:	49 40       	sbci	r20, 0x09	; 9
     414:	51 05       	cpc	r21, r1
     416:	61 05       	cpc	r22, r1
     418:	71 05       	cpc	r23, r1
     41a:	81 05       	cpc	r24, r1
     41c:	91 05       	cpc	r25, r1
     41e:	19 f1       	breq	.+70     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	return US_NO_OBSTACLE;

	result=TCNT1;
     420:	8c b4       	in	r8, 0x2c	; 44
     422:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     424:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     426:	28 2d       	mov	r18, r8
     428:	39 2d       	mov	r19, r9
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	20 36       	cpi	r18, 0x60	; 96
     438:	ea ee       	ldi	r30, 0xEA	; 234
     43a:	3e 07       	cpc	r19, r30
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	61 05       	cpc	r22, r1
     442:	71 05       	cpc	r23, r1
     444:	81 05       	cpc	r24, r1
     446:	91 05       	cpc	r25, r1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	90 f4       	brcc	.+36     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     44c:	01 e0       	ldi	r16, 0x01	; 1
     44e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__lshrdi3>
     452:	62 2f       	mov	r22, r18
     454:	73 2f       	mov	r23, r19
     456:	84 2f       	mov	r24, r20
     458:	95 2f       	mov	r25, r21
     45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	7f ef       	ldi	r23, 0xFF	; 255
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     466:	6e ef       	ldi	r22, 0xFE	; 254
     468:	7f ef       	ldi	r23, 0xFF	; 255
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     470:	6e ef       	ldi	r22, 0xFE	; 254
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <Request>:
#define DHT11_PIN 3
uint8_t c=0,I_RH,D_RH,I_Temp,D_Temp,CheckSum;

void Request()						/* Microcontroller send start pulse or request */
{
	DDRD |= (1<<DHT11_PIN);
     492:	81 b3       	in	r24, 0x11	; 17
     494:	88 60       	ori	r24, 0x08	; 8
     496:	81 bb       	out	0x11, r24	; 17
	PORTD &= ~(1<<DHT11_PIN);		/* set to low pin */
     498:	82 b3       	in	r24, 0x12	; 18
     49a:	87 7f       	andi	r24, 0xF7	; 247
     49c:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49e:	87 e8       	ldi	r24, 0x87	; 135
     4a0:	93 e1       	ldi	r25, 0x13	; 19
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	f1 f7       	brne	.-4      	; 0x4a2 <Request+0x10>
     4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <Request+0x16>
     4a8:	00 00       	nop
	_delay_ms(20);					/* wait for 20ms */
	PORTD |= (1<<DHT11_PIN);		/* set to high pin */
     4aa:	82 b3       	in	r24, 0x12	; 18
     4ac:	88 60       	ori	r24, 0x08	; 8
     4ae:	82 bb       	out	0x12, r24	; 18
     4b0:	08 95       	ret

000004b2 <Response>:
}

void Response()						/* receive response from DHT11 */
{
	DDRD &= ~(1<<DHT11_PIN);
     4b2:	81 b3       	in	r24, 0x11	; 17
     4b4:	87 7f       	andi	r24, 0xF7	; 247
     4b6:	81 bb       	out	0x11, r24	; 17
	while(PIND & (1<<DHT11_PIN));
     4b8:	83 99       	sbic	0x10, 3	; 16
     4ba:	fe cf       	rjmp	.-4      	; 0x4b8 <Response+0x6>
	while((PIND & (1<<DHT11_PIN))==0);
     4bc:	83 9b       	sbis	0x10, 3	; 16
     4be:	fe cf       	rjmp	.-4      	; 0x4bc <Response+0xa>
	while(PIND & (1<<DHT11_PIN));
     4c0:	83 99       	sbic	0x10, 3	; 16
     4c2:	fe cf       	rjmp	.-4      	; 0x4c0 <Response+0xe>
}
     4c4:	08 95       	ret

000004c6 <Receive_data>:

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	19 c0       	rjmp	.+50     	; 0x4fe <Receive_data+0x38>
	{
		while((PIND & (1<<DHT11_PIN)) == 0);	/* check received bit 0 or 1 */
     4cc:	83 9b       	sbis	0x10, 3	; 16
     4ce:	fe cf       	rjmp	.-4      	; 0x4cc <Receive_data+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4d0:	8a e0       	ldi	r24, 0x0A	; 10
     4d2:	8a 95       	dec	r24
     4d4:	f1 f7       	brne	.-4      	; 0x4d2 <Receive_data+0xc>
		_delay_us(30);
		if(PIND & (1<<DHT11_PIN))				/* if high pulse is greater than 30ms */
     4d6:	83 9b       	sbis	0x10, 3	; 16
     4d8:	09 c0       	rjmp	.+18     	; 0x4ec <Receive_data+0x26>
		c = (c<<1)|(0x01);						/* then its logic HIGH */
     4da:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__data_end>
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	88 0f       	add	r24, r24
     4e2:	99 1f       	adc	r25, r25
     4e4:	81 60       	ori	r24, 0x01	; 1
     4e6:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__data_end>
     4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <Receive_data+0x30>
		else									/* otherwise its logic LOW */
		c = (c<<1);
     4ec:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__data_end>
     4f0:	88 0f       	add	r24, r24
     4f2:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__data_end>
		while(PIND & (1<<DHT11_PIN));
     4f6:	83 99       	sbic	0x10, 3	; 16
     4f8:	fe cf       	rjmp	.-4      	; 0x4f6 <Receive_data+0x30>
	while(PIND & (1<<DHT11_PIN));
}

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4fa:	2f 5f       	subi	r18, 0xFF	; 255
     4fc:	3f 4f       	sbci	r19, 0xFF	; 255
     4fe:	28 30       	cpi	r18, 0x08	; 8
     500:	31 05       	cpc	r19, r1
     502:	24 f3       	brlt	.-56     	; 0x4cc <Receive_data+0x6>
		else									/* otherwise its logic LOW */
		c = (c<<1);
		while(PIND & (1<<DHT11_PIN));
	}
	return c;
     504:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__data_end>
     508:	08 95       	ret

0000050a <displayKey>:




int displayKey()
{
     50a:	4f 92       	push	r4
     50c:	5f 92       	push	r5
     50e:	6f 92       	push	r6
     510:	7f 92       	push	r7
     512:	8f 92       	push	r8
     514:	9f 92       	push	r9
     516:	af 92       	push	r10
     518:	bf 92       	push	r11
     51a:	cf 92       	push	r12
     51c:	df 92       	push	r13
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	cd b7       	in	r28, 0x3d	; 61
     52c:	de b7       	in	r29, 0x3e	; 62
     52e:	64 97       	sbiw	r28, 0x14	; 20
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     53a:	00 e0       	ldi	r16, 0x00	; 0
     53c:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     53e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     542:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <key>
		lcddata(key);
     546:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     54a:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <key>
     54e:	83 32       	cpi	r24, 0x23	; 35
     550:	c9 f0       	breq	.+50     	; 0x584 <displayKey+0x7a>
		tmpNum = charToInt(key);
     552:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     556:	f8 01       	movw	r30, r16
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	21 e0       	ldi	r18, 0x01	; 1
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	2c 0f       	add	r18, r28
     562:	3d 1f       	adc	r19, r29
     564:	e2 0f       	add	r30, r18
     566:	f3 1f       	adc	r31, r19
     568:	91 83       	std	Z+1, r25	; 0x01
     56a:	80 83       	st	Z, r24
		i++;
     56c:	0f 5f       	subi	r16, 0xFF	; 255
     56e:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     570:	3f e5       	ldi	r19, 0x5F	; 95
     572:	8a ee       	ldi	r24, 0xEA	; 234
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	31 50       	subi	r19, 0x01	; 1
     578:	80 40       	sbci	r24, 0x00	; 0
     57a:	90 40       	sbci	r25, 0x00	; 0
     57c:	e1 f7       	brne	.-8      	; 0x576 <displayKey+0x6c>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <displayKey+0x76>
     580:	00 00       	nop
     582:	dd cf       	rjmp	.-70     	; 0x53e <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     584:	58 01       	movw	r10, r16
     586:	21 e0       	ldi	r18, 0x01	; 1
     588:	a2 1a       	sub	r10, r18
     58a:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     58c:	e1 2c       	mov	r14, r1
     58e:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     590:	81 2c       	mov	r8, r1
     592:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     594:	3b c0       	rjmp	.+118    	; 0x60c <displayKey+0x102>
		num += data[j]*pow(10,k);
     596:	f7 01       	movw	r30, r14
     598:	ee 0f       	add	r30, r30
     59a:	ff 1f       	adc	r31, r31
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	8c 0f       	add	r24, r28
     5a2:	9d 1f       	adc	r25, r29
     5a4:	e8 0f       	add	r30, r24
     5a6:	f9 1f       	adc	r31, r25
     5a8:	c0 80       	ld	r12, Z
     5aa:	d1 80       	ldd	r13, Z+1	; 0x01
     5ac:	b5 01       	movw	r22, r10
     5ae:	0b 2c       	mov	r0, r11
     5b0:	00 0c       	add	r0, r0
     5b2:	88 0b       	sbc	r24, r24
     5b4:	99 0b       	sbc	r25, r25
     5b6:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__floatsisf>
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	80 e2       	ldi	r24, 0x20	; 32
     5c4:	91 e4       	ldi	r25, 0x41	; 65
     5c6:	0e 94 e7 06 	call	0xdce	; 0xdce <pow>
     5ca:	2b 01       	movw	r4, r22
     5cc:	3c 01       	movw	r6, r24
     5ce:	b6 01       	movw	r22, r12
     5d0:	dd 0c       	add	r13, r13
     5d2:	88 0b       	sbc	r24, r24
     5d4:	99 0b       	sbc	r25, r25
     5d6:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__floatsisf>
     5da:	a3 01       	movw	r20, r6
     5dc:	92 01       	movw	r18, r4
     5de:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__mulsf3>
     5e2:	2b 01       	movw	r4, r22
     5e4:	3c 01       	movw	r6, r24
     5e6:	b4 01       	movw	r22, r8
     5e8:	99 0c       	add	r9, r9
     5ea:	88 0b       	sbc	r24, r24
     5ec:	99 0b       	sbc	r25, r25
     5ee:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__floatsisf>
     5f2:	a3 01       	movw	r20, r6
     5f4:	92 01       	movw	r18, r4
     5f6:	0e 94 4a 05 	call	0xa94	; 0xa94 <__addsf3>
     5fa:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fixsfsi>
     5fe:	4b 01       	movw	r8, r22
		k--;
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	a9 1a       	sub	r10, r25
     604:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     606:	2f ef       	ldi	r18, 0xFF	; 255
     608:	e2 1a       	sub	r14, r18
     60a:	f2 0a       	sbc	r15, r18
     60c:	e0 16       	cp	r14, r16
     60e:	f1 06       	cpc	r15, r17
     610:	14 f2       	brlt	.-124    	; 0x596 <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     618:	c4 01       	movw	r24, r8
     61a:	64 96       	adiw	r28, 0x14	; 20
     61c:	0f b6       	in	r0, 0x3f	; 63
     61e:	f8 94       	cli
     620:	de bf       	out	0x3e, r29	; 62
     622:	0f be       	out	0x3f, r0	; 63
     624:	cd bf       	out	0x3d, r28	; 61
     626:	df 91       	pop	r29
     628:	cf 91       	pop	r28
     62a:	1f 91       	pop	r17
     62c:	0f 91       	pop	r16
     62e:	ff 90       	pop	r15
     630:	ef 90       	pop	r14
     632:	df 90       	pop	r13
     634:	cf 90       	pop	r12
     636:	bf 90       	pop	r11
     638:	af 90       	pop	r10
     63a:	9f 90       	pop	r9
     63c:	8f 90       	pop	r8
     63e:	7f 90       	pop	r7
     640:	6f 90       	pop	r6
     642:	5f 90       	pop	r5
     644:	4f 90       	pop	r4
     646:	08 95       	ret

00000648 <main>:



int main(void)

{
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	cd b7       	in	r28, 0x3d	; 61
     64e:	de b7       	in	r29, 0x3e	; 62
     650:	2e 97       	sbiw	r28, 0x0e	; 14
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     65c:	8f ef       	ldi	r24, 0xFF	; 255
     65e:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     660:	87 e0       	ldi	r24, 0x07	; 7
     662:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     664:	80 ef       	ldi	r24, 0xF0	; 240
     666:	81 bb       	out	0x11, r24	; 17

	char key;
	char numberString[4];

	lcdint();
     668:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     66c:	6e e0       	ldi	r22, 0x0E	; 14
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     676:	2f e7       	ldi	r18, 0x7F	; 127
     678:	89 ea       	ldi	r24, 0xA9	; 169
     67a:	93 e0       	ldi	r25, 0x03	; 3
     67c:	21 50       	subi	r18, 0x01	; 1
     67e:	80 40       	sbci	r24, 0x00	; 0
     680:	90 40       	sbci	r25, 0x00	; 0
     682:	e1 f7       	brne	.-8      	; 0x67c <main+0x34>
     684:	00 c0       	rjmp	.+0      	; 0x686 <main+0x3e>
     686:	00 00       	nop
	_delay_ms(1200);
	lcd_line_two();
     688:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("from ~GROUP 06~",16);
     68c:	60 e1       	ldi	r22, 0x10	; 16
     68e:	80 e1       	ldi	r24, 0x10	; 16
     690:	91 e0       	ldi	r25, 0x01	; 1
     692:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     696:	2f e3       	ldi	r18, 0x3F	; 63
     698:	8d e0       	ldi	r24, 0x0D	; 13
     69a:	93 e0       	ldi	r25, 0x03	; 3
     69c:	21 50       	subi	r18, 0x01	; 1
     69e:	80 40       	sbci	r24, 0x00	; 0
     6a0:	90 40       	sbci	r25, 0x00	; 0
     6a2:	e1 f7       	brne	.-8      	; 0x69c <main+0x54>
     6a4:	00 c0       	rjmp	.+0      	; 0x6a6 <main+0x5e>
     6a6:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clear();
     6a8:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
	lcd_line_one();
     6ac:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
	lcd_string("ENTER 1 TO",10);
     6b0:	6a e0       	ldi	r22, 0x0A	; 10
     6b2:	80 e2       	ldi	r24, 0x20	; 32
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     6ba:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("INSTRUCTIONS",12);
     6be:	6c e0       	ldi	r22, 0x0C	; 12
     6c0:	8b e2       	ldi	r24, 0x2B	; 43
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     6c8:	2f e7       	ldi	r18, 0x7F	; 127
     6ca:	89 ea       	ldi	r24, 0xA9	; 169
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	21 50       	subi	r18, 0x01	; 1
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	e1 f7       	brne	.-8      	; 0x6ce <main+0x86>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <main+0x90>
     6d8:	00 00       	nop

	
	while(1)
	{
		
		lcd_clear();
     6da:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     6de:	6f e0       	ldi	r22, 0x0F	; 15
     6e0:	88 e3       	ldi	r24, 0x38	; 56
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		key = scankey();
     6e8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
		char data[5];
		
		switch(key)
     6ec:	82 33       	cpi	r24, 0x32	; 50
     6ee:	99 f0       	breq	.+38     	; 0x716 <main+0xce>
     6f0:	18 f4       	brcc	.+6      	; 0x6f8 <main+0xb0>
     6f2:	81 33       	cpi	r24, 0x31	; 49
     6f4:	41 f0       	breq	.+16     	; 0x706 <main+0xbe>
     6f6:	f1 cf       	rjmp	.-30     	; 0x6da <main+0x92>
     6f8:	83 33       	cpi	r24, 0x33	; 51
     6fa:	09 f4       	brne	.+2      	; 0x6fe <main+0xb6>
     6fc:	4e c0       	rjmp	.+156    	; 0x79a <main+0x152>
     6fe:	84 33       	cpi	r24, 0x34	; 52
     700:	09 f4       	brne	.+2      	; 0x704 <main+0xbc>
     702:	ea c0       	rjmp	.+468    	; 0x8d8 <__EEPROM_REGION_LENGTH__+0xd8>
     704:	ea cf       	rjmp	.-44     	; 0x6da <main+0x92>
		{
			case '1':
				lcd_clear();
     706:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     70a:	6c e0       	ldi	r22, 0x0C	; 12
     70c:	8b e2       	ldi	r24, 0x2B	; 43
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				break;
     714:	e2 cf       	rjmp	.-60     	; 0x6da <main+0x92>
			case '2':
				lcd_clear();
     716:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();
     71a:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("ENTER PLANT",11);
     71e:	6b e0       	ldi	r22, 0x0B	; 11
     720:	87 e4       	ldi	r24, 0x47	; 71
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcd_line_two();
     728:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
				lcd_string("COUNT: ",7);
     72c:	67 e0       	ldi	r22, 0x07	; 7
     72e:	83 e5       	ldi	r24, 0x53	; 83
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				key = scankey();
     736:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
				if(key == '*') break;
     73a:	8a 32       	cpi	r24, 0x2A	; 42
     73c:	71 f2       	breq	.-100    	; 0x6da <main+0x92>
				int plantCount = displayKey();
     73e:	0e 94 85 02 	call	0x50a	; 0x50a <displayKey>
				
				char text[10];
				sprintf(text, "%d", plantCount);
     742:	9f 93       	push	r25
     744:	8f 93       	push	r24
     746:	8b e5       	ldi	r24, 0x5B	; 91
     748:	91 e0       	ldi	r25, 0x01	; 1
     74a:	9f 93       	push	r25
     74c:	8f 93       	push	r24
     74e:	8e 01       	movw	r16, r28
     750:	0b 5f       	subi	r16, 0xFB	; 251
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	1f 93       	push	r17
     756:	0f 93       	push	r16
     758:	0e 94 2d 09 	call	0x125a	; 0x125a <sprintf>
				
				lcdcmd(0x01);
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("PLANT COUNT IS",15);
     762:	6f e0       	ldi	r22, 0x0F	; 15
     764:	8e e5       	ldi	r24, 0x5E	; 94
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcdcmd(0xC0);
     76c:	80 ec       	ldi	r24, 0xC0	; 192
     76e:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string(text,10);
     772:	6a e0       	ldi	r22, 0x0A	; 10
     774:	c8 01       	movw	r24, r16
     776:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     77a:	2f e3       	ldi	r18, 0x3F	; 63
     77c:	8d e0       	ldi	r24, 0x0D	; 13
     77e:	93 e0       	ldi	r25, 0x03	; 3
     780:	21 50       	subi	r18, 0x01	; 1
     782:	80 40       	sbci	r24, 0x00	; 0
     784:	90 40       	sbci	r25, 0x00	; 0
     786:	e1 f7       	brne	.-8      	; 0x780 <main+0x138>
     788:	00 c0       	rjmp	.+0      	; 0x78a <main+0x142>
     78a:	00 00       	nop
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	a0 cf       	rjmp	.-192    	; 0x6da <main+0x92>
     79a:	87 ea       	ldi	r24, 0xA7	; 167
     79c:	91 e6       	ldi	r25, 0x61	; 97
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	f1 f7       	brne	.-4      	; 0x79e <main+0x156>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <main+0x15c>
     7a4:	00 00       	nop
					
					uint16_t r;
					
					_delay_ms(100);

					lcd_clear();
     7a6:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					
					
					HCSR04Init();
     7aa:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HCSR04Init>

					while(1)
					{	
						HCSR04Trigger();              
     7ae:	0e 94 6d 01 	call	0x2da	; 0x2da <HCSR04Trigger>
						r=GetPulseWidth();
     7b2:	0e 94 77 01 	call	0x2ee	; 0x2ee <GetPulseWidth>
						if(r==US_ERROR) 
     7b6:	6f 3f       	cpi	r22, 0xFF	; 255
     7b8:	2f ef       	ldi	r18, 0xFF	; 255
     7ba:	72 07       	cpc	r23, r18
     7bc:	89 f4       	brne	.+34     	; 0x7e0 <main+0x198>
						{
							lcd_clear();
     7be:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							lcd_string("E!",2);
     7c2:	62 e0       	ldi	r22, 0x02	; 2
     7c4:	8d e0       	ldi	r24, 0x0D	; 13
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     7cc:	8f e3       	ldi	r24, 0x3F	; 63
     7ce:	9d e0       	ldi	r25, 0x0D	; 13
     7d0:	23 e0       	ldi	r18, 0x03	; 3
     7d2:	81 50       	subi	r24, 0x01	; 1
     7d4:	90 40       	sbci	r25, 0x00	; 0
     7d6:	20 40       	sbci	r18, 0x00	; 0
     7d8:	e1 f7       	brne	.-8      	; 0x7d2 <main+0x18a>
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <main+0x194>
     7dc:	00 00       	nop
     7de:	e7 cf       	rjmp	.-50     	; 0x7ae <main+0x166>
							
						}
						else
						{
							
							distance=50-(r*0.034/2.0);	
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	0e 94 ec 05 	call	0xbd8	; 0xbd8 <__floatunsisf>
     7e8:	26 e9       	ldi	r18, 0x96	; 150
     7ea:	33 e4       	ldi	r19, 0x43	; 67
     7ec:	4b e0       	ldi	r20, 0x0B	; 11
     7ee:	5d e3       	ldi	r21, 0x3D	; 61
     7f0:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__mulsf3>
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	5f e3       	ldi	r21, 0x3F	; 63
     7fc:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__mulsf3>
     800:	9b 01       	movw	r18, r22
     802:	ac 01       	movw	r20, r24
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	88 e4       	ldi	r24, 0x48	; 72
     80a:	92 e4       	ldi	r25, 0x42	; 66
     80c:	0e 94 49 05 	call	0xa92	; 0xa92 <__subsf3>
     810:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__fixsfsi>
     814:	70 93 be 01 	sts	0x01BE, r23	; 0x8001be <distance+0x1>
     818:	60 93 bd 01 	sts	0x01BD, r22	; 0x8001bd <distance>
							
							
							
							if (distance != previous_distance)    
     81c:	20 91 bb 01 	lds	r18, 0x01BB	; 0x8001bb <previous_distance>
     820:	30 91 bc 01 	lds	r19, 0x01BC	; 0x8001bc <previous_distance+0x1>
     824:	26 17       	cp	r18, r22
     826:	37 07       	cpc	r19, r23
     828:	11 f0       	breq	.+4      	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
							{
								lcd_clear();
     82a:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							}
							
	
							
							lcd_line_one();
     82e:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
							lcd_string("WATER LV =",11);
     832:	6b e0       	ldi	r22, 0x0B	; 11
     834:	8d e6       	ldi	r24, 0x6D	; 109
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     83c:	4a e0       	ldi	r20, 0x0A	; 10
     83e:	be 01       	movw	r22, r28
     840:	6f 5f       	subi	r22, 0xFF	; 255
     842:	7f 4f       	sbci	r23, 0xFF	; 255
     844:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <distance>
     848:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <distance+0x1>
     84c:	0e 94 08 09 	call	0x1210	; 0x1210 <__itoa_ncheck>
							
							itoa(distance, numberString, 10);   
							lcd_string(numberString,3);
     850:	63 e0       	ldi	r22, 0x03	; 3
     852:	ce 01       	movw	r24, r28
     854:	01 96       	adiw	r24, 0x01	; 1
     856:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

							lcd_string("cm",2);
     85a:	62 e0       	ldi	r22, 0x02	; 2
     85c:	88 e7       	ldi	r24, 0x78	; 120
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
							
							
							previous_distance = distance;
     864:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <distance>
     868:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <distance+0x1>
     86c:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <previous_distance+0x1>
     870:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <previous_distance>
     874:	8b e4       	ldi	r24, 0x4B	; 75
     876:	9d e1       	ldi	r25, 0x1D	; 29
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <__EEPROM_REGION_LENGTH__+0x78>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <__EEPROM_REGION_LENGTH__+0x7e>
     87e:	00 00       	nop
							_delay_ms(30);
							
							if(distance<10)
     880:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <distance>
     884:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <distance+0x1>
     888:	0a 97       	sbiw	r24, 0x0a	; 10
     88a:	3c f4       	brge	.+14     	; 0x89a <__EEPROM_REGION_LENGTH__+0x9a>
							{
								lcd_line_two();
     88c:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("WATER LOW!!!",13);
     890:	6d e0       	ldi	r22, 0x0D	; 13
     892:	8b e7       	ldi	r24, 0x7B	; 123
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(1<<PINA0);
								
							}
							if(distance>=10)
     89a:	80 91 bd 01 	lds	r24, 0x01BD	; 0x8001bd <distance>
     89e:	90 91 be 01 	lds	r25, 0x01BE	; 0x8001be <distance+0x1>
     8a2:	0a 97       	sbiw	r24, 0x0a	; 10
     8a4:	3c f0       	brlt	.+14     	; 0x8b4 <__EEPROM_REGION_LENGTH__+0xb4>
							{
								lcd_line_two();
     8a6:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("ENOUGH WATER",12);
     8aa:	6c e0       	ldi	r22, 0x0C	; 12
     8ac:	88 e8       	ldi	r24, 0x88	; 136
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(0<<PINA0);
								
							}
							key = scankey();
     8b4:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
							if(key == '*') break;
     8b8:	8a 32       	cpi	r24, 0x2A	; 42
     8ba:	51 f0       	breq	.+20     	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
     8bc:	9f e7       	ldi	r25, 0x7F	; 127
     8be:	29 ea       	ldi	r18, 0xA9	; 169
     8c0:	83 e0       	ldi	r24, 0x03	; 3
     8c2:	91 50       	subi	r25, 0x01	; 1
     8c4:	20 40       	sbci	r18, 0x00	; 0
     8c6:	80 40       	sbci	r24, 0x00	; 0
     8c8:	e1 f7       	brne	.-8      	; 0x8c2 <__EEPROM_REGION_LENGTH__+0xc2>
     8ca:	00 c0       	rjmp	.+0      	; 0x8cc <__EEPROM_REGION_LENGTH__+0xcc>
     8cc:	00 00       	nop
     8ce:	6f cf       	rjmp	.-290    	; 0x7ae <main+0x166>
							_delay_ms(1200);
							
						}
					}
					
				if(key == '*') break;
     8d0:	8a 32       	cpi	r24, 0x2A	; 42
     8d2:	09 f0       	breq	.+2      	; 0x8d6 <__EEPROM_REGION_LENGTH__+0xd6>
     8d4:	62 cf       	rjmp	.-316    	; 0x79a <main+0x152>
     8d6:	01 cf       	rjmp	.-510    	; 0x6da <main+0x92>
				}
			break;		
			
			case '4':
				
				DDRE=0xff;
     8d8:	8f ef       	ldi	r24, 0xFF	; 255
     8da:	82 b9       	out	0x02, r24	; 2
				
				
	
				while(1)
				{
					lcd_clear();				/* clear LCD */
     8dc:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					lcd_line_one();		/* enter column and row position */
     8e0:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
					Request();				/* send start pulse */
     8e4:	0e 94 49 02 	call	0x492	; 0x492 <Request>
					Response();				/* receive response */
     8e8:	0e 94 59 02 	call	0x4b2	; 0x4b2 <Response>
					I_RH=Receive_data();	/* store first eight bit in I_RH */
     8ec:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     8f0:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <I_RH>
					D_RH=Receive_data();	/* store next eight bit in D_RH */
     8f4:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     8f8:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <D_RH>
					I_Temp=Receive_data();	/* store next eight bit in I_Temp */
     8fc:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     900:	80 93 c2 01 	sts	0x01C2, r24	; 0x8001c2 <I_Temp>
					D_Temp=Receive_data();	/* store next eight bit in D_Temp */
     904:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     908:	80 93 c4 01 	sts	0x01C4, r24	; 0x8001c4 <D_Temp>
					CheckSum=Receive_data();/* store next eight bit in CheckSum */
     90c:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     910:	80 93 c1 01 	sts	0x01C1, r24	; 0x8001c1 <CheckSum>
		
					if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
     914:	e0 91 c3 01 	lds	r30, 0x01C3	; 0x8001c3 <I_RH>
     918:	f0 e0       	ldi	r31, 0x00	; 0
     91a:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <D_RH>
     91e:	9f 01       	movw	r18, r30
     920:	29 0f       	add	r18, r25
     922:	31 1d       	adc	r19, r1
     924:	90 91 c2 01 	lds	r25, 0x01C2	; 0x8001c2 <I_Temp>
     928:	29 0f       	add	r18, r25
     92a:	31 1d       	adc	r19, r1
     92c:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <D_Temp>
     930:	29 0f       	add	r18, r25
     932:	31 1d       	adc	r19, r1
     934:	48 2f       	mov	r20, r24
     936:	50 e0       	ldi	r21, 0x00	; 0
     938:	24 17       	cp	r18, r20
     93a:	35 07       	cpc	r19, r21
     93c:	31 f0       	breq	.+12     	; 0x94a <__EEPROM_REGION_LENGTH__+0x14a>
					{
						//lcd_gotoxy(0,0);
						lcd_string("Error",5);
     93e:	65 e0       	ldi	r22, 0x05	; 5
     940:	85 e9       	ldi	r24, 0x95	; 149
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     948:	59 c0       	rjmp	.+178    	; 0x9fc <__EEPROM_REGION_LENGTH__+0x1fc>
     94a:	4a e0       	ldi	r20, 0x0A	; 10
     94c:	be 01       	movw	r22, r28
     94e:	6b 5f       	subi	r22, 0xFB	; 251
     950:	7f 4f       	sbci	r23, 0xFF	; 255
     952:	cf 01       	movw	r24, r30
     954:	0e 94 08 09 	call	0x1210	; 0x1210 <__itoa_ncheck>
		
					else
					{
						itoa(I_RH,data,10);
						//lcd_gotoxy(2,0);
						lcd_string("H=",2);
     958:	62 e0       	ldi	r22, 0x02	; 2
     95a:	8b e9       	ldi	r24, 0x9B	; 155
     95c:	91 e0       	ldi	r25, 0x01	; 1
     95e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(data,2);
     962:	62 e0       	ldi	r22, 0x02	; 2
     964:	ce 01       	movw	r24, r28
     966:	05 96       	adiw	r24, 0x05	; 5
     968:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     96c:	61 e0       	ldi	r22, 0x01	; 1
     96e:	8e e9       	ldi	r24, 0x9E	; 158
     970:	91 e0       	ldi	r25, 0x01	; 1
     972:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_RH,data,10);
     976:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <D_RH>
     97a:	4a e0       	ldi	r20, 0x0A	; 10
     97c:	be 01       	movw	r22, r28
     97e:	6b 5f       	subi	r22, 0xFB	; 251
     980:	7f 4f       	sbci	r23, 0xFF	; 255
     982:	90 e0       	ldi	r25, 0x00	; 0
     984:	0e 94 08 09 	call	0x1210	; 0x1210 <__itoa_ncheck>
						
						lcd_string(data,2);
     988:	62 e0       	ldi	r22, 0x02	; 2
     98a:	ce 01       	movw	r24, r28
     98c:	05 96       	adiw	r24, 0x05	; 5
     98e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string("%",1);
     992:	61 e0       	ldi	r22, 0x01	; 1
     994:	80 ea       	ldi	r24, 0xA0	; 160
     996:	91 e0       	ldi	r25, 0x01	; 1
     998:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

						
						itoa(I_Temp,data,10);
     99c:	80 91 c2 01 	lds	r24, 0x01C2	; 0x8001c2 <I_Temp>
     9a0:	4a e0       	ldi	r20, 0x0A	; 10
     9a2:	be 01       	movw	r22, r28
     9a4:	6b 5f       	subi	r22, 0xFB	; 251
     9a6:	7f 4f       	sbci	r23, 0xFF	; 255
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 08 09 	call	0x1210	; 0x1210 <__itoa_ncheck>
						//lcd_gotoxy(10,0);
						lcd_string("T=",2);
     9ae:	62 e0       	ldi	r22, 0x02	; 2
     9b0:	82 ea       	ldi	r24, 0xA2	; 162
     9b2:	91 e0       	ldi	r25, 0x01	; 1
     9b4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(data,2);
     9b8:	62 e0       	ldi	r22, 0x02	; 2
     9ba:	ce 01       	movw	r24, r28
     9bc:	05 96       	adiw	r24, 0x05	; 5
     9be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	8e e9       	ldi	r24, 0x9E	; 158
     9c6:	91 e0       	ldi	r25, 0x01	; 1
     9c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_Temp,data,10);
     9cc:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <D_Temp>
     9d0:	4a e0       	ldi	r20, 0x0A	; 10
     9d2:	be 01       	movw	r22, r28
     9d4:	6b 5f       	subi	r22, 0xFB	; 251
     9d6:	7f 4f       	sbci	r23, 0xFF	; 255
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 08 09 	call	0x1210	; 0x1210 <__itoa_ncheck>
						lcd_string(data,2);
     9de:	62 e0       	ldi	r22, 0x02	; 2
     9e0:	ce 01       	movw	r24, r28
     9e2:	05 96       	adiw	r24, 0x05	; 5
     9e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcddata(0xDF);
     9e8:	8f ed       	ldi	r24, 0xDF	; 223
     9ea:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
						lcd_string("C ",2);
     9ee:	62 e0       	ldi	r22, 0x02	; 2
     9f0:	85 ea       	ldi	r24, 0xA5	; 165
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						
						lcd_line_two();
     9f8:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
     9fc:	9f e9       	ldi	r25, 0x9F	; 159
     9fe:	26 e8       	ldi	r18, 0x86	; 134
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	91 50       	subi	r25, 0x01	; 1
     a04:	20 40       	sbci	r18, 0x00	; 0
     a06:	80 40       	sbci	r24, 0x00	; 0
     a08:	e1 f7       	brne	.-8      	; 0xa02 <__EEPROM_REGION_LENGTH__+0x202>
     a0a:	00 c0       	rjmp	.+0      	; 0xa0c <__EEPROM_REGION_LENGTH__+0x20c>
     a0c:	00 00       	nop
						lcd_print(" ");*/
					}
		
					_delay_ms(500);
		
					if ((I_Temp + D_Temp) <= 24)
     a0e:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <I_Temp>
     a12:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <D_Temp>
     a16:	90 e0       	ldi	r25, 0x00	; 0
     a18:	82 0f       	add	r24, r18
     a1a:	91 1d       	adc	r25, r1
     a1c:	49 97       	sbiw	r24, 0x19	; 25
     a1e:	3c f4       	brge	.+14     	; 0xa2e <__EEPROM_REGION_LENGTH__+0x22e>
					{
			
						lcd_line_one();
     a20:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
						lcd_string("H ON",4);
     a24:	64 e0       	ldi	r22, 0x04	; 4
     a26:	88 ea       	ldi	r24, 0xA8	; 168
     a28:	91 e0       	ldi	r25, 0x01	; 1
     a2a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						//DDRB |= (1<<0);
			
			
					}
					if ((I_Temp + D_Temp) >= 30)
     a2e:	20 91 c2 01 	lds	r18, 0x01C2	; 0x8001c2 <I_Temp>
     a32:	80 91 c4 01 	lds	r24, 0x01C4	; 0x8001c4 <D_Temp>
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	82 0f       	add	r24, r18
     a3a:	91 1d       	adc	r25, r1
     a3c:	4e 97       	sbiw	r24, 0x1e	; 30
     a3e:	2c f0       	brlt	.+10     	; 0xa4a <__EEPROM_REGION_LENGTH__+0x24a>
					{
			
			
						//lcd_gotoxy(5,1);
						lcd_string("FA ON",5);
     a40:	65 e0       	ldi	r22, 0x05	; 5
     a42:	8d ea       	ldi	r24, 0xAD	; 173
     a44:	91 e0       	ldi	r25, 0x01	; 1
     a46:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						//PORTB=(1<<PINB1);
						//PORTC=(1<<PINC0);
						//DDRB |= (1<<1);
			
					}
					if ((I_RH + D_RH ) <=75)
     a4a:	20 91 c3 01 	lds	r18, 0x01C3	; 0x8001c3 <I_RH>
     a4e:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <D_RH>
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	82 0f       	add	r24, r18
     a56:	91 1d       	adc	r25, r1
     a58:	8c 34       	cpi	r24, 0x4C	; 76
     a5a:	91 05       	cpc	r25, r1
     a5c:	2c f4       	brge	.+10     	; 0xa68 <__EEPROM_REGION_LENGTH__+0x268>
					{
			
						//lcd_gotoxy(11,1);
						lcd_string("FO ON",5);
     a5e:	65 e0       	ldi	r22, 0x05	; 5
     a60:	83 eb       	ldi	r24, 0xB3	; 179
     a62:	91 e0       	ldi	r25, 0x01	; 1
     a64:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     a68:	87 ea       	ldi	r24, 0xA7	; 167
     a6a:	91 e6       	ldi	r25, 0x61	; 97
     a6c:	01 97       	sbiw	r24, 0x01	; 1
     a6e:	f1 f7       	brne	.-4      	; 0xa6c <__EEPROM_REGION_LENGTH__+0x26c>
     a70:	00 c0       	rjmp	.+0      	; 0xa72 <__EEPROM_REGION_LENGTH__+0x272>
     a72:	00 00       	nop
						PORTE=(0<<PINE0);

			
					}*/
					_delay_ms(100);
					key = scankey();
     a74:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
					if(key == '*') break;
     a78:	8a 32       	cpi	r24, 0x2A	; 42
     a7a:	09 f4       	brne	.+2      	; 0xa7e <__EEPROM_REGION_LENGTH__+0x27e>
     a7c:	2e ce       	rjmp	.-932    	; 0x6da <main+0x92>
     a7e:	9f e7       	ldi	r25, 0x7F	; 127
     a80:	29 ea       	ldi	r18, 0xA9	; 169
     a82:	83 e0       	ldi	r24, 0x03	; 3
     a84:	91 50       	subi	r25, 0x01	; 1
     a86:	20 40       	sbci	r18, 0x00	; 0
     a88:	80 40       	sbci	r24, 0x00	; 0
     a8a:	e1 f7       	brne	.-8      	; 0xa84 <__EEPROM_REGION_LENGTH__+0x284>
     a8c:	00 c0       	rjmp	.+0      	; 0xa8e <__EEPROM_REGION_LENGTH__+0x28e>
     a8e:	00 00       	nop
     a90:	25 cf       	rjmp	.-438    	; 0x8dc <__EEPROM_REGION_LENGTH__+0xdc>

00000a92 <__subsf3>:
     a92:	50 58       	subi	r21, 0x80	; 128

00000a94 <__addsf3>:
     a94:	bb 27       	eor	r27, r27
     a96:	aa 27       	eor	r26, r26
     a98:	0e 94 61 05 	call	0xac2	; 0xac2 <__addsf3x>
     a9c:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__fp_round>
     aa0:	0e 94 32 06 	call	0xc64	; 0xc64 <__fp_pscA>
     aa4:	38 f0       	brcs	.+14     	; 0xab4 <__addsf3+0x20>
     aa6:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscB>
     aaa:	20 f0       	brcs	.+8      	; 0xab4 <__addsf3+0x20>
     aac:	39 f4       	brne	.+14     	; 0xabc <__addsf3+0x28>
     aae:	9f 3f       	cpi	r25, 0xFF	; 255
     ab0:	19 f4       	brne	.+6      	; 0xab8 <__addsf3+0x24>
     ab2:	26 f4       	brtc	.+8      	; 0xabc <__addsf3+0x28>
     ab4:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>
     ab8:	0e f4       	brtc	.+2      	; 0xabc <__addsf3+0x28>
     aba:	e0 95       	com	r30
     abc:	e7 fb       	bst	r30, 7
     abe:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>

00000ac2 <__addsf3x>:
     ac2:	e9 2f       	mov	r30, r25
     ac4:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_split3>
     ac8:	58 f3       	brcs	.-42     	; 0xaa0 <__addsf3+0xc>
     aca:	ba 17       	cp	r27, r26
     acc:	62 07       	cpc	r22, r18
     ace:	73 07       	cpc	r23, r19
     ad0:	84 07       	cpc	r24, r20
     ad2:	95 07       	cpc	r25, r21
     ad4:	20 f0       	brcs	.+8      	; 0xade <__addsf3x+0x1c>
     ad6:	79 f4       	brne	.+30     	; 0xaf6 <__addsf3x+0x34>
     ad8:	a6 f5       	brtc	.+104    	; 0xb42 <__addsf3x+0x80>
     ada:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__fp_zero>
     ade:	0e f4       	brtc	.+2      	; 0xae2 <__addsf3x+0x20>
     ae0:	e0 95       	com	r30
     ae2:	0b 2e       	mov	r0, r27
     ae4:	ba 2f       	mov	r27, r26
     ae6:	a0 2d       	mov	r26, r0
     ae8:	0b 01       	movw	r0, r22
     aea:	b9 01       	movw	r22, r18
     aec:	90 01       	movw	r18, r0
     aee:	0c 01       	movw	r0, r24
     af0:	ca 01       	movw	r24, r20
     af2:	a0 01       	movw	r20, r0
     af4:	11 24       	eor	r1, r1
     af6:	ff 27       	eor	r31, r31
     af8:	59 1b       	sub	r21, r25
     afa:	99 f0       	breq	.+38     	; 0xb22 <__addsf3x+0x60>
     afc:	59 3f       	cpi	r21, 0xF9	; 249
     afe:	50 f4       	brcc	.+20     	; 0xb14 <__addsf3x+0x52>
     b00:	50 3e       	cpi	r21, 0xE0	; 224
     b02:	68 f1       	brcs	.+90     	; 0xb5e <__addsf3x+0x9c>
     b04:	1a 16       	cp	r1, r26
     b06:	f0 40       	sbci	r31, 0x00	; 0
     b08:	a2 2f       	mov	r26, r18
     b0a:	23 2f       	mov	r18, r19
     b0c:	34 2f       	mov	r19, r20
     b0e:	44 27       	eor	r20, r20
     b10:	58 5f       	subi	r21, 0xF8	; 248
     b12:	f3 cf       	rjmp	.-26     	; 0xafa <__addsf3x+0x38>
     b14:	46 95       	lsr	r20
     b16:	37 95       	ror	r19
     b18:	27 95       	ror	r18
     b1a:	a7 95       	ror	r26
     b1c:	f0 40       	sbci	r31, 0x00	; 0
     b1e:	53 95       	inc	r21
     b20:	c9 f7       	brne	.-14     	; 0xb14 <__addsf3x+0x52>
     b22:	7e f4       	brtc	.+30     	; 0xb42 <__addsf3x+0x80>
     b24:	1f 16       	cp	r1, r31
     b26:	ba 0b       	sbc	r27, r26
     b28:	62 0b       	sbc	r22, r18
     b2a:	73 0b       	sbc	r23, r19
     b2c:	84 0b       	sbc	r24, r20
     b2e:	ba f0       	brmi	.+46     	; 0xb5e <__addsf3x+0x9c>
     b30:	91 50       	subi	r25, 0x01	; 1
     b32:	a1 f0       	breq	.+40     	; 0xb5c <__addsf3x+0x9a>
     b34:	ff 0f       	add	r31, r31
     b36:	bb 1f       	adc	r27, r27
     b38:	66 1f       	adc	r22, r22
     b3a:	77 1f       	adc	r23, r23
     b3c:	88 1f       	adc	r24, r24
     b3e:	c2 f7       	brpl	.-16     	; 0xb30 <__addsf3x+0x6e>
     b40:	0e c0       	rjmp	.+28     	; 0xb5e <__addsf3x+0x9c>
     b42:	ba 0f       	add	r27, r26
     b44:	62 1f       	adc	r22, r18
     b46:	73 1f       	adc	r23, r19
     b48:	84 1f       	adc	r24, r20
     b4a:	48 f4       	brcc	.+18     	; 0xb5e <__addsf3x+0x9c>
     b4c:	87 95       	ror	r24
     b4e:	77 95       	ror	r23
     b50:	67 95       	ror	r22
     b52:	b7 95       	ror	r27
     b54:	f7 95       	ror	r31
     b56:	9e 3f       	cpi	r25, 0xFE	; 254
     b58:	08 f0       	brcs	.+2      	; 0xb5c <__addsf3x+0x9a>
     b5a:	b0 cf       	rjmp	.-160    	; 0xabc <__addsf3+0x28>
     b5c:	93 95       	inc	r25
     b5e:	88 0f       	add	r24, r24
     b60:	08 f0       	brcs	.+2      	; 0xb64 <__addsf3x+0xa2>
     b62:	99 27       	eor	r25, r25
     b64:	ee 0f       	add	r30, r30
     b66:	97 95       	ror	r25
     b68:	87 95       	ror	r24
     b6a:	08 95       	ret

00000b6c <__fixsfsi>:
     b6c:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__fixunssfsi>
     b70:	68 94       	set
     b72:	b1 11       	cpse	r27, r1
     b74:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>
     b78:	08 95       	ret

00000b7a <__fixunssfsi>:
     b7a:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_splitA>
     b7e:	88 f0       	brcs	.+34     	; 0xba2 <__fixunssfsi+0x28>
     b80:	9f 57       	subi	r25, 0x7F	; 127
     b82:	98 f0       	brcs	.+38     	; 0xbaa <__fixunssfsi+0x30>
     b84:	b9 2f       	mov	r27, r25
     b86:	99 27       	eor	r25, r25
     b88:	b7 51       	subi	r27, 0x17	; 23
     b8a:	b0 f0       	brcs	.+44     	; 0xbb8 <__fixunssfsi+0x3e>
     b8c:	e1 f0       	breq	.+56     	; 0xbc6 <__fixunssfsi+0x4c>
     b8e:	66 0f       	add	r22, r22
     b90:	77 1f       	adc	r23, r23
     b92:	88 1f       	adc	r24, r24
     b94:	99 1f       	adc	r25, r25
     b96:	1a f0       	brmi	.+6      	; 0xb9e <__fixunssfsi+0x24>
     b98:	ba 95       	dec	r27
     b9a:	c9 f7       	brne	.-14     	; 0xb8e <__fixunssfsi+0x14>
     b9c:	14 c0       	rjmp	.+40     	; 0xbc6 <__fixunssfsi+0x4c>
     b9e:	b1 30       	cpi	r27, 0x01	; 1
     ba0:	91 f0       	breq	.+36     	; 0xbc6 <__fixunssfsi+0x4c>
     ba2:	0e 94 73 06 	call	0xce6	; 0xce6 <__fp_zero>
     ba6:	b1 e0       	ldi	r27, 0x01	; 1
     ba8:	08 95       	ret
     baa:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__fp_zero>
     bae:	67 2f       	mov	r22, r23
     bb0:	78 2f       	mov	r23, r24
     bb2:	88 27       	eor	r24, r24
     bb4:	b8 5f       	subi	r27, 0xF8	; 248
     bb6:	39 f0       	breq	.+14     	; 0xbc6 <__fixunssfsi+0x4c>
     bb8:	b9 3f       	cpi	r27, 0xF9	; 249
     bba:	cc f3       	brlt	.-14     	; 0xbae <__fixunssfsi+0x34>
     bbc:	86 95       	lsr	r24
     bbe:	77 95       	ror	r23
     bc0:	67 95       	ror	r22
     bc2:	b3 95       	inc	r27
     bc4:	d9 f7       	brne	.-10     	; 0xbbc <__fixunssfsi+0x42>
     bc6:	3e f4       	brtc	.+14     	; 0xbd6 <__fixunssfsi+0x5c>
     bc8:	90 95       	com	r25
     bca:	80 95       	com	r24
     bcc:	70 95       	com	r23
     bce:	61 95       	neg	r22
     bd0:	7f 4f       	sbci	r23, 0xFF	; 255
     bd2:	8f 4f       	sbci	r24, 0xFF	; 255
     bd4:	9f 4f       	sbci	r25, 0xFF	; 255
     bd6:	08 95       	ret

00000bd8 <__floatunsisf>:
     bd8:	e8 94       	clt
     bda:	09 c0       	rjmp	.+18     	; 0xbee <__floatsisf+0x12>

00000bdc <__floatsisf>:
     bdc:	97 fb       	bst	r25, 7
     bde:	3e f4       	brtc	.+14     	; 0xbee <__floatsisf+0x12>
     be0:	90 95       	com	r25
     be2:	80 95       	com	r24
     be4:	70 95       	com	r23
     be6:	61 95       	neg	r22
     be8:	7f 4f       	sbci	r23, 0xFF	; 255
     bea:	8f 4f       	sbci	r24, 0xFF	; 255
     bec:	9f 4f       	sbci	r25, 0xFF	; 255
     bee:	99 23       	and	r25, r25
     bf0:	a9 f0       	breq	.+42     	; 0xc1c <__floatsisf+0x40>
     bf2:	f9 2f       	mov	r31, r25
     bf4:	96 e9       	ldi	r25, 0x96	; 150
     bf6:	bb 27       	eor	r27, r27
     bf8:	93 95       	inc	r25
     bfa:	f6 95       	lsr	r31
     bfc:	87 95       	ror	r24
     bfe:	77 95       	ror	r23
     c00:	67 95       	ror	r22
     c02:	b7 95       	ror	r27
     c04:	f1 11       	cpse	r31, r1
     c06:	f8 cf       	rjmp	.-16     	; 0xbf8 <__floatsisf+0x1c>
     c08:	fa f4       	brpl	.+62     	; 0xc48 <__floatsisf+0x6c>
     c0a:	bb 0f       	add	r27, r27
     c0c:	11 f4       	brne	.+4      	; 0xc12 <__floatsisf+0x36>
     c0e:	60 ff       	sbrs	r22, 0
     c10:	1b c0       	rjmp	.+54     	; 0xc48 <__floatsisf+0x6c>
     c12:	6f 5f       	subi	r22, 0xFF	; 255
     c14:	7f 4f       	sbci	r23, 0xFF	; 255
     c16:	8f 4f       	sbci	r24, 0xFF	; 255
     c18:	9f 4f       	sbci	r25, 0xFF	; 255
     c1a:	16 c0       	rjmp	.+44     	; 0xc48 <__floatsisf+0x6c>
     c1c:	88 23       	and	r24, r24
     c1e:	11 f0       	breq	.+4      	; 0xc24 <__floatsisf+0x48>
     c20:	96 e9       	ldi	r25, 0x96	; 150
     c22:	11 c0       	rjmp	.+34     	; 0xc46 <__floatsisf+0x6a>
     c24:	77 23       	and	r23, r23
     c26:	21 f0       	breq	.+8      	; 0xc30 <__floatsisf+0x54>
     c28:	9e e8       	ldi	r25, 0x8E	; 142
     c2a:	87 2f       	mov	r24, r23
     c2c:	76 2f       	mov	r23, r22
     c2e:	05 c0       	rjmp	.+10     	; 0xc3a <__floatsisf+0x5e>
     c30:	66 23       	and	r22, r22
     c32:	71 f0       	breq	.+28     	; 0xc50 <__floatsisf+0x74>
     c34:	96 e8       	ldi	r25, 0x86	; 134
     c36:	86 2f       	mov	r24, r22
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	2a f0       	brmi	.+10     	; 0xc48 <__floatsisf+0x6c>
     c3e:	9a 95       	dec	r25
     c40:	66 0f       	add	r22, r22
     c42:	77 1f       	adc	r23, r23
     c44:	88 1f       	adc	r24, r24
     c46:	da f7       	brpl	.-10     	; 0xc3e <__floatsisf+0x62>
     c48:	88 0f       	add	r24, r24
     c4a:	96 95       	lsr	r25
     c4c:	87 95       	ror	r24
     c4e:	97 f9       	bld	r25, 7
     c50:	08 95       	ret

00000c52 <__fp_inf>:
     c52:	97 f9       	bld	r25, 7
     c54:	9f 67       	ori	r25, 0x7F	; 127
     c56:	80 e8       	ldi	r24, 0x80	; 128
     c58:	70 e0       	ldi	r23, 0x00	; 0
     c5a:	60 e0       	ldi	r22, 0x00	; 0
     c5c:	08 95       	ret

00000c5e <__fp_nan>:
     c5e:	9f ef       	ldi	r25, 0xFF	; 255
     c60:	80 ec       	ldi	r24, 0xC0	; 192
     c62:	08 95       	ret

00000c64 <__fp_pscA>:
     c64:	00 24       	eor	r0, r0
     c66:	0a 94       	dec	r0
     c68:	16 16       	cp	r1, r22
     c6a:	17 06       	cpc	r1, r23
     c6c:	18 06       	cpc	r1, r24
     c6e:	09 06       	cpc	r0, r25
     c70:	08 95       	ret

00000c72 <__fp_pscB>:
     c72:	00 24       	eor	r0, r0
     c74:	0a 94       	dec	r0
     c76:	12 16       	cp	r1, r18
     c78:	13 06       	cpc	r1, r19
     c7a:	14 06       	cpc	r1, r20
     c7c:	05 06       	cpc	r0, r21
     c7e:	08 95       	ret

00000c80 <__fp_round>:
     c80:	09 2e       	mov	r0, r25
     c82:	03 94       	inc	r0
     c84:	00 0c       	add	r0, r0
     c86:	11 f4       	brne	.+4      	; 0xc8c <__fp_round+0xc>
     c88:	88 23       	and	r24, r24
     c8a:	52 f0       	brmi	.+20     	; 0xca0 <__fp_round+0x20>
     c8c:	bb 0f       	add	r27, r27
     c8e:	40 f4       	brcc	.+16     	; 0xca0 <__fp_round+0x20>
     c90:	bf 2b       	or	r27, r31
     c92:	11 f4       	brne	.+4      	; 0xc98 <__fp_round+0x18>
     c94:	60 ff       	sbrs	r22, 0
     c96:	04 c0       	rjmp	.+8      	; 0xca0 <__fp_round+0x20>
     c98:	6f 5f       	subi	r22, 0xFF	; 255
     c9a:	7f 4f       	sbci	r23, 0xFF	; 255
     c9c:	8f 4f       	sbci	r24, 0xFF	; 255
     c9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ca0:	08 95       	ret

00000ca2 <__fp_split3>:
     ca2:	57 fd       	sbrc	r21, 7
     ca4:	90 58       	subi	r25, 0x80	; 128
     ca6:	44 0f       	add	r20, r20
     ca8:	55 1f       	adc	r21, r21
     caa:	59 f0       	breq	.+22     	; 0xcc2 <__fp_splitA+0x10>
     cac:	5f 3f       	cpi	r21, 0xFF	; 255
     cae:	71 f0       	breq	.+28     	; 0xccc <__fp_splitA+0x1a>
     cb0:	47 95       	ror	r20

00000cb2 <__fp_splitA>:
     cb2:	88 0f       	add	r24, r24
     cb4:	97 fb       	bst	r25, 7
     cb6:	99 1f       	adc	r25, r25
     cb8:	61 f0       	breq	.+24     	; 0xcd2 <__fp_splitA+0x20>
     cba:	9f 3f       	cpi	r25, 0xFF	; 255
     cbc:	79 f0       	breq	.+30     	; 0xcdc <__fp_splitA+0x2a>
     cbe:	87 95       	ror	r24
     cc0:	08 95       	ret
     cc2:	12 16       	cp	r1, r18
     cc4:	13 06       	cpc	r1, r19
     cc6:	14 06       	cpc	r1, r20
     cc8:	55 1f       	adc	r21, r21
     cca:	f2 cf       	rjmp	.-28     	; 0xcb0 <__fp_split3+0xe>
     ccc:	46 95       	lsr	r20
     cce:	f1 df       	rcall	.-30     	; 0xcb2 <__fp_splitA>
     cd0:	08 c0       	rjmp	.+16     	; 0xce2 <__fp_splitA+0x30>
     cd2:	16 16       	cp	r1, r22
     cd4:	17 06       	cpc	r1, r23
     cd6:	18 06       	cpc	r1, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	f1 cf       	rjmp	.-30     	; 0xcbe <__fp_splitA+0xc>
     cdc:	86 95       	lsr	r24
     cde:	71 05       	cpc	r23, r1
     ce0:	61 05       	cpc	r22, r1
     ce2:	08 94       	sec
     ce4:	08 95       	ret

00000ce6 <__fp_zero>:
     ce6:	e8 94       	clt

00000ce8 <__fp_szero>:
     ce8:	bb 27       	eor	r27, r27
     cea:	66 27       	eor	r22, r22
     cec:	77 27       	eor	r23, r23
     cee:	cb 01       	movw	r24, r22
     cf0:	97 f9       	bld	r25, 7
     cf2:	08 95       	ret

00000cf4 <__mulsf3>:
     cf4:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3x>
     cf8:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__fp_round>
     cfc:	0e 94 32 06 	call	0xc64	; 0xc64 <__fp_pscA>
     d00:	38 f0       	brcs	.+14     	; 0xd10 <__mulsf3+0x1c>
     d02:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscB>
     d06:	20 f0       	brcs	.+8      	; 0xd10 <__mulsf3+0x1c>
     d08:	95 23       	and	r25, r21
     d0a:	11 f0       	breq	.+4      	; 0xd10 <__mulsf3+0x1c>
     d0c:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
     d10:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>
     d14:	11 24       	eor	r1, r1
     d16:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>

00000d1a <__mulsf3x>:
     d1a:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_split3>
     d1e:	70 f3       	brcs	.-36     	; 0xcfc <__mulsf3+0x8>

00000d20 <__mulsf3_pse>:
     d20:	95 9f       	mul	r25, r21
     d22:	c1 f3       	breq	.-16     	; 0xd14 <__mulsf3+0x20>
     d24:	95 0f       	add	r25, r21
     d26:	50 e0       	ldi	r21, 0x00	; 0
     d28:	55 1f       	adc	r21, r21
     d2a:	62 9f       	mul	r22, r18
     d2c:	f0 01       	movw	r30, r0
     d2e:	72 9f       	mul	r23, r18
     d30:	bb 27       	eor	r27, r27
     d32:	f0 0d       	add	r31, r0
     d34:	b1 1d       	adc	r27, r1
     d36:	63 9f       	mul	r22, r19
     d38:	aa 27       	eor	r26, r26
     d3a:	f0 0d       	add	r31, r0
     d3c:	b1 1d       	adc	r27, r1
     d3e:	aa 1f       	adc	r26, r26
     d40:	64 9f       	mul	r22, r20
     d42:	66 27       	eor	r22, r22
     d44:	b0 0d       	add	r27, r0
     d46:	a1 1d       	adc	r26, r1
     d48:	66 1f       	adc	r22, r22
     d4a:	82 9f       	mul	r24, r18
     d4c:	22 27       	eor	r18, r18
     d4e:	b0 0d       	add	r27, r0
     d50:	a1 1d       	adc	r26, r1
     d52:	62 1f       	adc	r22, r18
     d54:	73 9f       	mul	r23, r19
     d56:	b0 0d       	add	r27, r0
     d58:	a1 1d       	adc	r26, r1
     d5a:	62 1f       	adc	r22, r18
     d5c:	83 9f       	mul	r24, r19
     d5e:	a0 0d       	add	r26, r0
     d60:	61 1d       	adc	r22, r1
     d62:	22 1f       	adc	r18, r18
     d64:	74 9f       	mul	r23, r20
     d66:	33 27       	eor	r19, r19
     d68:	a0 0d       	add	r26, r0
     d6a:	61 1d       	adc	r22, r1
     d6c:	23 1f       	adc	r18, r19
     d6e:	84 9f       	mul	r24, r20
     d70:	60 0d       	add	r22, r0
     d72:	21 1d       	adc	r18, r1
     d74:	82 2f       	mov	r24, r18
     d76:	76 2f       	mov	r23, r22
     d78:	6a 2f       	mov	r22, r26
     d7a:	11 24       	eor	r1, r1
     d7c:	9f 57       	subi	r25, 0x7F	; 127
     d7e:	50 40       	sbci	r21, 0x00	; 0
     d80:	9a f0       	brmi	.+38     	; 0xda8 <__mulsf3_pse+0x88>
     d82:	f1 f0       	breq	.+60     	; 0xdc0 <__mulsf3_pse+0xa0>
     d84:	88 23       	and	r24, r24
     d86:	4a f0       	brmi	.+18     	; 0xd9a <__mulsf3_pse+0x7a>
     d88:	ee 0f       	add	r30, r30
     d8a:	ff 1f       	adc	r31, r31
     d8c:	bb 1f       	adc	r27, r27
     d8e:	66 1f       	adc	r22, r22
     d90:	77 1f       	adc	r23, r23
     d92:	88 1f       	adc	r24, r24
     d94:	91 50       	subi	r25, 0x01	; 1
     d96:	50 40       	sbci	r21, 0x00	; 0
     d98:	a9 f7       	brne	.-22     	; 0xd84 <__mulsf3_pse+0x64>
     d9a:	9e 3f       	cpi	r25, 0xFE	; 254
     d9c:	51 05       	cpc	r21, r1
     d9e:	80 f0       	brcs	.+32     	; 0xdc0 <__mulsf3_pse+0xa0>
     da0:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
     da4:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>
     da8:	5f 3f       	cpi	r21, 0xFF	; 255
     daa:	e4 f3       	brlt	.-8      	; 0xda4 <__mulsf3_pse+0x84>
     dac:	98 3e       	cpi	r25, 0xE8	; 232
     dae:	d4 f3       	brlt	.-12     	; 0xda4 <__mulsf3_pse+0x84>
     db0:	86 95       	lsr	r24
     db2:	77 95       	ror	r23
     db4:	67 95       	ror	r22
     db6:	b7 95       	ror	r27
     db8:	f7 95       	ror	r31
     dba:	e7 95       	ror	r30
     dbc:	9f 5f       	subi	r25, 0xFF	; 255
     dbe:	c1 f7       	brne	.-16     	; 0xdb0 <__mulsf3_pse+0x90>
     dc0:	fe 2b       	or	r31, r30
     dc2:	88 0f       	add	r24, r24
     dc4:	91 1d       	adc	r25, r1
     dc6:	96 95       	lsr	r25
     dc8:	87 95       	ror	r24
     dca:	97 f9       	bld	r25, 7
     dcc:	08 95       	ret

00000dce <pow>:
     dce:	fa 01       	movw	r30, r20
     dd0:	ee 0f       	add	r30, r30
     dd2:	ff 1f       	adc	r31, r31
     dd4:	30 96       	adiw	r30, 0x00	; 0
     dd6:	21 05       	cpc	r18, r1
     dd8:	31 05       	cpc	r19, r1
     dda:	a1 f1       	breq	.+104    	; 0xe44 <pow+0x76>
     ddc:	61 15       	cp	r22, r1
     dde:	71 05       	cpc	r23, r1
     de0:	61 f4       	brne	.+24     	; 0xdfa <pow+0x2c>
     de2:	80 38       	cpi	r24, 0x80	; 128
     de4:	bf e3       	ldi	r27, 0x3F	; 63
     de6:	9b 07       	cpc	r25, r27
     de8:	49 f1       	breq	.+82     	; 0xe3c <pow+0x6e>
     dea:	68 94       	set
     dec:	90 38       	cpi	r25, 0x80	; 128
     dee:	81 05       	cpc	r24, r1
     df0:	61 f0       	breq	.+24     	; 0xe0a <pow+0x3c>
     df2:	80 38       	cpi	r24, 0x80	; 128
     df4:	bf ef       	ldi	r27, 0xFF	; 255
     df6:	9b 07       	cpc	r25, r27
     df8:	41 f0       	breq	.+16     	; 0xe0a <pow+0x3c>
     dfa:	99 23       	and	r25, r25
     dfc:	4a f5       	brpl	.+82     	; 0xe50 <pow+0x82>
     dfe:	ff 3f       	cpi	r31, 0xFF	; 255
     e00:	e1 05       	cpc	r30, r1
     e02:	31 05       	cpc	r19, r1
     e04:	21 05       	cpc	r18, r1
     e06:	19 f1       	breq	.+70     	; 0xe4e <pow+0x80>
     e08:	e8 94       	clt
     e0a:	08 94       	sec
     e0c:	e7 95       	ror	r30
     e0e:	d9 01       	movw	r26, r18
     e10:	aa 23       	and	r26, r26
     e12:	29 f4       	brne	.+10     	; 0xe1e <pow+0x50>
     e14:	ab 2f       	mov	r26, r27
     e16:	be 2f       	mov	r27, r30
     e18:	f8 5f       	subi	r31, 0xF8	; 248
     e1a:	d0 f3       	brcs	.-12     	; 0xe10 <pow+0x42>
     e1c:	10 c0       	rjmp	.+32     	; 0xe3e <pow+0x70>
     e1e:	ff 5f       	subi	r31, 0xFF	; 255
     e20:	70 f4       	brcc	.+28     	; 0xe3e <pow+0x70>
     e22:	a6 95       	lsr	r26
     e24:	e0 f7       	brcc	.-8      	; 0xe1e <pow+0x50>
     e26:	f7 39       	cpi	r31, 0x97	; 151
     e28:	50 f0       	brcs	.+20     	; 0xe3e <pow+0x70>
     e2a:	19 f0       	breq	.+6      	; 0xe32 <pow+0x64>
     e2c:	ff 3a       	cpi	r31, 0xAF	; 175
     e2e:	38 f4       	brcc	.+14     	; 0xe3e <pow+0x70>
     e30:	9f 77       	andi	r25, 0x7F	; 127
     e32:	9f 93       	push	r25
     e34:	0d d0       	rcall	.+26     	; 0xe50 <pow+0x82>
     e36:	0f 90       	pop	r0
     e38:	07 fc       	sbrc	r0, 7
     e3a:	90 58       	subi	r25, 0x80	; 128
     e3c:	08 95       	ret
     e3e:	46 f0       	brts	.+16     	; 0xe50 <pow+0x82>
     e40:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>
     e44:	60 e0       	ldi	r22, 0x00	; 0
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	80 e8       	ldi	r24, 0x80	; 128
     e4a:	9f e3       	ldi	r25, 0x3F	; 63
     e4c:	08 95       	ret
     e4e:	4f e7       	ldi	r20, 0x7F	; 127
     e50:	9f 77       	andi	r25, 0x7F	; 127
     e52:	5f 93       	push	r21
     e54:	4f 93       	push	r20
     e56:	3f 93       	push	r19
     e58:	2f 93       	push	r18
     e5a:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <log>
     e5e:	2f 91       	pop	r18
     e60:	3f 91       	pop	r19
     e62:	4f 91       	pop	r20
     e64:	5f 91       	pop	r21
     e66:	0e 94 7a 06 	call	0xcf4	; 0xcf4 <__mulsf3>
     e6a:	0c 94 3f 07 	jmp	0xe7e	; 0xe7e <exp>
     e6e:	29 f4       	brne	.+10     	; 0xe7a <pow+0xac>
     e70:	16 f0       	brts	.+4      	; 0xe76 <pow+0xa8>
     e72:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
     e76:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__fp_zero>
     e7a:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>

00000e7e <exp>:
     e7e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_splitA>
     e82:	a8 f3       	brcs	.-22     	; 0xe6e <pow+0xa0>
     e84:	96 38       	cpi	r25, 0x86	; 134
     e86:	a0 f7       	brcc	.-24     	; 0xe70 <pow+0xa2>
     e88:	07 f8       	bld	r0, 7
     e8a:	0f 92       	push	r0
     e8c:	e8 94       	clt
     e8e:	2b e3       	ldi	r18, 0x3B	; 59
     e90:	3a ea       	ldi	r19, 0xAA	; 170
     e92:	48 eb       	ldi	r20, 0xB8	; 184
     e94:	5f e7       	ldi	r21, 0x7F	; 127
     e96:	0e 94 90 06 	call	0xd20	; 0xd20 <__mulsf3_pse>
     e9a:	0f 92       	push	r0
     e9c:	0f 92       	push	r0
     e9e:	0f 92       	push	r0
     ea0:	4d b7       	in	r20, 0x3d	; 61
     ea2:	5e b7       	in	r21, 0x3e	; 62
     ea4:	0f 92       	push	r0
     ea6:	0e 94 2a 08 	call	0x1054	; 0x1054 <modf>
     eaa:	ec e8       	ldi	r30, 0x8C	; 140
     eac:	f0 e0       	ldi	r31, 0x00	; 0
     eae:	0e 94 71 07 	call	0xee2	; 0xee2 <__fp_powser>
     eb2:	4f 91       	pop	r20
     eb4:	5f 91       	pop	r21
     eb6:	ef 91       	pop	r30
     eb8:	ff 91       	pop	r31
     eba:	e5 95       	asr	r30
     ebc:	ee 1f       	adc	r30, r30
     ebe:	ff 1f       	adc	r31, r31
     ec0:	49 f0       	breq	.+18     	; 0xed4 <exp+0x56>
     ec2:	fe 57       	subi	r31, 0x7E	; 126
     ec4:	e0 68       	ori	r30, 0x80	; 128
     ec6:	44 27       	eor	r20, r20
     ec8:	ee 0f       	add	r30, r30
     eca:	44 1f       	adc	r20, r20
     ecc:	fa 95       	dec	r31
     ece:	e1 f7       	brne	.-8      	; 0xec8 <exp+0x4a>
     ed0:	41 95       	neg	r20
     ed2:	55 0b       	sbc	r21, r21
     ed4:	0e 94 a4 07 	call	0xf48	; 0xf48 <ldexp>
     ed8:	0f 90       	pop	r0
     eda:	07 fe       	sbrs	r0, 7
     edc:	0c 94 98 07 	jmp	0xf30	; 0xf30 <inverse>
     ee0:	08 95       	ret

00000ee2 <__fp_powser>:
     ee2:	df 93       	push	r29
     ee4:	cf 93       	push	r28
     ee6:	1f 93       	push	r17
     ee8:	0f 93       	push	r16
     eea:	ff 92       	push	r15
     eec:	ef 92       	push	r14
     eee:	df 92       	push	r13
     ef0:	7b 01       	movw	r14, r22
     ef2:	8c 01       	movw	r16, r24
     ef4:	68 94       	set
     ef6:	06 c0       	rjmp	.+12     	; 0xf04 <__fp_powser+0x22>
     ef8:	da 2e       	mov	r13, r26
     efa:	ef 01       	movw	r28, r30
     efc:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3x>
     f00:	fe 01       	movw	r30, r28
     f02:	e8 94       	clt
     f04:	a5 91       	lpm	r26, Z+
     f06:	25 91       	lpm	r18, Z+
     f08:	35 91       	lpm	r19, Z+
     f0a:	45 91       	lpm	r20, Z+
     f0c:	55 91       	lpm	r21, Z+
     f0e:	a6 f3       	brts	.-24     	; 0xef8 <__fp_powser+0x16>
     f10:	ef 01       	movw	r28, r30
     f12:	0e 94 61 05 	call	0xac2	; 0xac2 <__addsf3x>
     f16:	fe 01       	movw	r30, r28
     f18:	97 01       	movw	r18, r14
     f1a:	a8 01       	movw	r20, r16
     f1c:	da 94       	dec	r13
     f1e:	69 f7       	brne	.-38     	; 0xefa <__fp_powser+0x18>
     f20:	df 90       	pop	r13
     f22:	ef 90       	pop	r14
     f24:	ff 90       	pop	r15
     f26:	0f 91       	pop	r16
     f28:	1f 91       	pop	r17
     f2a:	cf 91       	pop	r28
     f2c:	df 91       	pop	r29
     f2e:	08 95       	ret

00000f30 <inverse>:
     f30:	9b 01       	movw	r18, r22
     f32:	ac 01       	movw	r20, r24
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e8       	ldi	r24, 0x80	; 128
     f3a:	9f e3       	ldi	r25, 0x3F	; 63
     f3c:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__divsf3>
     f40:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
     f44:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__fp_mpack>

00000f48 <ldexp>:
     f48:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_splitA>
     f4c:	d8 f3       	brcs	.-10     	; 0xf44 <inverse+0x14>
     f4e:	99 23       	and	r25, r25
     f50:	c9 f3       	breq	.-14     	; 0xf44 <inverse+0x14>
     f52:	94 0f       	add	r25, r20
     f54:	51 1d       	adc	r21, r1
     f56:	a3 f3       	brvs	.-24     	; 0xf40 <inverse+0x10>
     f58:	91 50       	subi	r25, 0x01	; 1
     f5a:	50 40       	sbci	r21, 0x00	; 0
     f5c:	94 f0       	brlt	.+36     	; 0xf82 <ldexp+0x3a>
     f5e:	59 f0       	breq	.+22     	; 0xf76 <ldexp+0x2e>
     f60:	88 23       	and	r24, r24
     f62:	32 f0       	brmi	.+12     	; 0xf70 <ldexp+0x28>
     f64:	66 0f       	add	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	91 50       	subi	r25, 0x01	; 1
     f6c:	50 40       	sbci	r21, 0x00	; 0
     f6e:	c1 f7       	brne	.-16     	; 0xf60 <ldexp+0x18>
     f70:	9e 3f       	cpi	r25, 0xFE	; 254
     f72:	51 05       	cpc	r21, r1
     f74:	2c f7       	brge	.-54     	; 0xf40 <inverse+0x10>
     f76:	88 0f       	add	r24, r24
     f78:	91 1d       	adc	r25, r1
     f7a:	96 95       	lsr	r25
     f7c:	87 95       	ror	r24
     f7e:	97 f9       	bld	r25, 7
     f80:	08 95       	ret
     f82:	5f 3f       	cpi	r21, 0xFF	; 255
     f84:	ac f0       	brlt	.+42     	; 0xfb0 <ldexp+0x68>
     f86:	98 3e       	cpi	r25, 0xE8	; 232
     f88:	9c f0       	brlt	.+38     	; 0xfb0 <ldexp+0x68>
     f8a:	bb 27       	eor	r27, r27
     f8c:	86 95       	lsr	r24
     f8e:	77 95       	ror	r23
     f90:	67 95       	ror	r22
     f92:	b7 95       	ror	r27
     f94:	08 f4       	brcc	.+2      	; 0xf98 <ldexp+0x50>
     f96:	b1 60       	ori	r27, 0x01	; 1
     f98:	93 95       	inc	r25
     f9a:	c1 f7       	brne	.-16     	; 0xf8c <ldexp+0x44>
     f9c:	bb 0f       	add	r27, r27
     f9e:	58 f7       	brcc	.-42     	; 0xf76 <ldexp+0x2e>
     fa0:	11 f4       	brne	.+4      	; 0xfa6 <ldexp+0x5e>
     fa2:	60 ff       	sbrs	r22, 0
     fa4:	e8 cf       	rjmp	.-48     	; 0xf76 <ldexp+0x2e>
     fa6:	6f 5f       	subi	r22, 0xFF	; 255
     fa8:	7f 4f       	sbci	r23, 0xFF	; 255
     faa:	8f 4f       	sbci	r24, 0xFF	; 255
     fac:	9f 4f       	sbci	r25, 0xFF	; 255
     fae:	e3 cf       	rjmp	.-58     	; 0xf76 <ldexp+0x2e>
     fb0:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>
     fb4:	16 f0       	brts	.+4      	; 0xfba <ldexp+0x72>
     fb6:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__fp_mpack>
     fba:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>
     fbe:	68 94       	set
     fc0:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>

00000fc4 <log>:
     fc4:	0e 94 59 06 	call	0xcb2	; 0xcb2 <__fp_splitA>
     fc8:	a8 f3       	brcs	.-22     	; 0xfb4 <ldexp+0x6c>
     fca:	99 23       	and	r25, r25
     fcc:	c1 f3       	breq	.-16     	; 0xfbe <ldexp+0x76>
     fce:	ae f3       	brts	.-22     	; 0xfba <ldexp+0x72>
     fd0:	df 93       	push	r29
     fd2:	cf 93       	push	r28
     fd4:	1f 93       	push	r17
     fd6:	0f 93       	push	r16
     fd8:	ff 92       	push	r15
     fda:	c9 2f       	mov	r28, r25
     fdc:	dd 27       	eor	r29, r29
     fde:	88 23       	and	r24, r24
     fe0:	2a f0       	brmi	.+10     	; 0xfec <log+0x28>
     fe2:	21 97       	sbiw	r28, 0x01	; 1
     fe4:	66 0f       	add	r22, r22
     fe6:	77 1f       	adc	r23, r23
     fe8:	88 1f       	adc	r24, r24
     fea:	da f7       	brpl	.-10     	; 0xfe2 <log+0x1e>
     fec:	20 e0       	ldi	r18, 0x00	; 0
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	40 e8       	ldi	r20, 0x80	; 128
     ff2:	5f eb       	ldi	r21, 0xBF	; 191
     ff4:	9f e3       	ldi	r25, 0x3F	; 63
     ff6:	88 39       	cpi	r24, 0x98	; 152
     ff8:	20 f0       	brcs	.+8      	; 0x1002 <__DATA_REGION_LENGTH__+0x2>
     ffa:	80 3e       	cpi	r24, 0xE0	; 224
     ffc:	38 f0       	brcs	.+14     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
     ffe:	21 96       	adiw	r28, 0x01	; 1
    1000:	8f 77       	andi	r24, 0x7F	; 127
    1002:	0e 94 4a 05 	call	0xa94	; 0xa94 <__addsf3>
    1006:	e4 eb       	ldi	r30, 0xB4	; 180
    1008:	f0 e0       	ldi	r31, 0x00	; 0
    100a:	04 c0       	rjmp	.+8      	; 0x1014 <__DATA_REGION_LENGTH__+0x14>
    100c:	0e 94 4a 05 	call	0xa94	; 0xa94 <__addsf3>
    1010:	e1 ee       	ldi	r30, 0xE1	; 225
    1012:	f0 e0       	ldi	r31, 0x00	; 0
    1014:	0e 94 71 07 	call	0xee2	; 0xee2 <__fp_powser>
    1018:	8b 01       	movw	r16, r22
    101a:	be 01       	movw	r22, r28
    101c:	ec 01       	movw	r28, r24
    101e:	fb 2e       	mov	r15, r27
    1020:	6f 57       	subi	r22, 0x7F	; 127
    1022:	71 09       	sbc	r23, r1
    1024:	75 95       	asr	r23
    1026:	77 1f       	adc	r23, r23
    1028:	88 0b       	sbc	r24, r24
    102a:	99 0b       	sbc	r25, r25
    102c:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__floatsisf>
    1030:	28 e1       	ldi	r18, 0x18	; 24
    1032:	32 e7       	ldi	r19, 0x72	; 114
    1034:	41 e3       	ldi	r20, 0x31	; 49
    1036:	5f e3       	ldi	r21, 0x3F	; 63
    1038:	0e 94 8d 06 	call	0xd1a	; 0xd1a <__mulsf3x>
    103c:	af 2d       	mov	r26, r15
    103e:	98 01       	movw	r18, r16
    1040:	ae 01       	movw	r20, r28
    1042:	ff 90       	pop	r15
    1044:	0f 91       	pop	r16
    1046:	1f 91       	pop	r17
    1048:	cf 91       	pop	r28
    104a:	df 91       	pop	r29
    104c:	0e 94 61 05 	call	0xac2	; 0xac2 <__addsf3x>
    1050:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__fp_round>

00001054 <modf>:
    1054:	fa 01       	movw	r30, r20
    1056:	dc 01       	movw	r26, r24
    1058:	aa 0f       	add	r26, r26
    105a:	bb 1f       	adc	r27, r27
    105c:	9b 01       	movw	r18, r22
    105e:	ac 01       	movw	r20, r24
    1060:	bf 57       	subi	r27, 0x7F	; 127
    1062:	28 f4       	brcc	.+10     	; 0x106e <modf+0x1a>
    1064:	22 27       	eor	r18, r18
    1066:	33 27       	eor	r19, r19
    1068:	44 27       	eor	r20, r20
    106a:	50 78       	andi	r21, 0x80	; 128
    106c:	20 c0       	rjmp	.+64     	; 0x10ae <modf+0x5a>
    106e:	b7 51       	subi	r27, 0x17	; 23
    1070:	90 f4       	brcc	.+36     	; 0x1096 <modf+0x42>
    1072:	ab 2f       	mov	r26, r27
    1074:	00 24       	eor	r0, r0
    1076:	46 95       	lsr	r20
    1078:	37 95       	ror	r19
    107a:	27 95       	ror	r18
    107c:	01 1c       	adc	r0, r1
    107e:	a3 95       	inc	r26
    1080:	d2 f3       	brmi	.-12     	; 0x1076 <modf+0x22>
    1082:	00 20       	and	r0, r0
    1084:	71 f0       	breq	.+28     	; 0x10a2 <modf+0x4e>
    1086:	22 0f       	add	r18, r18
    1088:	33 1f       	adc	r19, r19
    108a:	44 1f       	adc	r20, r20
    108c:	b3 95       	inc	r27
    108e:	da f3       	brmi	.-10     	; 0x1086 <modf+0x32>
    1090:	0e d0       	rcall	.+28     	; 0x10ae <modf+0x5a>
    1092:	0c 94 49 05 	jmp	0xa92	; 0xa92 <__subsf3>
    1096:	61 30       	cpi	r22, 0x01	; 1
    1098:	71 05       	cpc	r23, r1
    109a:	a0 e8       	ldi	r26, 0x80	; 128
    109c:	8a 07       	cpc	r24, r26
    109e:	b9 46       	sbci	r27, 0x69	; 105
    10a0:	30 f4       	brcc	.+12     	; 0x10ae <modf+0x5a>
    10a2:	9b 01       	movw	r18, r22
    10a4:	ac 01       	movw	r20, r24
    10a6:	66 27       	eor	r22, r22
    10a8:	77 27       	eor	r23, r23
    10aa:	88 27       	eor	r24, r24
    10ac:	90 78       	andi	r25, 0x80	; 128
    10ae:	30 96       	adiw	r30, 0x00	; 0
    10b0:	21 f0       	breq	.+8      	; 0x10ba <modf+0x66>
    10b2:	20 83       	st	Z, r18
    10b4:	31 83       	std	Z+1, r19	; 0x01
    10b6:	42 83       	std	Z+2, r20	; 0x02
    10b8:	53 83       	std	Z+3, r21	; 0x03
    10ba:	08 95       	ret

000010bc <__divsf3>:
    10bc:	0e 94 72 08 	call	0x10e4	; 0x10e4 <__divsf3x>
    10c0:	0c 94 40 06 	jmp	0xc80	; 0xc80 <__fp_round>
    10c4:	0e 94 39 06 	call	0xc72	; 0xc72 <__fp_pscB>
    10c8:	58 f0       	brcs	.+22     	; 0x10e0 <__divsf3+0x24>
    10ca:	0e 94 32 06 	call	0xc64	; 0xc64 <__fp_pscA>
    10ce:	40 f0       	brcs	.+16     	; 0x10e0 <__divsf3+0x24>
    10d0:	29 f4       	brne	.+10     	; 0x10dc <__divsf3+0x20>
    10d2:	5f 3f       	cpi	r21, 0xFF	; 255
    10d4:	29 f0       	breq	.+10     	; 0x10e0 <__divsf3+0x24>
    10d6:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
    10da:	51 11       	cpse	r21, r1
    10dc:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>
    10e0:	0c 94 2f 06 	jmp	0xc5e	; 0xc5e <__fp_nan>

000010e4 <__divsf3x>:
    10e4:	0e 94 51 06 	call	0xca2	; 0xca2 <__fp_split3>
    10e8:	68 f3       	brcs	.-38     	; 0x10c4 <__divsf3+0x8>

000010ea <__divsf3_pse>:
    10ea:	99 23       	and	r25, r25
    10ec:	b1 f3       	breq	.-20     	; 0x10da <__divsf3+0x1e>
    10ee:	55 23       	and	r21, r21
    10f0:	91 f3       	breq	.-28     	; 0x10d6 <__divsf3+0x1a>
    10f2:	95 1b       	sub	r25, r21
    10f4:	55 0b       	sbc	r21, r21
    10f6:	bb 27       	eor	r27, r27
    10f8:	aa 27       	eor	r26, r26
    10fa:	62 17       	cp	r22, r18
    10fc:	73 07       	cpc	r23, r19
    10fe:	84 07       	cpc	r24, r20
    1100:	38 f0       	brcs	.+14     	; 0x1110 <__stack+0x11>
    1102:	9f 5f       	subi	r25, 0xFF	; 255
    1104:	5f 4f       	sbci	r21, 0xFF	; 255
    1106:	22 0f       	add	r18, r18
    1108:	33 1f       	adc	r19, r19
    110a:	44 1f       	adc	r20, r20
    110c:	aa 1f       	adc	r26, r26
    110e:	a9 f3       	breq	.-22     	; 0x10fa <__divsf3_pse+0x10>
    1110:	35 d0       	rcall	.+106    	; 0x117c <__stack+0x7d>
    1112:	0e 2e       	mov	r0, r30
    1114:	3a f0       	brmi	.+14     	; 0x1124 <__stack+0x25>
    1116:	e0 e8       	ldi	r30, 0x80	; 128
    1118:	32 d0       	rcall	.+100    	; 0x117e <__stack+0x7f>
    111a:	91 50       	subi	r25, 0x01	; 1
    111c:	50 40       	sbci	r21, 0x00	; 0
    111e:	e6 95       	lsr	r30
    1120:	00 1c       	adc	r0, r0
    1122:	ca f7       	brpl	.-14     	; 0x1116 <__stack+0x17>
    1124:	2b d0       	rcall	.+86     	; 0x117c <__stack+0x7d>
    1126:	fe 2f       	mov	r31, r30
    1128:	29 d0       	rcall	.+82     	; 0x117c <__stack+0x7d>
    112a:	66 0f       	add	r22, r22
    112c:	77 1f       	adc	r23, r23
    112e:	88 1f       	adc	r24, r24
    1130:	bb 1f       	adc	r27, r27
    1132:	26 17       	cp	r18, r22
    1134:	37 07       	cpc	r19, r23
    1136:	48 07       	cpc	r20, r24
    1138:	ab 07       	cpc	r26, r27
    113a:	b0 e8       	ldi	r27, 0x80	; 128
    113c:	09 f0       	breq	.+2      	; 0x1140 <__stack+0x41>
    113e:	bb 0b       	sbc	r27, r27
    1140:	80 2d       	mov	r24, r0
    1142:	bf 01       	movw	r22, r30
    1144:	ff 27       	eor	r31, r31
    1146:	93 58       	subi	r25, 0x83	; 131
    1148:	5f 4f       	sbci	r21, 0xFF	; 255
    114a:	3a f0       	brmi	.+14     	; 0x115a <__stack+0x5b>
    114c:	9e 3f       	cpi	r25, 0xFE	; 254
    114e:	51 05       	cpc	r21, r1
    1150:	78 f0       	brcs	.+30     	; 0x1170 <__stack+0x71>
    1152:	0c 94 29 06 	jmp	0xc52	; 0xc52 <__fp_inf>
    1156:	0c 94 74 06 	jmp	0xce8	; 0xce8 <__fp_szero>
    115a:	5f 3f       	cpi	r21, 0xFF	; 255
    115c:	e4 f3       	brlt	.-8      	; 0x1156 <__stack+0x57>
    115e:	98 3e       	cpi	r25, 0xE8	; 232
    1160:	d4 f3       	brlt	.-12     	; 0x1156 <__stack+0x57>
    1162:	86 95       	lsr	r24
    1164:	77 95       	ror	r23
    1166:	67 95       	ror	r22
    1168:	b7 95       	ror	r27
    116a:	f7 95       	ror	r31
    116c:	9f 5f       	subi	r25, 0xFF	; 255
    116e:	c9 f7       	brne	.-14     	; 0x1162 <__stack+0x63>
    1170:	88 0f       	add	r24, r24
    1172:	91 1d       	adc	r25, r1
    1174:	96 95       	lsr	r25
    1176:	87 95       	ror	r24
    1178:	97 f9       	bld	r25, 7
    117a:	08 95       	ret
    117c:	e1 e0       	ldi	r30, 0x01	; 1
    117e:	66 0f       	add	r22, r22
    1180:	77 1f       	adc	r23, r23
    1182:	88 1f       	adc	r24, r24
    1184:	bb 1f       	adc	r27, r27
    1186:	62 17       	cp	r22, r18
    1188:	73 07       	cpc	r23, r19
    118a:	84 07       	cpc	r24, r20
    118c:	ba 07       	cpc	r27, r26
    118e:	20 f0       	brcs	.+8      	; 0x1198 <__stack+0x99>
    1190:	62 1b       	sub	r22, r18
    1192:	73 0b       	sbc	r23, r19
    1194:	84 0b       	sbc	r24, r20
    1196:	ba 0b       	sbc	r27, r26
    1198:	ee 1f       	adc	r30, r30
    119a:	88 f7       	brcc	.-30     	; 0x117e <__stack+0x7f>
    119c:	e0 95       	com	r30
    119e:	08 95       	ret

000011a0 <__fp_mpack>:
    11a0:	9f 3f       	cpi	r25, 0xFF	; 255
    11a2:	31 f0       	breq	.+12     	; 0x11b0 <__fp_mpack_finite+0xc>

000011a4 <__fp_mpack_finite>:
    11a4:	91 50       	subi	r25, 0x01	; 1
    11a6:	20 f4       	brcc	.+8      	; 0x11b0 <__fp_mpack_finite+0xc>
    11a8:	87 95       	ror	r24
    11aa:	77 95       	ror	r23
    11ac:	67 95       	ror	r22
    11ae:	b7 95       	ror	r27
    11b0:	88 0f       	add	r24, r24
    11b2:	91 1d       	adc	r25, r1
    11b4:	96 95       	lsr	r25
    11b6:	87 95       	ror	r24
    11b8:	97 f9       	bld	r25, 7
    11ba:	08 95       	ret

000011bc <__ashrdi3>:
    11bc:	97 fb       	bst	r25, 7
    11be:	10 f8       	bld	r1, 0

000011c0 <__lshrdi3>:
    11c0:	16 94       	lsr	r1
    11c2:	00 08       	sbc	r0, r0
    11c4:	0f 93       	push	r16
    11c6:	08 30       	cpi	r16, 0x08	; 8
    11c8:	98 f0       	brcs	.+38     	; 0x11f0 <__lshrdi3+0x30>
    11ca:	08 50       	subi	r16, 0x08	; 8
    11cc:	23 2f       	mov	r18, r19
    11ce:	34 2f       	mov	r19, r20
    11d0:	45 2f       	mov	r20, r21
    11d2:	56 2f       	mov	r21, r22
    11d4:	67 2f       	mov	r22, r23
    11d6:	78 2f       	mov	r23, r24
    11d8:	89 2f       	mov	r24, r25
    11da:	90 2d       	mov	r25, r0
    11dc:	f4 cf       	rjmp	.-24     	; 0x11c6 <__lshrdi3+0x6>
    11de:	05 94       	asr	r0
    11e0:	97 95       	ror	r25
    11e2:	87 95       	ror	r24
    11e4:	77 95       	ror	r23
    11e6:	67 95       	ror	r22
    11e8:	57 95       	ror	r21
    11ea:	47 95       	ror	r20
    11ec:	37 95       	ror	r19
    11ee:	27 95       	ror	r18
    11f0:	0a 95       	dec	r16
    11f2:	aa f7       	brpl	.-22     	; 0x11de <__lshrdi3+0x1e>
    11f4:	0f 91       	pop	r16
    11f6:	08 95       	ret

000011f8 <__adddi3_s8>:
    11f8:	00 24       	eor	r0, r0
    11fa:	a7 fd       	sbrc	r26, 7
    11fc:	00 94       	com	r0
    11fe:	2a 0f       	add	r18, r26
    1200:	30 1d       	adc	r19, r0
    1202:	40 1d       	adc	r20, r0
    1204:	50 1d       	adc	r21, r0
    1206:	60 1d       	adc	r22, r0
    1208:	70 1d       	adc	r23, r0
    120a:	80 1d       	adc	r24, r0
    120c:	90 1d       	adc	r25, r0
    120e:	08 95       	ret

00001210 <__itoa_ncheck>:
    1210:	bb 27       	eor	r27, r27
    1212:	4a 30       	cpi	r20, 0x0A	; 10
    1214:	31 f4       	brne	.+12     	; 0x1222 <__itoa_ncheck+0x12>
    1216:	99 23       	and	r25, r25
    1218:	22 f4       	brpl	.+8      	; 0x1222 <__itoa_ncheck+0x12>
    121a:	bd e2       	ldi	r27, 0x2D	; 45
    121c:	90 95       	com	r25
    121e:	81 95       	neg	r24
    1220:	9f 4f       	sbci	r25, 0xFF	; 255
    1222:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__utoa_common>

00001226 <__utoa_ncheck>:
    1226:	bb 27       	eor	r27, r27

00001228 <__utoa_common>:
    1228:	fb 01       	movw	r30, r22
    122a:	55 27       	eor	r21, r21
    122c:	aa 27       	eor	r26, r26
    122e:	88 0f       	add	r24, r24
    1230:	99 1f       	adc	r25, r25
    1232:	aa 1f       	adc	r26, r26
    1234:	a4 17       	cp	r26, r20
    1236:	10 f0       	brcs	.+4      	; 0x123c <__utoa_common+0x14>
    1238:	a4 1b       	sub	r26, r20
    123a:	83 95       	inc	r24
    123c:	50 51       	subi	r21, 0x10	; 16
    123e:	b9 f7       	brne	.-18     	; 0x122e <__utoa_common+0x6>
    1240:	a0 5d       	subi	r26, 0xD0	; 208
    1242:	aa 33       	cpi	r26, 0x3A	; 58
    1244:	08 f0       	brcs	.+2      	; 0x1248 <__utoa_common+0x20>
    1246:	a9 5d       	subi	r26, 0xD9	; 217
    1248:	a1 93       	st	Z+, r26
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	79 f7       	brne	.-34     	; 0x122c <__utoa_common+0x4>
    124e:	b1 11       	cpse	r27, r1
    1250:	b1 93       	st	Z+, r27
    1252:	11 92       	st	Z+, r1
    1254:	cb 01       	movw	r24, r22
    1256:	0c 94 46 0b 	jmp	0x168c	; 0x168c <strrev>

0000125a <sprintf>:
    125a:	ae e0       	ldi	r26, 0x0E	; 14
    125c:	b0 e0       	ldi	r27, 0x00	; 0
    125e:	e3 e3       	ldi	r30, 0x33	; 51
    1260:	f9 e0       	ldi	r31, 0x09	; 9
    1262:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__prologue_saves__+0x1c>
    1266:	0d 89       	ldd	r16, Y+21	; 0x15
    1268:	1e 89       	ldd	r17, Y+22	; 0x16
    126a:	86 e0       	ldi	r24, 0x06	; 6
    126c:	8c 83       	std	Y+4, r24	; 0x04
    126e:	1a 83       	std	Y+2, r17	; 0x02
    1270:	09 83       	std	Y+1, r16	; 0x01
    1272:	8f ef       	ldi	r24, 0xFF	; 255
    1274:	9f e7       	ldi	r25, 0x7F	; 127
    1276:	9e 83       	std	Y+6, r25	; 0x06
    1278:	8d 83       	std	Y+5, r24	; 0x05
    127a:	ae 01       	movw	r20, r28
    127c:	47 5e       	subi	r20, 0xE7	; 231
    127e:	5f 4f       	sbci	r21, 0xFF	; 255
    1280:	6f 89       	ldd	r22, Y+23	; 0x17
    1282:	78 8d       	ldd	r23, Y+24	; 0x18
    1284:	ce 01       	movw	r24, r28
    1286:	01 96       	adiw	r24, 0x01	; 1
    1288:	0e 94 4f 09 	call	0x129e	; 0x129e <vfprintf>
    128c:	ef 81       	ldd	r30, Y+7	; 0x07
    128e:	f8 85       	ldd	r31, Y+8	; 0x08
    1290:	e0 0f       	add	r30, r16
    1292:	f1 1f       	adc	r31, r17
    1294:	10 82       	st	Z, r1
    1296:	2e 96       	adiw	r28, 0x0e	; 14
    1298:	e4 e0       	ldi	r30, 0x04	; 4
    129a:	0c 94 1a 0c 	jmp	0x1834	; 0x1834 <__epilogue_restores__+0x1c>

0000129e <vfprintf>:
    129e:	ab e0       	ldi	r26, 0x0B	; 11
    12a0:	b0 e0       	ldi	r27, 0x00	; 0
    12a2:	e5 e5       	ldi	r30, 0x55	; 85
    12a4:	f9 e0       	ldi	r31, 0x09	; 9
    12a6:	0c 94 f0 0b 	jmp	0x17e0	; 0x17e0 <__prologue_saves__>
    12aa:	6c 01       	movw	r12, r24
    12ac:	7b 01       	movw	r14, r22
    12ae:	8a 01       	movw	r16, r20
    12b0:	fc 01       	movw	r30, r24
    12b2:	17 82       	std	Z+7, r1	; 0x07
    12b4:	16 82       	std	Z+6, r1	; 0x06
    12b6:	83 81       	ldd	r24, Z+3	; 0x03
    12b8:	81 ff       	sbrs	r24, 1
    12ba:	cc c1       	rjmp	.+920    	; 0x1654 <vfprintf+0x3b6>
    12bc:	ce 01       	movw	r24, r28
    12be:	01 96       	adiw	r24, 0x01	; 1
    12c0:	3c 01       	movw	r6, r24
    12c2:	f6 01       	movw	r30, r12
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	f7 01       	movw	r30, r14
    12c8:	93 fd       	sbrc	r25, 3
    12ca:	85 91       	lpm	r24, Z+
    12cc:	93 ff       	sbrs	r25, 3
    12ce:	81 91       	ld	r24, Z+
    12d0:	7f 01       	movw	r14, r30
    12d2:	88 23       	and	r24, r24
    12d4:	09 f4       	brne	.+2      	; 0x12d8 <vfprintf+0x3a>
    12d6:	ba c1       	rjmp	.+884    	; 0x164c <vfprintf+0x3ae>
    12d8:	85 32       	cpi	r24, 0x25	; 37
    12da:	39 f4       	brne	.+14     	; 0x12ea <vfprintf+0x4c>
    12dc:	93 fd       	sbrc	r25, 3
    12de:	85 91       	lpm	r24, Z+
    12e0:	93 ff       	sbrs	r25, 3
    12e2:	81 91       	ld	r24, Z+
    12e4:	7f 01       	movw	r14, r30
    12e6:	85 32       	cpi	r24, 0x25	; 37
    12e8:	29 f4       	brne	.+10     	; 0x12f4 <vfprintf+0x56>
    12ea:	b6 01       	movw	r22, r12
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    12f2:	e7 cf       	rjmp	.-50     	; 0x12c2 <vfprintf+0x24>
    12f4:	91 2c       	mov	r9, r1
    12f6:	21 2c       	mov	r2, r1
    12f8:	31 2c       	mov	r3, r1
    12fa:	ff e1       	ldi	r31, 0x1F	; 31
    12fc:	f3 15       	cp	r31, r3
    12fe:	d8 f0       	brcs	.+54     	; 0x1336 <vfprintf+0x98>
    1300:	8b 32       	cpi	r24, 0x2B	; 43
    1302:	79 f0       	breq	.+30     	; 0x1322 <vfprintf+0x84>
    1304:	38 f4       	brcc	.+14     	; 0x1314 <vfprintf+0x76>
    1306:	80 32       	cpi	r24, 0x20	; 32
    1308:	79 f0       	breq	.+30     	; 0x1328 <vfprintf+0x8a>
    130a:	83 32       	cpi	r24, 0x23	; 35
    130c:	a1 f4       	brne	.+40     	; 0x1336 <vfprintf+0x98>
    130e:	23 2d       	mov	r18, r3
    1310:	20 61       	ori	r18, 0x10	; 16
    1312:	1d c0       	rjmp	.+58     	; 0x134e <vfprintf+0xb0>
    1314:	8d 32       	cpi	r24, 0x2D	; 45
    1316:	61 f0       	breq	.+24     	; 0x1330 <vfprintf+0x92>
    1318:	80 33       	cpi	r24, 0x30	; 48
    131a:	69 f4       	brne	.+26     	; 0x1336 <vfprintf+0x98>
    131c:	23 2d       	mov	r18, r3
    131e:	21 60       	ori	r18, 0x01	; 1
    1320:	16 c0       	rjmp	.+44     	; 0x134e <vfprintf+0xb0>
    1322:	83 2d       	mov	r24, r3
    1324:	82 60       	ori	r24, 0x02	; 2
    1326:	38 2e       	mov	r3, r24
    1328:	e3 2d       	mov	r30, r3
    132a:	e4 60       	ori	r30, 0x04	; 4
    132c:	3e 2e       	mov	r3, r30
    132e:	2a c0       	rjmp	.+84     	; 0x1384 <vfprintf+0xe6>
    1330:	f3 2d       	mov	r31, r3
    1332:	f8 60       	ori	r31, 0x08	; 8
    1334:	1d c0       	rjmp	.+58     	; 0x1370 <vfprintf+0xd2>
    1336:	37 fc       	sbrc	r3, 7
    1338:	2d c0       	rjmp	.+90     	; 0x1394 <vfprintf+0xf6>
    133a:	20 ed       	ldi	r18, 0xD0	; 208
    133c:	28 0f       	add	r18, r24
    133e:	2a 30       	cpi	r18, 0x0A	; 10
    1340:	40 f0       	brcs	.+16     	; 0x1352 <vfprintf+0xb4>
    1342:	8e 32       	cpi	r24, 0x2E	; 46
    1344:	b9 f4       	brne	.+46     	; 0x1374 <vfprintf+0xd6>
    1346:	36 fc       	sbrc	r3, 6
    1348:	81 c1       	rjmp	.+770    	; 0x164c <vfprintf+0x3ae>
    134a:	23 2d       	mov	r18, r3
    134c:	20 64       	ori	r18, 0x40	; 64
    134e:	32 2e       	mov	r3, r18
    1350:	19 c0       	rjmp	.+50     	; 0x1384 <vfprintf+0xe6>
    1352:	36 fe       	sbrs	r3, 6
    1354:	06 c0       	rjmp	.+12     	; 0x1362 <vfprintf+0xc4>
    1356:	8a e0       	ldi	r24, 0x0A	; 10
    1358:	98 9e       	mul	r9, r24
    135a:	20 0d       	add	r18, r0
    135c:	11 24       	eor	r1, r1
    135e:	92 2e       	mov	r9, r18
    1360:	11 c0       	rjmp	.+34     	; 0x1384 <vfprintf+0xe6>
    1362:	ea e0       	ldi	r30, 0x0A	; 10
    1364:	2e 9e       	mul	r2, r30
    1366:	20 0d       	add	r18, r0
    1368:	11 24       	eor	r1, r1
    136a:	22 2e       	mov	r2, r18
    136c:	f3 2d       	mov	r31, r3
    136e:	f0 62       	ori	r31, 0x20	; 32
    1370:	3f 2e       	mov	r3, r31
    1372:	08 c0       	rjmp	.+16     	; 0x1384 <vfprintf+0xe6>
    1374:	8c 36       	cpi	r24, 0x6C	; 108
    1376:	21 f4       	brne	.+8      	; 0x1380 <vfprintf+0xe2>
    1378:	83 2d       	mov	r24, r3
    137a:	80 68       	ori	r24, 0x80	; 128
    137c:	38 2e       	mov	r3, r24
    137e:	02 c0       	rjmp	.+4      	; 0x1384 <vfprintf+0xe6>
    1380:	88 36       	cpi	r24, 0x68	; 104
    1382:	41 f4       	brne	.+16     	; 0x1394 <vfprintf+0xf6>
    1384:	f7 01       	movw	r30, r14
    1386:	93 fd       	sbrc	r25, 3
    1388:	85 91       	lpm	r24, Z+
    138a:	93 ff       	sbrs	r25, 3
    138c:	81 91       	ld	r24, Z+
    138e:	7f 01       	movw	r14, r30
    1390:	81 11       	cpse	r24, r1
    1392:	b3 cf       	rjmp	.-154    	; 0x12fa <vfprintf+0x5c>
    1394:	98 2f       	mov	r25, r24
    1396:	9f 7d       	andi	r25, 0xDF	; 223
    1398:	95 54       	subi	r25, 0x45	; 69
    139a:	93 30       	cpi	r25, 0x03	; 3
    139c:	28 f4       	brcc	.+10     	; 0x13a8 <vfprintf+0x10a>
    139e:	0c 5f       	subi	r16, 0xFC	; 252
    13a0:	1f 4f       	sbci	r17, 0xFF	; 255
    13a2:	9f e3       	ldi	r25, 0x3F	; 63
    13a4:	99 83       	std	Y+1, r25	; 0x01
    13a6:	0d c0       	rjmp	.+26     	; 0x13c2 <vfprintf+0x124>
    13a8:	83 36       	cpi	r24, 0x63	; 99
    13aa:	31 f0       	breq	.+12     	; 0x13b8 <vfprintf+0x11a>
    13ac:	83 37       	cpi	r24, 0x73	; 115
    13ae:	71 f0       	breq	.+28     	; 0x13cc <vfprintf+0x12e>
    13b0:	83 35       	cpi	r24, 0x53	; 83
    13b2:	09 f0       	breq	.+2      	; 0x13b6 <vfprintf+0x118>
    13b4:	59 c0       	rjmp	.+178    	; 0x1468 <vfprintf+0x1ca>
    13b6:	21 c0       	rjmp	.+66     	; 0x13fa <vfprintf+0x15c>
    13b8:	f8 01       	movw	r30, r16
    13ba:	80 81       	ld	r24, Z
    13bc:	89 83       	std	Y+1, r24	; 0x01
    13be:	0e 5f       	subi	r16, 0xFE	; 254
    13c0:	1f 4f       	sbci	r17, 0xFF	; 255
    13c2:	88 24       	eor	r8, r8
    13c4:	83 94       	inc	r8
    13c6:	91 2c       	mov	r9, r1
    13c8:	53 01       	movw	r10, r6
    13ca:	13 c0       	rjmp	.+38     	; 0x13f2 <vfprintf+0x154>
    13cc:	28 01       	movw	r4, r16
    13ce:	f2 e0       	ldi	r31, 0x02	; 2
    13d0:	4f 0e       	add	r4, r31
    13d2:	51 1c       	adc	r5, r1
    13d4:	f8 01       	movw	r30, r16
    13d6:	a0 80       	ld	r10, Z
    13d8:	b1 80       	ldd	r11, Z+1	; 0x01
    13da:	36 fe       	sbrs	r3, 6
    13dc:	03 c0       	rjmp	.+6      	; 0x13e4 <vfprintf+0x146>
    13de:	69 2d       	mov	r22, r9
    13e0:	70 e0       	ldi	r23, 0x00	; 0
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <vfprintf+0x14a>
    13e4:	6f ef       	ldi	r22, 0xFF	; 255
    13e6:	7f ef       	ldi	r23, 0xFF	; 255
    13e8:	c5 01       	movw	r24, r10
    13ea:	0e 94 3b 0b 	call	0x1676	; 0x1676 <strnlen>
    13ee:	4c 01       	movw	r8, r24
    13f0:	82 01       	movw	r16, r4
    13f2:	f3 2d       	mov	r31, r3
    13f4:	ff 77       	andi	r31, 0x7F	; 127
    13f6:	3f 2e       	mov	r3, r31
    13f8:	16 c0       	rjmp	.+44     	; 0x1426 <vfprintf+0x188>
    13fa:	28 01       	movw	r4, r16
    13fc:	22 e0       	ldi	r18, 0x02	; 2
    13fe:	42 0e       	add	r4, r18
    1400:	51 1c       	adc	r5, r1
    1402:	f8 01       	movw	r30, r16
    1404:	a0 80       	ld	r10, Z
    1406:	b1 80       	ldd	r11, Z+1	; 0x01
    1408:	36 fe       	sbrs	r3, 6
    140a:	03 c0       	rjmp	.+6      	; 0x1412 <vfprintf+0x174>
    140c:	69 2d       	mov	r22, r9
    140e:	70 e0       	ldi	r23, 0x00	; 0
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <vfprintf+0x178>
    1412:	6f ef       	ldi	r22, 0xFF	; 255
    1414:	7f ef       	ldi	r23, 0xFF	; 255
    1416:	c5 01       	movw	r24, r10
    1418:	0e 94 30 0b 	call	0x1660	; 0x1660 <strnlen_P>
    141c:	4c 01       	movw	r8, r24
    141e:	f3 2d       	mov	r31, r3
    1420:	f0 68       	ori	r31, 0x80	; 128
    1422:	3f 2e       	mov	r3, r31
    1424:	82 01       	movw	r16, r4
    1426:	33 fc       	sbrc	r3, 3
    1428:	1b c0       	rjmp	.+54     	; 0x1460 <vfprintf+0x1c2>
    142a:	82 2d       	mov	r24, r2
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	88 16       	cp	r8, r24
    1430:	99 06       	cpc	r9, r25
    1432:	b0 f4       	brcc	.+44     	; 0x1460 <vfprintf+0x1c2>
    1434:	b6 01       	movw	r22, r12
    1436:	80 e2       	ldi	r24, 0x20	; 32
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    143e:	2a 94       	dec	r2
    1440:	f4 cf       	rjmp	.-24     	; 0x142a <vfprintf+0x18c>
    1442:	f5 01       	movw	r30, r10
    1444:	37 fc       	sbrc	r3, 7
    1446:	85 91       	lpm	r24, Z+
    1448:	37 fe       	sbrs	r3, 7
    144a:	81 91       	ld	r24, Z+
    144c:	5f 01       	movw	r10, r30
    144e:	b6 01       	movw	r22, r12
    1450:	90 e0       	ldi	r25, 0x00	; 0
    1452:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    1456:	21 10       	cpse	r2, r1
    1458:	2a 94       	dec	r2
    145a:	21 e0       	ldi	r18, 0x01	; 1
    145c:	82 1a       	sub	r8, r18
    145e:	91 08       	sbc	r9, r1
    1460:	81 14       	cp	r8, r1
    1462:	91 04       	cpc	r9, r1
    1464:	71 f7       	brne	.-36     	; 0x1442 <vfprintf+0x1a4>
    1466:	e8 c0       	rjmp	.+464    	; 0x1638 <vfprintf+0x39a>
    1468:	84 36       	cpi	r24, 0x64	; 100
    146a:	11 f0       	breq	.+4      	; 0x1470 <vfprintf+0x1d2>
    146c:	89 36       	cpi	r24, 0x69	; 105
    146e:	41 f5       	brne	.+80     	; 0x14c0 <vfprintf+0x222>
    1470:	f8 01       	movw	r30, r16
    1472:	37 fe       	sbrs	r3, 7
    1474:	07 c0       	rjmp	.+14     	; 0x1484 <vfprintf+0x1e6>
    1476:	60 81       	ld	r22, Z
    1478:	71 81       	ldd	r23, Z+1	; 0x01
    147a:	82 81       	ldd	r24, Z+2	; 0x02
    147c:	93 81       	ldd	r25, Z+3	; 0x03
    147e:	0c 5f       	subi	r16, 0xFC	; 252
    1480:	1f 4f       	sbci	r17, 0xFF	; 255
    1482:	08 c0       	rjmp	.+16     	; 0x1494 <vfprintf+0x1f6>
    1484:	60 81       	ld	r22, Z
    1486:	71 81       	ldd	r23, Z+1	; 0x01
    1488:	07 2e       	mov	r0, r23
    148a:	00 0c       	add	r0, r0
    148c:	88 0b       	sbc	r24, r24
    148e:	99 0b       	sbc	r25, r25
    1490:	0e 5f       	subi	r16, 0xFE	; 254
    1492:	1f 4f       	sbci	r17, 0xFF	; 255
    1494:	f3 2d       	mov	r31, r3
    1496:	ff 76       	andi	r31, 0x6F	; 111
    1498:	3f 2e       	mov	r3, r31
    149a:	97 ff       	sbrs	r25, 7
    149c:	09 c0       	rjmp	.+18     	; 0x14b0 <vfprintf+0x212>
    149e:	90 95       	com	r25
    14a0:	80 95       	com	r24
    14a2:	70 95       	com	r23
    14a4:	61 95       	neg	r22
    14a6:	7f 4f       	sbci	r23, 0xFF	; 255
    14a8:	8f 4f       	sbci	r24, 0xFF	; 255
    14aa:	9f 4f       	sbci	r25, 0xFF	; 255
    14ac:	f0 68       	ori	r31, 0x80	; 128
    14ae:	3f 2e       	mov	r3, r31
    14b0:	2a e0       	ldi	r18, 0x0A	; 10
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	a3 01       	movw	r20, r6
    14b6:	0e 94 92 0b 	call	0x1724	; 0x1724 <__ultoa_invert>
    14ba:	88 2e       	mov	r8, r24
    14bc:	86 18       	sub	r8, r6
    14be:	45 c0       	rjmp	.+138    	; 0x154a <vfprintf+0x2ac>
    14c0:	85 37       	cpi	r24, 0x75	; 117
    14c2:	31 f4       	brne	.+12     	; 0x14d0 <vfprintf+0x232>
    14c4:	23 2d       	mov	r18, r3
    14c6:	2f 7e       	andi	r18, 0xEF	; 239
    14c8:	b2 2e       	mov	r11, r18
    14ca:	2a e0       	ldi	r18, 0x0A	; 10
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	25 c0       	rjmp	.+74     	; 0x151a <vfprintf+0x27c>
    14d0:	93 2d       	mov	r25, r3
    14d2:	99 7f       	andi	r25, 0xF9	; 249
    14d4:	b9 2e       	mov	r11, r25
    14d6:	8f 36       	cpi	r24, 0x6F	; 111
    14d8:	c1 f0       	breq	.+48     	; 0x150a <vfprintf+0x26c>
    14da:	18 f4       	brcc	.+6      	; 0x14e2 <vfprintf+0x244>
    14dc:	88 35       	cpi	r24, 0x58	; 88
    14de:	79 f0       	breq	.+30     	; 0x14fe <vfprintf+0x260>
    14e0:	b5 c0       	rjmp	.+362    	; 0x164c <vfprintf+0x3ae>
    14e2:	80 37       	cpi	r24, 0x70	; 112
    14e4:	19 f0       	breq	.+6      	; 0x14ec <vfprintf+0x24e>
    14e6:	88 37       	cpi	r24, 0x78	; 120
    14e8:	21 f0       	breq	.+8      	; 0x14f2 <vfprintf+0x254>
    14ea:	b0 c0       	rjmp	.+352    	; 0x164c <vfprintf+0x3ae>
    14ec:	e9 2f       	mov	r30, r25
    14ee:	e0 61       	ori	r30, 0x10	; 16
    14f0:	be 2e       	mov	r11, r30
    14f2:	b4 fe       	sbrs	r11, 4
    14f4:	0d c0       	rjmp	.+26     	; 0x1510 <vfprintf+0x272>
    14f6:	fb 2d       	mov	r31, r11
    14f8:	f4 60       	ori	r31, 0x04	; 4
    14fa:	bf 2e       	mov	r11, r31
    14fc:	09 c0       	rjmp	.+18     	; 0x1510 <vfprintf+0x272>
    14fe:	34 fe       	sbrs	r3, 4
    1500:	0a c0       	rjmp	.+20     	; 0x1516 <vfprintf+0x278>
    1502:	29 2f       	mov	r18, r25
    1504:	26 60       	ori	r18, 0x06	; 6
    1506:	b2 2e       	mov	r11, r18
    1508:	06 c0       	rjmp	.+12     	; 0x1516 <vfprintf+0x278>
    150a:	28 e0       	ldi	r18, 0x08	; 8
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	05 c0       	rjmp	.+10     	; 0x151a <vfprintf+0x27c>
    1510:	20 e1       	ldi	r18, 0x10	; 16
    1512:	30 e0       	ldi	r19, 0x00	; 0
    1514:	02 c0       	rjmp	.+4      	; 0x151a <vfprintf+0x27c>
    1516:	20 e1       	ldi	r18, 0x10	; 16
    1518:	32 e0       	ldi	r19, 0x02	; 2
    151a:	f8 01       	movw	r30, r16
    151c:	b7 fe       	sbrs	r11, 7
    151e:	07 c0       	rjmp	.+14     	; 0x152e <vfprintf+0x290>
    1520:	60 81       	ld	r22, Z
    1522:	71 81       	ldd	r23, Z+1	; 0x01
    1524:	82 81       	ldd	r24, Z+2	; 0x02
    1526:	93 81       	ldd	r25, Z+3	; 0x03
    1528:	0c 5f       	subi	r16, 0xFC	; 252
    152a:	1f 4f       	sbci	r17, 0xFF	; 255
    152c:	06 c0       	rjmp	.+12     	; 0x153a <vfprintf+0x29c>
    152e:	60 81       	ld	r22, Z
    1530:	71 81       	ldd	r23, Z+1	; 0x01
    1532:	80 e0       	ldi	r24, 0x00	; 0
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	0e 5f       	subi	r16, 0xFE	; 254
    1538:	1f 4f       	sbci	r17, 0xFF	; 255
    153a:	a3 01       	movw	r20, r6
    153c:	0e 94 92 0b 	call	0x1724	; 0x1724 <__ultoa_invert>
    1540:	88 2e       	mov	r8, r24
    1542:	86 18       	sub	r8, r6
    1544:	fb 2d       	mov	r31, r11
    1546:	ff 77       	andi	r31, 0x7F	; 127
    1548:	3f 2e       	mov	r3, r31
    154a:	36 fe       	sbrs	r3, 6
    154c:	0d c0       	rjmp	.+26     	; 0x1568 <vfprintf+0x2ca>
    154e:	23 2d       	mov	r18, r3
    1550:	2e 7f       	andi	r18, 0xFE	; 254
    1552:	a2 2e       	mov	r10, r18
    1554:	89 14       	cp	r8, r9
    1556:	58 f4       	brcc	.+22     	; 0x156e <vfprintf+0x2d0>
    1558:	34 fe       	sbrs	r3, 4
    155a:	0b c0       	rjmp	.+22     	; 0x1572 <vfprintf+0x2d4>
    155c:	32 fc       	sbrc	r3, 2
    155e:	09 c0       	rjmp	.+18     	; 0x1572 <vfprintf+0x2d4>
    1560:	83 2d       	mov	r24, r3
    1562:	8e 7e       	andi	r24, 0xEE	; 238
    1564:	a8 2e       	mov	r10, r24
    1566:	05 c0       	rjmp	.+10     	; 0x1572 <vfprintf+0x2d4>
    1568:	b8 2c       	mov	r11, r8
    156a:	a3 2c       	mov	r10, r3
    156c:	03 c0       	rjmp	.+6      	; 0x1574 <vfprintf+0x2d6>
    156e:	b8 2c       	mov	r11, r8
    1570:	01 c0       	rjmp	.+2      	; 0x1574 <vfprintf+0x2d6>
    1572:	b9 2c       	mov	r11, r9
    1574:	a4 fe       	sbrs	r10, 4
    1576:	0f c0       	rjmp	.+30     	; 0x1596 <vfprintf+0x2f8>
    1578:	fe 01       	movw	r30, r28
    157a:	e8 0d       	add	r30, r8
    157c:	f1 1d       	adc	r31, r1
    157e:	80 81       	ld	r24, Z
    1580:	80 33       	cpi	r24, 0x30	; 48
    1582:	21 f4       	brne	.+8      	; 0x158c <vfprintf+0x2ee>
    1584:	9a 2d       	mov	r25, r10
    1586:	99 7e       	andi	r25, 0xE9	; 233
    1588:	a9 2e       	mov	r10, r25
    158a:	09 c0       	rjmp	.+18     	; 0x159e <vfprintf+0x300>
    158c:	a2 fe       	sbrs	r10, 2
    158e:	06 c0       	rjmp	.+12     	; 0x159c <vfprintf+0x2fe>
    1590:	b3 94       	inc	r11
    1592:	b3 94       	inc	r11
    1594:	04 c0       	rjmp	.+8      	; 0x159e <vfprintf+0x300>
    1596:	8a 2d       	mov	r24, r10
    1598:	86 78       	andi	r24, 0x86	; 134
    159a:	09 f0       	breq	.+2      	; 0x159e <vfprintf+0x300>
    159c:	b3 94       	inc	r11
    159e:	a3 fc       	sbrc	r10, 3
    15a0:	11 c0       	rjmp	.+34     	; 0x15c4 <vfprintf+0x326>
    15a2:	a0 fe       	sbrs	r10, 0
    15a4:	06 c0       	rjmp	.+12     	; 0x15b2 <vfprintf+0x314>
    15a6:	b2 14       	cp	r11, r2
    15a8:	88 f4       	brcc	.+34     	; 0x15cc <vfprintf+0x32e>
    15aa:	28 0c       	add	r2, r8
    15ac:	92 2c       	mov	r9, r2
    15ae:	9b 18       	sub	r9, r11
    15b0:	0e c0       	rjmp	.+28     	; 0x15ce <vfprintf+0x330>
    15b2:	b2 14       	cp	r11, r2
    15b4:	60 f4       	brcc	.+24     	; 0x15ce <vfprintf+0x330>
    15b6:	b6 01       	movw	r22, r12
    15b8:	80 e2       	ldi	r24, 0x20	; 32
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    15c0:	b3 94       	inc	r11
    15c2:	f7 cf       	rjmp	.-18     	; 0x15b2 <vfprintf+0x314>
    15c4:	b2 14       	cp	r11, r2
    15c6:	18 f4       	brcc	.+6      	; 0x15ce <vfprintf+0x330>
    15c8:	2b 18       	sub	r2, r11
    15ca:	02 c0       	rjmp	.+4      	; 0x15d0 <vfprintf+0x332>
    15cc:	98 2c       	mov	r9, r8
    15ce:	21 2c       	mov	r2, r1
    15d0:	a4 fe       	sbrs	r10, 4
    15d2:	10 c0       	rjmp	.+32     	; 0x15f4 <vfprintf+0x356>
    15d4:	b6 01       	movw	r22, r12
    15d6:	80 e3       	ldi	r24, 0x30	; 48
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    15de:	a2 fe       	sbrs	r10, 2
    15e0:	17 c0       	rjmp	.+46     	; 0x1610 <vfprintf+0x372>
    15e2:	a1 fc       	sbrc	r10, 1
    15e4:	03 c0       	rjmp	.+6      	; 0x15ec <vfprintf+0x34e>
    15e6:	88 e7       	ldi	r24, 0x78	; 120
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	02 c0       	rjmp	.+4      	; 0x15f0 <vfprintf+0x352>
    15ec:	88 e5       	ldi	r24, 0x58	; 88
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	b6 01       	movw	r22, r12
    15f2:	0c c0       	rjmp	.+24     	; 0x160c <vfprintf+0x36e>
    15f4:	8a 2d       	mov	r24, r10
    15f6:	86 78       	andi	r24, 0x86	; 134
    15f8:	59 f0       	breq	.+22     	; 0x1610 <vfprintf+0x372>
    15fa:	a1 fe       	sbrs	r10, 1
    15fc:	02 c0       	rjmp	.+4      	; 0x1602 <vfprintf+0x364>
    15fe:	8b e2       	ldi	r24, 0x2B	; 43
    1600:	01 c0       	rjmp	.+2      	; 0x1604 <vfprintf+0x366>
    1602:	80 e2       	ldi	r24, 0x20	; 32
    1604:	a7 fc       	sbrc	r10, 7
    1606:	8d e2       	ldi	r24, 0x2D	; 45
    1608:	b6 01       	movw	r22, r12
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    1610:	89 14       	cp	r8, r9
    1612:	38 f4       	brcc	.+14     	; 0x1622 <vfprintf+0x384>
    1614:	b6 01       	movw	r22, r12
    1616:	80 e3       	ldi	r24, 0x30	; 48
    1618:	90 e0       	ldi	r25, 0x00	; 0
    161a:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    161e:	9a 94       	dec	r9
    1620:	f7 cf       	rjmp	.-18     	; 0x1610 <vfprintf+0x372>
    1622:	8a 94       	dec	r8
    1624:	f3 01       	movw	r30, r6
    1626:	e8 0d       	add	r30, r8
    1628:	f1 1d       	adc	r31, r1
    162a:	80 81       	ld	r24, Z
    162c:	b6 01       	movw	r22, r12
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    1634:	81 10       	cpse	r8, r1
    1636:	f5 cf       	rjmp	.-22     	; 0x1622 <vfprintf+0x384>
    1638:	22 20       	and	r2, r2
    163a:	09 f4       	brne	.+2      	; 0x163e <vfprintf+0x3a0>
    163c:	42 ce       	rjmp	.-892    	; 0x12c2 <vfprintf+0x24>
    163e:	b6 01       	movw	r22, r12
    1640:	80 e2       	ldi	r24, 0x20	; 32
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	0e 94 56 0b 	call	0x16ac	; 0x16ac <fputc>
    1648:	2a 94       	dec	r2
    164a:	f6 cf       	rjmp	.-20     	; 0x1638 <vfprintf+0x39a>
    164c:	f6 01       	movw	r30, r12
    164e:	86 81       	ldd	r24, Z+6	; 0x06
    1650:	97 81       	ldd	r25, Z+7	; 0x07
    1652:	02 c0       	rjmp	.+4      	; 0x1658 <vfprintf+0x3ba>
    1654:	8f ef       	ldi	r24, 0xFF	; 255
    1656:	9f ef       	ldi	r25, 0xFF	; 255
    1658:	2b 96       	adiw	r28, 0x0b	; 11
    165a:	e2 e1       	ldi	r30, 0x12	; 18
    165c:	0c 94 0c 0c 	jmp	0x1818	; 0x1818 <__epilogue_restores__>

00001660 <strnlen_P>:
    1660:	fc 01       	movw	r30, r24
    1662:	05 90       	lpm	r0, Z+
    1664:	61 50       	subi	r22, 0x01	; 1
    1666:	70 40       	sbci	r23, 0x00	; 0
    1668:	01 10       	cpse	r0, r1
    166a:	d8 f7       	brcc	.-10     	; 0x1662 <strnlen_P+0x2>
    166c:	80 95       	com	r24
    166e:	90 95       	com	r25
    1670:	8e 0f       	add	r24, r30
    1672:	9f 1f       	adc	r25, r31
    1674:	08 95       	ret

00001676 <strnlen>:
    1676:	fc 01       	movw	r30, r24
    1678:	61 50       	subi	r22, 0x01	; 1
    167a:	70 40       	sbci	r23, 0x00	; 0
    167c:	01 90       	ld	r0, Z+
    167e:	01 10       	cpse	r0, r1
    1680:	d8 f7       	brcc	.-10     	; 0x1678 <strnlen+0x2>
    1682:	80 95       	com	r24
    1684:	90 95       	com	r25
    1686:	8e 0f       	add	r24, r30
    1688:	9f 1f       	adc	r25, r31
    168a:	08 95       	ret

0000168c <strrev>:
    168c:	dc 01       	movw	r26, r24
    168e:	fc 01       	movw	r30, r24
    1690:	67 2f       	mov	r22, r23
    1692:	71 91       	ld	r23, Z+
    1694:	77 23       	and	r23, r23
    1696:	e1 f7       	brne	.-8      	; 0x1690 <strrev+0x4>
    1698:	32 97       	sbiw	r30, 0x02	; 2
    169a:	04 c0       	rjmp	.+8      	; 0x16a4 <strrev+0x18>
    169c:	7c 91       	ld	r23, X
    169e:	6d 93       	st	X+, r22
    16a0:	70 83       	st	Z, r23
    16a2:	62 91       	ld	r22, -Z
    16a4:	ae 17       	cp	r26, r30
    16a6:	bf 07       	cpc	r27, r31
    16a8:	c8 f3       	brcs	.-14     	; 0x169c <strrev+0x10>
    16aa:	08 95       	ret

000016ac <fputc>:
    16ac:	0f 93       	push	r16
    16ae:	1f 93       	push	r17
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	fb 01       	movw	r30, r22
    16b6:	23 81       	ldd	r18, Z+3	; 0x03
    16b8:	21 fd       	sbrc	r18, 1
    16ba:	03 c0       	rjmp	.+6      	; 0x16c2 <fputc+0x16>
    16bc:	8f ef       	ldi	r24, 0xFF	; 255
    16be:	9f ef       	ldi	r25, 0xFF	; 255
    16c0:	2c c0       	rjmp	.+88     	; 0x171a <fputc+0x6e>
    16c2:	22 ff       	sbrs	r18, 2
    16c4:	16 c0       	rjmp	.+44     	; 0x16f2 <fputc+0x46>
    16c6:	46 81       	ldd	r20, Z+6	; 0x06
    16c8:	57 81       	ldd	r21, Z+7	; 0x07
    16ca:	24 81       	ldd	r18, Z+4	; 0x04
    16cc:	35 81       	ldd	r19, Z+5	; 0x05
    16ce:	42 17       	cp	r20, r18
    16d0:	53 07       	cpc	r21, r19
    16d2:	44 f4       	brge	.+16     	; 0x16e4 <fputc+0x38>
    16d4:	a0 81       	ld	r26, Z
    16d6:	b1 81       	ldd	r27, Z+1	; 0x01
    16d8:	9d 01       	movw	r18, r26
    16da:	2f 5f       	subi	r18, 0xFF	; 255
    16dc:	3f 4f       	sbci	r19, 0xFF	; 255
    16de:	31 83       	std	Z+1, r19	; 0x01
    16e0:	20 83       	st	Z, r18
    16e2:	8c 93       	st	X, r24
    16e4:	26 81       	ldd	r18, Z+6	; 0x06
    16e6:	37 81       	ldd	r19, Z+7	; 0x07
    16e8:	2f 5f       	subi	r18, 0xFF	; 255
    16ea:	3f 4f       	sbci	r19, 0xFF	; 255
    16ec:	37 83       	std	Z+7, r19	; 0x07
    16ee:	26 83       	std	Z+6, r18	; 0x06
    16f0:	14 c0       	rjmp	.+40     	; 0x171a <fputc+0x6e>
    16f2:	8b 01       	movw	r16, r22
    16f4:	ec 01       	movw	r28, r24
    16f6:	fb 01       	movw	r30, r22
    16f8:	00 84       	ldd	r0, Z+8	; 0x08
    16fa:	f1 85       	ldd	r31, Z+9	; 0x09
    16fc:	e0 2d       	mov	r30, r0
    16fe:	09 95       	icall
    1700:	89 2b       	or	r24, r25
    1702:	e1 f6       	brne	.-72     	; 0x16bc <fputc+0x10>
    1704:	d8 01       	movw	r26, r16
    1706:	16 96       	adiw	r26, 0x06	; 6
    1708:	8d 91       	ld	r24, X+
    170a:	9c 91       	ld	r25, X
    170c:	17 97       	sbiw	r26, 0x07	; 7
    170e:	01 96       	adiw	r24, 0x01	; 1
    1710:	17 96       	adiw	r26, 0x07	; 7
    1712:	9c 93       	st	X, r25
    1714:	8e 93       	st	-X, r24
    1716:	16 97       	sbiw	r26, 0x06	; 6
    1718:	ce 01       	movw	r24, r28
    171a:	df 91       	pop	r29
    171c:	cf 91       	pop	r28
    171e:	1f 91       	pop	r17
    1720:	0f 91       	pop	r16
    1722:	08 95       	ret

00001724 <__ultoa_invert>:
    1724:	fa 01       	movw	r30, r20
    1726:	aa 27       	eor	r26, r26
    1728:	28 30       	cpi	r18, 0x08	; 8
    172a:	51 f1       	breq	.+84     	; 0x1780 <__ultoa_invert+0x5c>
    172c:	20 31       	cpi	r18, 0x10	; 16
    172e:	81 f1       	breq	.+96     	; 0x1790 <__ultoa_invert+0x6c>
    1730:	e8 94       	clt
    1732:	6f 93       	push	r22
    1734:	6e 7f       	andi	r22, 0xFE	; 254
    1736:	6e 5f       	subi	r22, 0xFE	; 254
    1738:	7f 4f       	sbci	r23, 0xFF	; 255
    173a:	8f 4f       	sbci	r24, 0xFF	; 255
    173c:	9f 4f       	sbci	r25, 0xFF	; 255
    173e:	af 4f       	sbci	r26, 0xFF	; 255
    1740:	b1 e0       	ldi	r27, 0x01	; 1
    1742:	3e d0       	rcall	.+124    	; 0x17c0 <__ultoa_invert+0x9c>
    1744:	b4 e0       	ldi	r27, 0x04	; 4
    1746:	3c d0       	rcall	.+120    	; 0x17c0 <__ultoa_invert+0x9c>
    1748:	67 0f       	add	r22, r23
    174a:	78 1f       	adc	r23, r24
    174c:	89 1f       	adc	r24, r25
    174e:	9a 1f       	adc	r25, r26
    1750:	a1 1d       	adc	r26, r1
    1752:	68 0f       	add	r22, r24
    1754:	79 1f       	adc	r23, r25
    1756:	8a 1f       	adc	r24, r26
    1758:	91 1d       	adc	r25, r1
    175a:	a1 1d       	adc	r26, r1
    175c:	6a 0f       	add	r22, r26
    175e:	71 1d       	adc	r23, r1
    1760:	81 1d       	adc	r24, r1
    1762:	91 1d       	adc	r25, r1
    1764:	a1 1d       	adc	r26, r1
    1766:	20 d0       	rcall	.+64     	; 0x17a8 <__ultoa_invert+0x84>
    1768:	09 f4       	brne	.+2      	; 0x176c <__ultoa_invert+0x48>
    176a:	68 94       	set
    176c:	3f 91       	pop	r19
    176e:	2a e0       	ldi	r18, 0x0A	; 10
    1770:	26 9f       	mul	r18, r22
    1772:	11 24       	eor	r1, r1
    1774:	30 19       	sub	r19, r0
    1776:	30 5d       	subi	r19, 0xD0	; 208
    1778:	31 93       	st	Z+, r19
    177a:	de f6       	brtc	.-74     	; 0x1732 <__ultoa_invert+0xe>
    177c:	cf 01       	movw	r24, r30
    177e:	08 95       	ret
    1780:	46 2f       	mov	r20, r22
    1782:	47 70       	andi	r20, 0x07	; 7
    1784:	40 5d       	subi	r20, 0xD0	; 208
    1786:	41 93       	st	Z+, r20
    1788:	b3 e0       	ldi	r27, 0x03	; 3
    178a:	0f d0       	rcall	.+30     	; 0x17aa <__ultoa_invert+0x86>
    178c:	c9 f7       	brne	.-14     	; 0x1780 <__ultoa_invert+0x5c>
    178e:	f6 cf       	rjmp	.-20     	; 0x177c <__ultoa_invert+0x58>
    1790:	46 2f       	mov	r20, r22
    1792:	4f 70       	andi	r20, 0x0F	; 15
    1794:	40 5d       	subi	r20, 0xD0	; 208
    1796:	4a 33       	cpi	r20, 0x3A	; 58
    1798:	18 f0       	brcs	.+6      	; 0x17a0 <__ultoa_invert+0x7c>
    179a:	49 5d       	subi	r20, 0xD9	; 217
    179c:	31 fd       	sbrc	r19, 1
    179e:	40 52       	subi	r20, 0x20	; 32
    17a0:	41 93       	st	Z+, r20
    17a2:	02 d0       	rcall	.+4      	; 0x17a8 <__ultoa_invert+0x84>
    17a4:	a9 f7       	brne	.-22     	; 0x1790 <__ultoa_invert+0x6c>
    17a6:	ea cf       	rjmp	.-44     	; 0x177c <__ultoa_invert+0x58>
    17a8:	b4 e0       	ldi	r27, 0x04	; 4
    17aa:	a6 95       	lsr	r26
    17ac:	97 95       	ror	r25
    17ae:	87 95       	ror	r24
    17b0:	77 95       	ror	r23
    17b2:	67 95       	ror	r22
    17b4:	ba 95       	dec	r27
    17b6:	c9 f7       	brne	.-14     	; 0x17aa <__ultoa_invert+0x86>
    17b8:	00 97       	sbiw	r24, 0x00	; 0
    17ba:	61 05       	cpc	r22, r1
    17bc:	71 05       	cpc	r23, r1
    17be:	08 95       	ret
    17c0:	9b 01       	movw	r18, r22
    17c2:	ac 01       	movw	r20, r24
    17c4:	0a 2e       	mov	r0, r26
    17c6:	06 94       	lsr	r0
    17c8:	57 95       	ror	r21
    17ca:	47 95       	ror	r20
    17cc:	37 95       	ror	r19
    17ce:	27 95       	ror	r18
    17d0:	ba 95       	dec	r27
    17d2:	c9 f7       	brne	.-14     	; 0x17c6 <__ultoa_invert+0xa2>
    17d4:	62 0f       	add	r22, r18
    17d6:	73 1f       	adc	r23, r19
    17d8:	84 1f       	adc	r24, r20
    17da:	95 1f       	adc	r25, r21
    17dc:	a0 1d       	adc	r26, r0
    17de:	08 95       	ret

000017e0 <__prologue_saves__>:
    17e0:	2f 92       	push	r2
    17e2:	3f 92       	push	r3
    17e4:	4f 92       	push	r4
    17e6:	5f 92       	push	r5
    17e8:	6f 92       	push	r6
    17ea:	7f 92       	push	r7
    17ec:	8f 92       	push	r8
    17ee:	9f 92       	push	r9
    17f0:	af 92       	push	r10
    17f2:	bf 92       	push	r11
    17f4:	cf 92       	push	r12
    17f6:	df 92       	push	r13
    17f8:	ef 92       	push	r14
    17fa:	ff 92       	push	r15
    17fc:	0f 93       	push	r16
    17fe:	1f 93       	push	r17
    1800:	cf 93       	push	r28
    1802:	df 93       	push	r29
    1804:	cd b7       	in	r28, 0x3d	; 61
    1806:	de b7       	in	r29, 0x3e	; 62
    1808:	ca 1b       	sub	r28, r26
    180a:	db 0b       	sbc	r29, r27
    180c:	0f b6       	in	r0, 0x3f	; 63
    180e:	f8 94       	cli
    1810:	de bf       	out	0x3e, r29	; 62
    1812:	0f be       	out	0x3f, r0	; 63
    1814:	cd bf       	out	0x3d, r28	; 61
    1816:	09 94       	ijmp

00001818 <__epilogue_restores__>:
    1818:	2a 88       	ldd	r2, Y+18	; 0x12
    181a:	39 88       	ldd	r3, Y+17	; 0x11
    181c:	48 88       	ldd	r4, Y+16	; 0x10
    181e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1820:	6e 84       	ldd	r6, Y+14	; 0x0e
    1822:	7d 84       	ldd	r7, Y+13	; 0x0d
    1824:	8c 84       	ldd	r8, Y+12	; 0x0c
    1826:	9b 84       	ldd	r9, Y+11	; 0x0b
    1828:	aa 84       	ldd	r10, Y+10	; 0x0a
    182a:	b9 84       	ldd	r11, Y+9	; 0x09
    182c:	c8 84       	ldd	r12, Y+8	; 0x08
    182e:	df 80       	ldd	r13, Y+7	; 0x07
    1830:	ee 80       	ldd	r14, Y+6	; 0x06
    1832:	fd 80       	ldd	r15, Y+5	; 0x05
    1834:	0c 81       	ldd	r16, Y+4	; 0x04
    1836:	1b 81       	ldd	r17, Y+3	; 0x03
    1838:	aa 81       	ldd	r26, Y+2	; 0x02
    183a:	b9 81       	ldd	r27, Y+1	; 0x01
    183c:	ce 0f       	add	r28, r30
    183e:	d1 1d       	adc	r29, r1
    1840:	0f b6       	in	r0, 0x3f	; 63
    1842:	f8 94       	cli
    1844:	de bf       	out	0x3e, r29	; 62
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	cd bf       	out	0x3d, r28	; 61
    184a:	ed 01       	movw	r28, r26
    184c:	08 95       	ret

0000184e <_exit>:
    184e:	f8 94       	cli

00001850 <__stop_program>:
    1850:	ff cf       	rjmp	.-2      	; 0x1850 <__stop_program>
