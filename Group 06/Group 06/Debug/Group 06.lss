
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c8  00800100  0000193c  000019d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000193c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  008001c8  008001c8  00001a98  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001af4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cf3  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000abd  00000000  00000000  000038e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b4e  00000000  00000000  000043a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  00004ef0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005cb  00000000  00000000  00005124  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000104f  00000000  00000000  000056ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000673e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__EEPROM_REGION_LENGTH__+0x108>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	ec e3       	ldi	r30, 0x3C	; 60
     122:	f9 e1       	ldi	r31, 0x19	; 25
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	a8 3c       	cpi	r26, 0xC8	; 200
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	a8 ec       	ldi	r26, 0xC8	; 200
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	a3 3d       	cpi	r26, 0xD3	; 211
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 97 03 	call	0x72e	; 0x72e <main>
     144:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <lcd_clear>:


void lcd_clear()
{
	lcdcmd(0x01);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     20e:	08 95       	ret

00000210 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     216:	08 95       	ret

00000218 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     218:	80 ec       	ldi	r24, 0xC0	; 192
     21a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     21e:	08 95       	ret

00000220 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     220:	8f ee       	ldi	r24, 0xEF	; 239
     222:	82 bb       	out	0x12, r24	; 18
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x8>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0xe>
     22e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     230:	80 9b       	sbis	0x10, 0	; 16
     232:	30 c0       	rjmp	.+96     	; 0x294 <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     234:	81 9b       	sbis	0x10, 1	; 16
     236:	30 c0       	rjmp	.+96     	; 0x298 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     238:	82 9b       	sbis	0x10, 2	; 16
     23a:	30 c0       	rjmp	.+96     	; 0x29c <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     23c:	8f ed       	ldi	r24, 0xDF	; 223
     23e:	82 bb       	out	0x12, r24	; 18
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x24>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x2a>
     24a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     24c:	80 9b       	sbis	0x10, 0	; 16
     24e:	28 c0       	rjmp	.+80     	; 0x2a0 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     250:	81 9b       	sbis	0x10, 1	; 16
     252:	28 c0       	rjmp	.+80     	; 0x2a4 <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     254:	82 9b       	sbis	0x10, 2	; 16
     256:	28 c0       	rjmp	.+80     	; 0x2a8 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     258:	8f eb       	ldi	r24, 0xBF	; 191
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	83 ec       	ldi	r24, 0xC3	; 195
     25e:	99 e0       	ldi	r25, 0x09	; 9
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <keycheck+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <keycheck+0x46>
     266:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     268:	80 9b       	sbis	0x10, 0	; 16
     26a:	20 c0       	rjmp	.+64     	; 0x2ac <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     26c:	81 9b       	sbis	0x10, 1	; 16
     26e:	20 c0       	rjmp	.+64     	; 0x2b0 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     270:	82 9b       	sbis	0x10, 2	; 16
     272:	20 c0       	rjmp	.+64     	; 0x2b4 <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     274:	8f e7       	ldi	r24, 0x7F	; 127
     276:	82 bb       	out	0x12, r24	; 18
     278:	83 ec       	ldi	r24, 0xC3	; 195
     27a:	99 e0       	ldi	r25, 0x09	; 9
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <keycheck+0x5c>
     280:	00 c0       	rjmp	.+0      	; 0x282 <keycheck+0x62>
     282:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     284:	80 9b       	sbis	0x10, 0	; 16
     286:	18 c0       	rjmp	.+48     	; 0x2b8 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     288:	81 9b       	sbis	0x10, 1	; 16
     28a:	18 c0       	rjmp	.+48     	; 0x2bc <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     28c:	82 99       	sbic	0x10, 2	; 16
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <keycheck+0xa0>
	{
		return '#';
     290:	83 e2       	ldi	r24, 0x23	; 35
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     294:	81 e3       	ldi	r24, 0x31	; 49
     296:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     298:	82 e3       	ldi	r24, 0x32	; 50
     29a:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     2a0:	84 e3       	ldi	r24, 0x34	; 52
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     2a4:	85 e3       	ldi	r24, 0x35	; 53
     2a6:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     2a8:	86 e3       	ldi	r24, 0x36	; 54
     2aa:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     2ac:	87 e3       	ldi	r24, 0x37	; 55
     2ae:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     2b4:	89 e3       	ldi	r24, 0x39	; 57
     2b6:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2b8:	8a e2       	ldi	r24, 0x2A	; 42
     2ba:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2bc:	80 e3       	ldi	r24, 0x30	; 48
     2be:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2c0:	81 e6       	ldi	r24, 0x61	; 97

}
     2c2:	08 95       	ret

000002c4 <scankey>:

char scankey()
{
	char key='a';
     2c4:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <scankey+0x8>
	{
		key=keycheck();
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2cc:	81 36       	cpi	r24, 0x61	; 97
     2ce:	e1 f3       	breq	.-8      	; 0x2c8 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2d0:	08 95       	ret

000002d2 <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2d2:	84 b3       	in	r24, 0x14	; 20
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	84 bb       	out	0x14, r24	; 20
     2d8:	08 95       	ret

000002da <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2da:	85 b3       	in	r24, 0x15	; 21
     2dc:	81 60       	ori	r24, 0x01	; 1
     2de:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	85 e0       	ldi	r24, 0x05	; 5
     2e2:	8a 95       	dec	r24
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2e6:	85 b3       	in	r24, 0x15	; 21
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	85 bb       	out	0x15, r24	; 21
     2ec:	08 95       	ret

000002ee <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c0 e0       	ldi	r28, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	f1 2c       	mov	r15, r1
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	15 c0       	rjmp	.+42     	; 0x342 <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     318:	99 99       	sbic	0x13, 1	; 19
     31a:	25 c0       	rjmp	.+74     	; 0x366 <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     31c:	2d 2f       	mov	r18, r29
     31e:	3c 2f       	mov	r19, r28
     320:	4b 2f       	mov	r20, r27
     322:	5a 2f       	mov	r21, r26
     324:	6f 2f       	mov	r22, r31
     326:	7f 2d       	mov	r23, r15
     328:	80 2f       	mov	r24, r16
     32a:	91 2f       	mov	r25, r17
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__adddi3_s8>
     332:	d2 2f       	mov	r29, r18
     334:	c3 2f       	mov	r28, r19
     336:	b4 2f       	mov	r27, r20
     338:	a5 2f       	mov	r26, r21
     33a:	f6 2f       	mov	r31, r22
     33c:	f7 2e       	mov	r15, r23
     33e:	08 2f       	mov	r16, r24
     340:	19 2f       	mov	r17, r25
     342:	2d 2f       	mov	r18, r29
     344:	3c 2f       	mov	r19, r28
     346:	4b 2f       	mov	r20, r27
     348:	5a 2f       	mov	r21, r26
     34a:	6f 2f       	mov	r22, r31
     34c:	7f 2d       	mov	r23, r15
     34e:	80 2f       	mov	r24, r16
     350:	91 2f       	mov	r25, r17
     352:	2f 3b       	cpi	r18, 0xBF	; 191
     354:	37 42       	sbci	r19, 0x27	; 39
     356:	49 40       	sbci	r20, 0x09	; 9
     358:	51 05       	cpc	r21, r1
     35a:	61 05       	cpc	r22, r1
     35c:	71 05       	cpc	r23, r1
     35e:	81 05       	cpc	r24, r1
     360:	91 05       	cpc	r25, r1
     362:	d1 f2       	breq	.-76     	; 0x318 <GetPulseWidth+0x2a>
     364:	c8 f2       	brcs	.-78     	; 0x318 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     366:	2d 2f       	mov	r18, r29
     368:	3c 2f       	mov	r19, r28
     36a:	4b 2f       	mov	r20, r27
     36c:	5a 2f       	mov	r21, r26
     36e:	6f 2f       	mov	r22, r31
     370:	7f 2d       	mov	r23, r15
     372:	80 2f       	mov	r24, r16
     374:	91 2f       	mov	r25, r17
     376:	20 3c       	cpi	r18, 0xC0	; 192
     378:	37 42       	sbci	r19, 0x27	; 39
     37a:	49 40       	sbci	r20, 0x09	; 9
     37c:	51 05       	cpc	r21, r1
     37e:	61 05       	cpc	r22, r1
     380:	71 05       	cpc	r23, r1
     382:	81 05       	cpc	r24, r1
     384:	91 05       	cpc	r25, r1
     386:	09 f4       	brne	.+2      	; 0x38a <GetPulseWidth+0x9c>
     388:	69 c0       	rjmp	.+210    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	return US_ERROR;
	
	TCCR1A=0X00;
     38a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     394:	d0 e0       	ldi	r29, 0x00	; 0
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	f1 2c       	mov	r15, r1
     3a0:	00 e0       	ldi	r16, 0x00	; 0
     3a2:	10 e0       	ldi	r17, 0x00	; 0
     3a4:	1a c0       	rjmp	.+52     	; 0x3da <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3a6:	99 9b       	sbis	0x13, 1	; 19
     3a8:	2a c0       	rjmp	.+84     	; 0x3fe <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     3aa:	8c b5       	in	r24, 0x2c	; 44
     3ac:	9d b5       	in	r25, 0x2d	; 45
     3ae:	81 36       	cpi	r24, 0x61	; 97
     3b0:	9a 4e       	sbci	r25, 0xEA	; 234
     3b2:	28 f5       	brcc	.+74     	; 0x3fe <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     3b4:	2d 2f       	mov	r18, r29
     3b6:	3c 2f       	mov	r19, r28
     3b8:	4b 2f       	mov	r20, r27
     3ba:	5a 2f       	mov	r21, r26
     3bc:	6f 2f       	mov	r22, r31
     3be:	7f 2d       	mov	r23, r15
     3c0:	80 2f       	mov	r24, r16
     3c2:	91 2f       	mov	r25, r17
     3c4:	a1 e0       	ldi	r26, 0x01	; 1
     3c6:	0e 94 71 09 	call	0x12e2	; 0x12e2 <__adddi3_s8>
     3ca:	d2 2f       	mov	r29, r18
     3cc:	c3 2f       	mov	r28, r19
     3ce:	b4 2f       	mov	r27, r20
     3d0:	a5 2f       	mov	r26, r21
     3d2:	f6 2f       	mov	r31, r22
     3d4:	f7 2e       	mov	r15, r23
     3d6:	08 2f       	mov	r16, r24
     3d8:	19 2f       	mov	r17, r25
     3da:	2d 2f       	mov	r18, r29
     3dc:	3c 2f       	mov	r19, r28
     3de:	4b 2f       	mov	r20, r27
     3e0:	5a 2f       	mov	r21, r26
     3e2:	6f 2f       	mov	r22, r31
     3e4:	7f 2d       	mov	r23, r15
     3e6:	80 2f       	mov	r24, r16
     3e8:	91 2f       	mov	r25, r17
     3ea:	2f 3b       	cpi	r18, 0xBF	; 191
     3ec:	37 42       	sbci	r19, 0x27	; 39
     3ee:	49 40       	sbci	r20, 0x09	; 9
     3f0:	51 05       	cpc	r21, r1
     3f2:	61 05       	cpc	r22, r1
     3f4:	71 05       	cpc	r23, r1
     3f6:	81 05       	cpc	r24, r1
     3f8:	91 05       	cpc	r25, r1
     3fa:	a9 f2       	breq	.-86     	; 0x3a6 <GetPulseWidth+0xb8>
     3fc:	a0 f2       	brcs	.-88     	; 0x3a6 <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3fe:	2d 2f       	mov	r18, r29
     400:	3c 2f       	mov	r19, r28
     402:	4b 2f       	mov	r20, r27
     404:	5a 2f       	mov	r21, r26
     406:	6f 2f       	mov	r22, r31
     408:	7f 2d       	mov	r23, r15
     40a:	80 2f       	mov	r24, r16
     40c:	91 2f       	mov	r25, r17
     40e:	20 3c       	cpi	r18, 0xC0	; 192
     410:	37 42       	sbci	r19, 0x27	; 39
     412:	49 40       	sbci	r20, 0x09	; 9
     414:	51 05       	cpc	r21, r1
     416:	61 05       	cpc	r22, r1
     418:	71 05       	cpc	r23, r1
     41a:	81 05       	cpc	r24, r1
     41c:	91 05       	cpc	r25, r1
     41e:	19 f1       	breq	.+70     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	return US_NO_OBSTACLE;

	result=TCNT1;
     420:	8c b4       	in	r8, 0x2c	; 44
     422:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     424:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     426:	28 2d       	mov	r18, r8
     428:	39 2d       	mov	r19, r9
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	20 36       	cpi	r18, 0x60	; 96
     438:	ea ee       	ldi	r30, 0xEA	; 234
     43a:	3e 07       	cpc	r19, r30
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	61 05       	cpc	r22, r1
     442:	71 05       	cpc	r23, r1
     444:	81 05       	cpc	r24, r1
     446:	91 05       	cpc	r25, r1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	90 f4       	brcc	.+36     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     44c:	01 e0       	ldi	r16, 0x01	; 1
     44e:	0e 94 55 09 	call	0x12aa	; 0x12aa <__lshrdi3>
     452:	62 2f       	mov	r22, r18
     454:	73 2f       	mov	r23, r19
     456:	84 2f       	mov	r24, r20
     458:	95 2f       	mov	r25, r21
     45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	7f ef       	ldi	r23, 0xFF	; 255
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     466:	6e ef       	ldi	r22, 0xFE	; 254
     468:	7f ef       	ldi	r23, 0xFF	; 255
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     470:	6e ef       	ldi	r22, 0xFE	; 254
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <Request>:
#define DHT11_PIN 3
uint8_t c=0,I_RH,D_RH,I_Temp,D_Temp,CheckSum;

void Request()						/* Microcontroller send start pulse or request */
{
	DDRD |= (1<<DHT11_PIN);
     492:	81 b3       	in	r24, 0x11	; 17
     494:	88 60       	ori	r24, 0x08	; 8
     496:	81 bb       	out	0x11, r24	; 17
	PORTD &= ~(1<<DHT11_PIN);		/* set to low pin */
     498:	82 b3       	in	r24, 0x12	; 18
     49a:	87 7f       	andi	r24, 0xF7	; 247
     49c:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49e:	87 e8       	ldi	r24, 0x87	; 135
     4a0:	93 e1       	ldi	r25, 0x13	; 19
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	f1 f7       	brne	.-4      	; 0x4a2 <Request+0x10>
     4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <Request+0x16>
     4a8:	00 00       	nop
	_delay_ms(20);					/* wait for 20ms */
	PORTD |= (1<<DHT11_PIN);		/* set to high pin */
     4aa:	82 b3       	in	r24, 0x12	; 18
     4ac:	88 60       	ori	r24, 0x08	; 8
     4ae:	82 bb       	out	0x12, r24	; 18
     4b0:	08 95       	ret

000004b2 <Response>:
}

void Response()						/* receive response from DHT11 */
{
	DDRD &= ~(1<<DHT11_PIN);
     4b2:	81 b3       	in	r24, 0x11	; 17
     4b4:	87 7f       	andi	r24, 0xF7	; 247
     4b6:	81 bb       	out	0x11, r24	; 17
	while(PIND & (1<<DHT11_PIN));
     4b8:	83 99       	sbic	0x10, 3	; 16
     4ba:	fe cf       	rjmp	.-4      	; 0x4b8 <Response+0x6>
	while((PIND & (1<<DHT11_PIN))==0);
     4bc:	83 9b       	sbis	0x10, 3	; 16
     4be:	fe cf       	rjmp	.-4      	; 0x4bc <Response+0xa>
	while(PIND & (1<<DHT11_PIN));
     4c0:	83 99       	sbic	0x10, 3	; 16
     4c2:	fe cf       	rjmp	.-4      	; 0x4c0 <Response+0xe>
}
     4c4:	08 95       	ret

000004c6 <Receive_data>:

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	19 c0       	rjmp	.+50     	; 0x4fe <Receive_data+0x38>
	{
		while((PIND & (1<<DHT11_PIN)) == 0);	/* check received bit 0 or 1 */
     4cc:	83 9b       	sbis	0x10, 3	; 16
     4ce:	fe cf       	rjmp	.-4      	; 0x4cc <Receive_data+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4d0:	8a e0       	ldi	r24, 0x0A	; 10
     4d2:	8a 95       	dec	r24
     4d4:	f1 f7       	brne	.-4      	; 0x4d2 <Receive_data+0xc>
		_delay_us(30);
		if(PIND & (1<<DHT11_PIN))				/* if high pulse is greater than 30ms */
     4d6:	83 9b       	sbis	0x10, 3	; 16
     4d8:	09 c0       	rjmp	.+18     	; 0x4ec <Receive_data+0x26>
		c = (c<<1)|(0x01);						/* then its logic HIGH */
     4da:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <__data_end>
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	88 0f       	add	r24, r24
     4e2:	99 1f       	adc	r25, r25
     4e4:	81 60       	ori	r24, 0x01	; 1
     4e6:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <__data_end>
     4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <Receive_data+0x30>
		else									/* otherwise its logic LOW */
		c = (c<<1);
     4ec:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <__data_end>
     4f0:	88 0f       	add	r24, r24
     4f2:	80 93 c8 01 	sts	0x01C8, r24	; 0x8001c8 <__data_end>
		while(PIND & (1<<DHT11_PIN));
     4f6:	83 99       	sbic	0x10, 3	; 16
     4f8:	fe cf       	rjmp	.-4      	; 0x4f6 <Receive_data+0x30>
	while(PIND & (1<<DHT11_PIN));
}

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4fa:	2f 5f       	subi	r18, 0xFF	; 255
     4fc:	3f 4f       	sbci	r19, 0xFF	; 255
     4fe:	28 30       	cpi	r18, 0x08	; 8
     500:	31 05       	cpc	r19, r1
     502:	24 f3       	brlt	.-56     	; 0x4cc <Receive_data+0x6>
		else									/* otherwise its logic LOW */
		c = (c<<1);
		while(PIND & (1<<DHT11_PIN));
	}
	return c;
     504:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <__data_end>
     508:	08 95       	ret

0000050a <adc_init>:

// initialize adc
void adc_init()
{
	// AREF = AVcc
	ADMUX = (1<<REFS0);
     50a:	80 e4       	ldi	r24, 0x40	; 64
     50c:	87 b9       	out	0x07, r24	; 7
	
	// ADC Enable and prescaler of 128
	// 16000000/128 = 125000
	ADCSRA = (1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     50e:	87 e8       	ldi	r24, 0x87	; 135
     510:	86 b9       	out	0x06, r24	; 6
     512:	08 95       	ret

00000514 <adc_read>:
uint16_t adc_read(uint8_t ch)
{
	// select the corresponding channel 0~7
	// ANDing with '7' will always keep the value
	// of 'ch' between 0 and 7
	ch &= 0b00000111;  // AND operation with 7
     514:	87 70       	andi	r24, 0x07	; 7
	ADMUX = (ADMUX & 0xF8)|ch;     // clears the bottom 3 bits before ORing
     516:	97 b1       	in	r25, 0x07	; 7
     518:	98 7f       	andi	r25, 0xF8	; 248
     51a:	89 2b       	or	r24, r25
     51c:	87 b9       	out	0x07, r24	; 7
	
	// start single conversion
	// write '1' to ADSC
	ADCSRA |= (1<<ADSC);
     51e:	86 b1       	in	r24, 0x06	; 6
     520:	80 64       	ori	r24, 0x40	; 64
     522:	86 b9       	out	0x06, r24	; 6
	
	// wait for conversion to complete
	// ADSC becomes '0' again
	// till then, run loop continuously
	while(ADCSRA & (1<<ADSC));
     524:	36 99       	sbic	0x06, 6	; 6
     526:	fe cf       	rjmp	.-4      	; 0x524 <adc_read+0x10>
	
	return (ADC);
     528:	84 b1       	in	r24, 0x04	; 4
     52a:	95 b1       	in	r25, 0x05	; 5
     52c:	08 95       	ret

0000052e <displayKey>:




int displayKey()
{
     52e:	4f 92       	push	r4
     530:	5f 92       	push	r5
     532:	6f 92       	push	r6
     534:	7f 92       	push	r7
     536:	8f 92       	push	r8
     538:	9f 92       	push	r9
     53a:	af 92       	push	r10
     53c:	bf 92       	push	r11
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	64 97       	sbiw	r28, 0x14	; 20
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	f8 94       	cli
     558:	de bf       	out	0x3e, r29	; 62
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     55e:	00 e0       	ldi	r16, 0x00	; 0
     560:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     562:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     566:	80 93 cd 01 	sts	0x01CD, r24	; 0x8001cd <key>
		lcddata(key);
     56a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     56e:	80 91 cd 01 	lds	r24, 0x01CD	; 0x8001cd <key>
     572:	83 32       	cpi	r24, 0x23	; 35
     574:	c9 f0       	breq	.+50     	; 0x5a8 <displayKey+0x7a>
		tmpNum = charToInt(key);
     576:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     57a:	f8 01       	movw	r30, r16
     57c:	ee 0f       	add	r30, r30
     57e:	ff 1f       	adc	r31, r31
     580:	21 e0       	ldi	r18, 0x01	; 1
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	2c 0f       	add	r18, r28
     586:	3d 1f       	adc	r19, r29
     588:	e2 0f       	add	r30, r18
     58a:	f3 1f       	adc	r31, r19
     58c:	91 83       	std	Z+1, r25	; 0x01
     58e:	80 83       	st	Z, r24
		i++;
     590:	0f 5f       	subi	r16, 0xFF	; 255
     592:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     594:	3f e5       	ldi	r19, 0x5F	; 95
     596:	8a ee       	ldi	r24, 0xEA	; 234
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	31 50       	subi	r19, 0x01	; 1
     59c:	80 40       	sbci	r24, 0x00	; 0
     59e:	90 40       	sbci	r25, 0x00	; 0
     5a0:	e1 f7       	brne	.-8      	; 0x59a <displayKey+0x6c>
     5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <displayKey+0x76>
     5a4:	00 00       	nop
     5a6:	dd cf       	rjmp	.-70     	; 0x562 <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     5a8:	58 01       	movw	r10, r16
     5aa:	21 e0       	ldi	r18, 0x01	; 1
     5ac:	a2 1a       	sub	r10, r18
     5ae:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     5b0:	e1 2c       	mov	r14, r1
     5b2:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     5b4:	81 2c       	mov	r8, r1
     5b6:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     5b8:	3b c0       	rjmp	.+118    	; 0x630 <displayKey+0x102>
		num += data[j]*pow(10,k);
     5ba:	f7 01       	movw	r30, r14
     5bc:	ee 0f       	add	r30, r30
     5be:	ff 1f       	adc	r31, r31
     5c0:	81 e0       	ldi	r24, 0x01	; 1
     5c2:	90 e0       	ldi	r25, 0x00	; 0
     5c4:	8c 0f       	add	r24, r28
     5c6:	9d 1f       	adc	r25, r29
     5c8:	e8 0f       	add	r30, r24
     5ca:	f9 1f       	adc	r31, r25
     5cc:	c0 80       	ld	r12, Z
     5ce:	d1 80       	ldd	r13, Z+1	; 0x01
     5d0:	b5 01       	movw	r22, r10
     5d2:	0b 2c       	mov	r0, r11
     5d4:	00 0c       	add	r0, r0
     5d6:	88 0b       	sbc	r24, r24
     5d8:	99 0b       	sbc	r25, r25
     5da:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__floatsisf>
     5de:	9b 01       	movw	r18, r22
     5e0:	ac 01       	movw	r20, r24
     5e2:	60 e0       	ldi	r22, 0x00	; 0
     5e4:	70 e0       	ldi	r23, 0x00	; 0
     5e6:	80 e2       	ldi	r24, 0x20	; 32
     5e8:	91 e4       	ldi	r25, 0x41	; 65
     5ea:	0e 94 ce 07 	call	0xf9c	; 0xf9c <pow>
     5ee:	2b 01       	movw	r4, r22
     5f0:	3c 01       	movw	r6, r24
     5f2:	b6 01       	movw	r22, r12
     5f4:	dd 0c       	add	r13, r13
     5f6:	88 0b       	sbc	r24, r24
     5f8:	99 0b       	sbc	r25, r25
     5fa:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__floatsisf>
     5fe:	a3 01       	movw	r20, r6
     600:	92 01       	movw	r18, r4
     602:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
     606:	2b 01       	movw	r4, r22
     608:	3c 01       	movw	r6, r24
     60a:	b4 01       	movw	r22, r8
     60c:	99 0c       	add	r9, r9
     60e:	88 0b       	sbc	r24, r24
     610:	99 0b       	sbc	r25, r25
     612:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__floatsisf>
     616:	a3 01       	movw	r20, r6
     618:	92 01       	movw	r18, r4
     61a:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__addsf3>
     61e:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__fixsfsi>
     622:	4b 01       	movw	r8, r22
		k--;
     624:	91 e0       	ldi	r25, 0x01	; 1
     626:	a9 1a       	sub	r10, r25
     628:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     62a:	2f ef       	ldi	r18, 0xFF	; 255
     62c:	e2 1a       	sub	r14, r18
     62e:	f2 0a       	sbc	r15, r18
     630:	e0 16       	cp	r14, r16
     632:	f1 06       	cpc	r15, r17
     634:	14 f2       	brlt	.-124    	; 0x5ba <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     63c:	c4 01       	movw	r24, r8
     63e:	64 96       	adiw	r28, 0x14	; 20
     640:	0f b6       	in	r0, 0x3f	; 63
     642:	f8 94       	cli
     644:	de bf       	out	0x3e, r29	; 62
     646:	0f be       	out	0x3f, r0	; 63
     648:	cd bf       	out	0x3d, r28	; 61
     64a:	df 91       	pop	r29
     64c:	cf 91       	pop	r28
     64e:	1f 91       	pop	r17
     650:	0f 91       	pop	r16
     652:	ff 90       	pop	r15
     654:	ef 90       	pop	r14
     656:	df 90       	pop	r13
     658:	cf 90       	pop	r12
     65a:	bf 90       	pop	r11
     65c:	af 90       	pop	r10
     65e:	9f 90       	pop	r9
     660:	8f 90       	pop	r8
     662:	7f 90       	pop	r7
     664:	6f 90       	pop	r6
     666:	5f 90       	pop	r5
     668:	4f 90       	pop	r4
     66a:	08 95       	ret

0000066c <ldrconfig>:


int ldrconfig()
{
     66c:	cf 93       	push	r28
     66e:	df 93       	push	r29
     670:	cd b7       	in	r28, 0x3d	; 61
     672:	de b7       	in	r29, 0x3e	; 62
     674:	2a 97       	sbiw	r28, 0x0a	; 10
     676:	0f b6       	in	r0, 0x3f	; 63
     678:	f8 94       	cli
     67a:	de bf       	out	0x3e, r29	; 62
     67c:	0f be       	out	0x3f, r0	; 63
     67e:	cd bf       	out	0x3d, r28	; 61
	float ldr;
	char buffer[10];
	//DDRC = 0x01;           // to connect led to PC0
	
	// initialize adc and lcd
	adc_init();
     680:	0e 94 85 02 	call	0x50a	; 0x50a <adc_init>
	lcd_clear();
     684:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
     688:	81 ee       	ldi	r24, 0xE1	; 225
     68a:	94 e0       	ldi	r25, 0x04	; 4
     68c:	01 97       	sbiw	r24, 0x01	; 1
     68e:	f1 f7       	brne	.-4      	; 0x68c <ldrconfig+0x20>
     690:	00 c0       	rjmp	.+0      	; 0x692 <ldrconfig+0x26>
     692:	00 00       	nop
	
	_delay_ms(5);
	
	while(1)
	{
		adc_result0 = adc_read(0);
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	0e 94 8a 02 	call	0x514	; 0x514 <adc_read>
		i=(adc_result0*0.01/2.1);
     69a:	bc 01       	movw	r22, r24
     69c:	80 e0       	ldi	r24, 0x00	; 0
     69e:	90 e0       	ldi	r25, 0x00	; 0
     6a0:	0e 94 d3 06 	call	0xda6	; 0xda6 <__floatunsisf>
     6a4:	2a e0       	ldi	r18, 0x0A	; 10
     6a6:	37 ed       	ldi	r19, 0xD7	; 215
     6a8:	43 e2       	ldi	r20, 0x23	; 35
     6aa:	5c e3       	ldi	r21, 0x3C	; 60
     6ac:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
     6b0:	26 e6       	ldi	r18, 0x66	; 102
     6b2:	36 e6       	ldi	r19, 0x66	; 102
     6b4:	46 e0       	ldi	r20, 0x06	; 6
     6b6:	50 e4       	ldi	r21, 0x40	; 64
     6b8:	0e 94 2b 06 	call	0xc56	; 0xc56 <__divsf3>
     6bc:	6b 01       	movw	r12, r22
     6be:	7c 01       	movw	r14, r24
		ldr = (i*10.0/(5.0-i));     // read adc value at PA0
     6c0:	20 e0       	ldi	r18, 0x00	; 0
     6c2:	30 e0       	ldi	r19, 0x00	; 0
     6c4:	40 e2       	ldi	r20, 0x20	; 32
     6c6:	51 e4       	ldi	r21, 0x41	; 65
     6c8:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
     6cc:	4b 01       	movw	r8, r22
     6ce:	5c 01       	movw	r10, r24
     6d0:	a7 01       	movw	r20, r14
     6d2:	96 01       	movw	r18, r12
     6d4:	60 e0       	ldi	r22, 0x00	; 0
     6d6:	70 e0       	ldi	r23, 0x00	; 0
     6d8:	80 ea       	ldi	r24, 0xA0	; 160
     6da:	90 e4       	ldi	r25, 0x40	; 64
     6dc:	0e 94 be 05 	call	0xb7c	; 0xb7c <__subsf3>
     6e0:	9b 01       	movw	r18, r22
     6e2:	ac 01       	movw	r20, r24
     6e4:	c5 01       	movw	r24, r10
     6e6:	b4 01       	movw	r22, r8
     6e8:	0e 94 2b 06 	call	0xc56	; 0xc56 <__divsf3>
     6ec:	6b 01       	movw	r12, r22
     6ee:	7c 01       	movw	r14, r24
		//ldr = (i*10/(5-i));
		
		
		
		
		lcd_line_one();
     6f0:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
		lcd_string("LDR VAL:",9);
     6f4:	69 e0       	ldi	r22, 0x09	; 9
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		itoa(ldr,buffer,10);   //display ADC value
     6fe:	c7 01       	movw	r24, r14
     700:	b6 01       	movw	r22, r12
     702:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__fixsfsi>
     706:	dc 01       	movw	r26, r24
     708:	cb 01       	movw	r24, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     70a:	4a e0       	ldi	r20, 0x0A	; 10
     70c:	be 01       	movw	r22, r28
     70e:	6f 5f       	subi	r22, 0xFF	; 255
     710:	7f 4f       	sbci	r23, 0xFF	; 255
     712:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
		lcd_string(buffer,5);
     716:	65 e0       	ldi	r22, 0x05	; 5
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     720:	83 ec       	ldi	r24, 0xC3	; 195
     722:	99 e0       	ldi	r25, 0x09	; 9
     724:	01 97       	sbiw	r24, 0x01	; 1
     726:	f1 f7       	brne	.-4      	; 0x724 <ldrconfig+0xb8>
     728:	00 c0       	rjmp	.+0      	; 0x72a <ldrconfig+0xbe>
     72a:	00 00       	nop
     72c:	b3 cf       	rjmp	.-154    	; 0x694 <ldrconfig+0x28>

0000072e <main>:

int ldrconfig();

int main(void)

{
     72e:	cf 93       	push	r28
     730:	df 93       	push	r29
     732:	cd b7       	in	r28, 0x3d	; 61
     734:	de b7       	in	r29, 0x3e	; 62
     736:	2e 97       	sbiw	r28, 0x0e	; 14
     738:	0f b6       	in	r0, 0x3f	; 63
     73a:	f8 94       	cli
     73c:	de bf       	out	0x3e, r29	; 62
     73e:	0f be       	out	0x3f, r0	; 63
     740:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     742:	8f ef       	ldi	r24, 0xFF	; 255
     744:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     746:	87 e0       	ldi	r24, 0x07	; 7
     748:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     74a:	80 ef       	ldi	r24, 0xF0	; 240
     74c:	81 bb       	out	0x11, r24	; 17

	char key;
	char numberString[4];

	lcdint();
     74e:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     752:	6e e0       	ldi	r22, 0x0E	; 14
     754:	89 e0       	ldi	r24, 0x09	; 9
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     75c:	2f e7       	ldi	r18, 0x7F	; 127
     75e:	89 ea       	ldi	r24, 0xA9	; 169
     760:	93 e0       	ldi	r25, 0x03	; 3
     762:	21 50       	subi	r18, 0x01	; 1
     764:	80 40       	sbci	r24, 0x00	; 0
     766:	90 40       	sbci	r25, 0x00	; 0
     768:	e1 f7       	brne	.-8      	; 0x762 <main+0x34>
     76a:	00 c0       	rjmp	.+0      	; 0x76c <main+0x3e>
     76c:	00 00       	nop
	_delay_ms(1200);
	lcd_line_two();
     76e:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("from ~GROUP 06~",16);
     772:	60 e1       	ldi	r22, 0x10	; 16
     774:	89 e1       	ldi	r24, 0x19	; 25
     776:	91 e0       	ldi	r25, 0x01	; 1
     778:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     77c:	2f e3       	ldi	r18, 0x3F	; 63
     77e:	8d e0       	ldi	r24, 0x0D	; 13
     780:	93 e0       	ldi	r25, 0x03	; 3
     782:	21 50       	subi	r18, 0x01	; 1
     784:	80 40       	sbci	r24, 0x00	; 0
     786:	90 40       	sbci	r25, 0x00	; 0
     788:	e1 f7       	brne	.-8      	; 0x782 <main+0x54>
     78a:	00 c0       	rjmp	.+0      	; 0x78c <main+0x5e>
     78c:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clear();
     78e:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
	lcd_line_one();
     792:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
	lcd_string("ENTER 1 TO",10);
     796:	6a e0       	ldi	r22, 0x0A	; 10
     798:	89 e2       	ldi	r24, 0x29	; 41
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     7a0:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("INSTRUCTIONS",12);
     7a4:	6c e0       	ldi	r22, 0x0C	; 12
     7a6:	84 e3       	ldi	r24, 0x34	; 52
     7a8:	91 e0       	ldi	r25, 0x01	; 1
     7aa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     7ae:	2f e7       	ldi	r18, 0x7F	; 127
     7b0:	89 ea       	ldi	r24, 0xA9	; 169
     7b2:	93 e0       	ldi	r25, 0x03	; 3
     7b4:	21 50       	subi	r18, 0x01	; 1
     7b6:	80 40       	sbci	r24, 0x00	; 0
     7b8:	90 40       	sbci	r25, 0x00	; 0
     7ba:	e1 f7       	brne	.-8      	; 0x7b4 <main+0x86>
     7bc:	00 c0       	rjmp	.+0      	; 0x7be <main+0x90>
     7be:	00 00       	nop

	
	while(1)
	{
		
		lcd_clear();
     7c0:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     7c4:	6f e0       	ldi	r22, 0x0F	; 15
     7c6:	81 e4       	ldi	r24, 0x41	; 65
     7c8:	91 e0       	ldi	r25, 0x01	; 1
     7ca:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		key = scankey();
     7ce:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
		char data[5];
		
		switch(key)
     7d2:	83 33       	cpi	r24, 0x33	; 51
     7d4:	09 f4       	brne	.+2      	; 0x7d8 <main+0xaa>
     7d6:	57 c0       	rjmp	.+174    	; 0x886 <__EEPROM_REGION_LENGTH__+0x86>
     7d8:	28 f4       	brcc	.+10     	; 0x7e4 <main+0xb6>
     7da:	81 33       	cpi	r24, 0x31	; 49
     7dc:	51 f0       	breq	.+20     	; 0x7f2 <main+0xc4>
     7de:	82 33       	cpi	r24, 0x32	; 50
     7e0:	81 f0       	breq	.+32     	; 0x802 <__EEPROM_REGION_LENGTH__+0x2>
     7e2:	ee cf       	rjmp	.-36     	; 0x7c0 <main+0x92>
     7e4:	84 33       	cpi	r24, 0x34	; 52
     7e6:	09 f4       	brne	.+2      	; 0x7ea <main+0xbc>
     7e8:	ed c0       	rjmp	.+474    	; 0x9c4 <__EEPROM_REGION_LENGTH__+0x1c4>
     7ea:	85 33       	cpi	r24, 0x35	; 53
     7ec:	09 f4       	brne	.+2      	; 0x7f0 <main+0xc2>
     7ee:	c4 c1       	rjmp	.+904    	; 0xb78 <__EEPROM_REGION_LENGTH__+0x378>
     7f0:	e7 cf       	rjmp	.-50     	; 0x7c0 <main+0x92>
		{
			case '1':
				lcd_clear();
     7f2:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     7f6:	6c e0       	ldi	r22, 0x0C	; 12
     7f8:	84 e3       	ldi	r24, 0x34	; 52
     7fa:	91 e0       	ldi	r25, 0x01	; 1
     7fc:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				break;
     800:	df cf       	rjmp	.-66     	; 0x7c0 <main+0x92>
			case '2':
				lcd_clear();
     802:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();
     806:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("ENTER PLANT",11);
     80a:	6b e0       	ldi	r22, 0x0B	; 11
     80c:	80 e5       	ldi	r24, 0x50	; 80
     80e:	91 e0       	ldi	r25, 0x01	; 1
     810:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcd_line_two();
     814:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
				lcd_string("COUNT: ",7);
     818:	67 e0       	ldi	r22, 0x07	; 7
     81a:	8c e5       	ldi	r24, 0x5C	; 92
     81c:	91 e0       	ldi	r25, 0x01	; 1
     81e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				key = scankey();
     822:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
				if(key == '*') break;
     826:	8a 32       	cpi	r24, 0x2A	; 42
     828:	59 f2       	breq	.-106    	; 0x7c0 <main+0x92>
				int plantCount = displayKey();
     82a:	0e 94 97 02 	call	0x52e	; 0x52e <displayKey>
				
				char text[10];
				sprintf(text, "%d", plantCount);
     82e:	9f 93       	push	r25
     830:	8f 93       	push	r24
     832:	84 e6       	ldi	r24, 0x64	; 100
     834:	91 e0       	ldi	r25, 0x01	; 1
     836:	9f 93       	push	r25
     838:	8f 93       	push	r24
     83a:	8e 01       	movw	r16, r28
     83c:	0b 5f       	subi	r16, 0xFB	; 251
     83e:	1f 4f       	sbci	r17, 0xFF	; 255
     840:	1f 93       	push	r17
     842:	0f 93       	push	r16
     844:	0e 94 a2 09 	call	0x1344	; 0x1344 <sprintf>
				
				lcdcmd(0x01);
     848:	81 e0       	ldi	r24, 0x01	; 1
     84a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("PLANT COUNT IS",15);
     84e:	6f e0       	ldi	r22, 0x0F	; 15
     850:	87 e6       	ldi	r24, 0x67	; 103
     852:	91 e0       	ldi	r25, 0x01	; 1
     854:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcdcmd(0xC0);
     858:	80 ec       	ldi	r24, 0xC0	; 192
     85a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string(text,10);
     85e:	6a e0       	ldi	r22, 0x0A	; 10
     860:	c8 01       	movw	r24, r16
     862:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     866:	2f e3       	ldi	r18, 0x3F	; 63
     868:	8d e0       	ldi	r24, 0x0D	; 13
     86a:	93 e0       	ldi	r25, 0x03	; 3
     86c:	21 50       	subi	r18, 0x01	; 1
     86e:	80 40       	sbci	r24, 0x00	; 0
     870:	90 40       	sbci	r25, 0x00	; 0
     872:	e1 f7       	brne	.-8      	; 0x86c <__EEPROM_REGION_LENGTH__+0x6c>
     874:	00 c0       	rjmp	.+0      	; 0x876 <__EEPROM_REGION_LENGTH__+0x76>
     876:	00 00       	nop
     878:	0f 90       	pop	r0
     87a:	0f 90       	pop	r0
     87c:	0f 90       	pop	r0
     87e:	0f 90       	pop	r0
     880:	0f 90       	pop	r0
     882:	0f 90       	pop	r0
     884:	9d cf       	rjmp	.-198    	; 0x7c0 <main+0x92>
     886:	87 ea       	ldi	r24, 0xA7	; 167
     888:	91 e6       	ldi	r25, 0x61	; 97
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	f1 f7       	brne	.-4      	; 0x88a <__EEPROM_REGION_LENGTH__+0x8a>
     88e:	00 c0       	rjmp	.+0      	; 0x890 <__EEPROM_REGION_LENGTH__+0x90>
     890:	00 00       	nop
					
					uint16_t r;
					
					_delay_ms(100);

					lcd_clear();
     892:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					
					
					HCSR04Init();
     896:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HCSR04Init>

					while(1)
					{	
						HCSR04Trigger();              
     89a:	0e 94 6d 01 	call	0x2da	; 0x2da <HCSR04Trigger>
						r=GetPulseWidth();
     89e:	0e 94 77 01 	call	0x2ee	; 0x2ee <GetPulseWidth>
						if(r==US_ERROR) 
     8a2:	6f 3f       	cpi	r22, 0xFF	; 255
     8a4:	2f ef       	ldi	r18, 0xFF	; 255
     8a6:	72 07       	cpc	r23, r18
     8a8:	89 f4       	brne	.+34     	; 0x8cc <__EEPROM_REGION_LENGTH__+0xcc>
						{
							lcd_clear();
     8aa:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							lcd_string("E!",2);
     8ae:	62 e0       	ldi	r22, 0x02	; 2
     8b0:	86 e1       	ldi	r24, 0x16	; 22
     8b2:	91 e0       	ldi	r25, 0x01	; 1
     8b4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     8b8:	8f e3       	ldi	r24, 0x3F	; 63
     8ba:	9d e0       	ldi	r25, 0x0D	; 13
     8bc:	23 e0       	ldi	r18, 0x03	; 3
     8be:	81 50       	subi	r24, 0x01	; 1
     8c0:	90 40       	sbci	r25, 0x00	; 0
     8c2:	20 40       	sbci	r18, 0x00	; 0
     8c4:	e1 f7       	brne	.-8      	; 0x8be <__EEPROM_REGION_LENGTH__+0xbe>
     8c6:	00 c0       	rjmp	.+0      	; 0x8c8 <__EEPROM_REGION_LENGTH__+0xc8>
     8c8:	00 00       	nop
     8ca:	e7 cf       	rjmp	.-50     	; 0x89a <__EEPROM_REGION_LENGTH__+0x9a>
							
						}
						else
						{
							
							distance=50-(r*0.034/2.0);	
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	0e 94 d3 06 	call	0xda6	; 0xda6 <__floatunsisf>
     8d4:	26 e9       	ldi	r18, 0x96	; 150
     8d6:	33 e4       	ldi	r19, 0x43	; 67
     8d8:	4b e0       	ldi	r20, 0x0B	; 11
     8da:	5d e3       	ldi	r21, 0x3D	; 61
     8dc:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	5f e3       	ldi	r21, 0x3F	; 63
     8e8:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
     8ec:	9b 01       	movw	r18, r22
     8ee:	ac 01       	movw	r20, r24
     8f0:	60 e0       	ldi	r22, 0x00	; 0
     8f2:	70 e0       	ldi	r23, 0x00	; 0
     8f4:	88 e4       	ldi	r24, 0x48	; 72
     8f6:	92 e4       	ldi	r25, 0x42	; 66
     8f8:	0e 94 be 05 	call	0xb7c	; 0xb7c <__subsf3>
     8fc:	0e 94 9d 06 	call	0xd3a	; 0xd3a <__fixsfsi>
     900:	70 93 cc 01 	sts	0x01CC, r23	; 0x8001cc <distance+0x1>
     904:	60 93 cb 01 	sts	0x01CB, r22	; 0x8001cb <distance>
							
							
							
							if (distance != previous_distance)    
     908:	20 91 c9 01 	lds	r18, 0x01C9	; 0x8001c9 <previous_distance>
     90c:	30 91 ca 01 	lds	r19, 0x01CA	; 0x8001ca <previous_distance+0x1>
     910:	26 17       	cp	r18, r22
     912:	37 07       	cpc	r19, r23
     914:	11 f0       	breq	.+4      	; 0x91a <__EEPROM_REGION_LENGTH__+0x11a>
							{
								lcd_clear();
     916:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							}
							
	
							
							lcd_line_one();
     91a:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
							lcd_string("WATER LV =",11);
     91e:	6b e0       	ldi	r22, 0x0B	; 11
     920:	86 e7       	ldi	r24, 0x76	; 118
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     928:	4a e0       	ldi	r20, 0x0A	; 10
     92a:	be 01       	movw	r22, r28
     92c:	6f 5f       	subi	r22, 0xFF	; 255
     92e:	7f 4f       	sbci	r23, 0xFF	; 255
     930:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <distance>
     934:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <distance+0x1>
     938:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
							
							itoa(distance, numberString, 10);   
							lcd_string(numberString,3);
     93c:	63 e0       	ldi	r22, 0x03	; 3
     93e:	ce 01       	movw	r24, r28
     940:	01 96       	adiw	r24, 0x01	; 1
     942:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

							lcd_string("cm",2);
     946:	62 e0       	ldi	r22, 0x02	; 2
     948:	81 e8       	ldi	r24, 0x81	; 129
     94a:	91 e0       	ldi	r25, 0x01	; 1
     94c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
							
							
							previous_distance = distance;
     950:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <distance>
     954:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <distance+0x1>
     958:	90 93 ca 01 	sts	0x01CA, r25	; 0x8001ca <previous_distance+0x1>
     95c:	80 93 c9 01 	sts	0x01C9, r24	; 0x8001c9 <previous_distance>
     960:	8b e4       	ldi	r24, 0x4B	; 75
     962:	9d e1       	ldi	r25, 0x1D	; 29
     964:	01 97       	sbiw	r24, 0x01	; 1
     966:	f1 f7       	brne	.-4      	; 0x964 <__EEPROM_REGION_LENGTH__+0x164>
     968:	00 c0       	rjmp	.+0      	; 0x96a <__EEPROM_REGION_LENGTH__+0x16a>
     96a:	00 00       	nop
							_delay_ms(30);
							
							if(distance<10)
     96c:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <distance>
     970:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <distance+0x1>
     974:	0a 97       	sbiw	r24, 0x0a	; 10
     976:	3c f4       	brge	.+14     	; 0x986 <__EEPROM_REGION_LENGTH__+0x186>
							{
								lcd_line_two();
     978:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("WATER LOW!!!",13);
     97c:	6d e0       	ldi	r22, 0x0D	; 13
     97e:	84 e8       	ldi	r24, 0x84	; 132
     980:	91 e0       	ldi	r25, 0x01	; 1
     982:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(1<<PINA0);
								
							}
							if(distance>=10)
     986:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <distance>
     98a:	90 91 cc 01 	lds	r25, 0x01CC	; 0x8001cc <distance+0x1>
     98e:	0a 97       	sbiw	r24, 0x0a	; 10
     990:	3c f0       	brlt	.+14     	; 0x9a0 <__EEPROM_REGION_LENGTH__+0x1a0>
							{
								lcd_line_two();
     992:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("ENOUGH WATER",12);
     996:	6c e0       	ldi	r22, 0x0C	; 12
     998:	81 e9       	ldi	r24, 0x91	; 145
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(0<<PINA0);
								
							}
							key = scankey();
     9a0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
							if(key == '*') break;
     9a4:	8a 32       	cpi	r24, 0x2A	; 42
     9a6:	51 f0       	breq	.+20     	; 0x9bc <__EEPROM_REGION_LENGTH__+0x1bc>
     9a8:	9f e7       	ldi	r25, 0x7F	; 127
     9aa:	29 ea       	ldi	r18, 0xA9	; 169
     9ac:	83 e0       	ldi	r24, 0x03	; 3
     9ae:	91 50       	subi	r25, 0x01	; 1
     9b0:	20 40       	sbci	r18, 0x00	; 0
     9b2:	80 40       	sbci	r24, 0x00	; 0
     9b4:	e1 f7       	brne	.-8      	; 0x9ae <__EEPROM_REGION_LENGTH__+0x1ae>
     9b6:	00 c0       	rjmp	.+0      	; 0x9b8 <__EEPROM_REGION_LENGTH__+0x1b8>
     9b8:	00 00       	nop
     9ba:	6f cf       	rjmp	.-290    	; 0x89a <__EEPROM_REGION_LENGTH__+0x9a>
							_delay_ms(1200);
							
						}
					}
					
				if(key == '*') break;
     9bc:	8a 32       	cpi	r24, 0x2A	; 42
     9be:	09 f0       	breq	.+2      	; 0x9c2 <__EEPROM_REGION_LENGTH__+0x1c2>
     9c0:	62 cf       	rjmp	.-316    	; 0x886 <__EEPROM_REGION_LENGTH__+0x86>
     9c2:	fe ce       	rjmp	.-516    	; 0x7c0 <main+0x92>
				}
			break;		
			
			case '4':
				
				DDRE=0xff;
     9c4:	8f ef       	ldi	r24, 0xFF	; 255
     9c6:	82 b9       	out	0x02, r24	; 2
				while(1)
				{
					lcd_clear();				/* clear LCD */
     9c8:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					lcd_line_one();		/* enter column and row position */
     9cc:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
					Request();				/* send start pulse */
     9d0:	0e 94 49 02 	call	0x492	; 0x492 <Request>
					Response();				/* receive response */
     9d4:	0e 94 59 02 	call	0x4b2	; 0x4b2 <Response>
					I_RH=Receive_data();	/* store first eight bit in I_RH */
     9d8:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     9dc:	80 93 d1 01 	sts	0x01D1, r24	; 0x8001d1 <I_RH>
					D_RH=Receive_data();	/* store next eight bit in D_RH */
     9e0:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     9e4:	80 93 ce 01 	sts	0x01CE, r24	; 0x8001ce <D_RH>
					I_Temp=Receive_data();	/* store next eight bit in I_Temp */
     9e8:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     9ec:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <I_Temp>
					D_Temp=Receive_data();	/* store next eight bit in D_Temp */
     9f0:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     9f4:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <D_Temp>
					CheckSum=Receive_data();/* store next eight bit in CheckSum */
     9f8:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     9fc:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <CheckSum>
		
					if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
     a00:	e0 91 d1 01 	lds	r30, 0x01D1	; 0x8001d1 <I_RH>
     a04:	f0 e0       	ldi	r31, 0x00	; 0
     a06:	90 91 ce 01 	lds	r25, 0x01CE	; 0x8001ce <D_RH>
     a0a:	9f 01       	movw	r18, r30
     a0c:	29 0f       	add	r18, r25
     a0e:	31 1d       	adc	r19, r1
     a10:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <I_Temp>
     a14:	29 0f       	add	r18, r25
     a16:	31 1d       	adc	r19, r1
     a18:	90 91 d2 01 	lds	r25, 0x01D2	; 0x8001d2 <D_Temp>
     a1c:	29 0f       	add	r18, r25
     a1e:	31 1d       	adc	r19, r1
     a20:	48 2f       	mov	r20, r24
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	24 17       	cp	r18, r20
     a26:	35 07       	cpc	r19, r21
     a28:	31 f0       	breq	.+12     	; 0xa36 <__EEPROM_REGION_LENGTH__+0x236>
					{
						//lcd_gotoxy(0,0);
						lcd_string("Error",5);
     a2a:	65 e0       	ldi	r22, 0x05	; 5
     a2c:	8e e9       	ldi	r24, 0x9E	; 158
     a2e:	91 e0       	ldi	r25, 0x01	; 1
     a30:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     a34:	59 c0       	rjmp	.+178    	; 0xae8 <__EEPROM_REGION_LENGTH__+0x2e8>
     a36:	4a e0       	ldi	r20, 0x0A	; 10
     a38:	be 01       	movw	r22, r28
     a3a:	6b 5f       	subi	r22, 0xFB	; 251
     a3c:	7f 4f       	sbci	r23, 0xFF	; 255
     a3e:	cf 01       	movw	r24, r30
     a40:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
		
					else
					{
						itoa(I_RH,data,10);
						//lcd_gotoxy(2,0);
						lcd_string("H=",2);
     a44:	62 e0       	ldi	r22, 0x02	; 2
     a46:	84 ea       	ldi	r24, 0xA4	; 164
     a48:	91 e0       	ldi	r25, 0x01	; 1
     a4a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(data,2);
     a4e:	62 e0       	ldi	r22, 0x02	; 2
     a50:	ce 01       	movw	r24, r28
     a52:	05 96       	adiw	r24, 0x05	; 5
     a54:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     a58:	61 e0       	ldi	r22, 0x01	; 1
     a5a:	87 ea       	ldi	r24, 0xA7	; 167
     a5c:	91 e0       	ldi	r25, 0x01	; 1
     a5e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_RH,data,10);
     a62:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <D_RH>
     a66:	4a e0       	ldi	r20, 0x0A	; 10
     a68:	be 01       	movw	r22, r28
     a6a:	6b 5f       	subi	r22, 0xFB	; 251
     a6c:	7f 4f       	sbci	r23, 0xFF	; 255
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
						
						lcd_string(data,2);
     a74:	62 e0       	ldi	r22, 0x02	; 2
     a76:	ce 01       	movw	r24, r28
     a78:	05 96       	adiw	r24, 0x05	; 5
     a7a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string("%",1);
     a7e:	61 e0       	ldi	r22, 0x01	; 1
     a80:	89 ea       	ldi	r24, 0xA9	; 169
     a82:	91 e0       	ldi	r25, 0x01	; 1
     a84:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

						
						itoa(I_Temp,data,10);
     a88:	80 91 d0 01 	lds	r24, 0x01D0	; 0x8001d0 <I_Temp>
     a8c:	4a e0       	ldi	r20, 0x0A	; 10
     a8e:	be 01       	movw	r22, r28
     a90:	6b 5f       	subi	r22, 0xFB	; 251
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
						//lcd_gotoxy(10,0);
						lcd_string("T=",2);
     a9a:	62 e0       	ldi	r22, 0x02	; 2
     a9c:	8b ea       	ldi	r24, 0xAB	; 171
     a9e:	91 e0       	ldi	r25, 0x01	; 1
     aa0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(data,2);
     aa4:	62 e0       	ldi	r22, 0x02	; 2
     aa6:	ce 01       	movw	r24, r28
     aa8:	05 96       	adiw	r24, 0x05	; 5
     aaa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     aae:	61 e0       	ldi	r22, 0x01	; 1
     ab0:	87 ea       	ldi	r24, 0xA7	; 167
     ab2:	91 e0       	ldi	r25, 0x01	; 1
     ab4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_Temp,data,10);
     ab8:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <D_Temp>
     abc:	4a e0       	ldi	r20, 0x0A	; 10
     abe:	be 01       	movw	r22, r28
     ac0:	6b 5f       	subi	r22, 0xFB	; 251
     ac2:	7f 4f       	sbci	r23, 0xFF	; 255
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__itoa_ncheck>
						lcd_string(data,2);
     aca:	62 e0       	ldi	r22, 0x02	; 2
     acc:	ce 01       	movw	r24, r28
     ace:	05 96       	adiw	r24, 0x05	; 5
     ad0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcddata(0xDF);
     ad4:	8f ed       	ldi	r24, 0xDF	; 223
     ad6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
						lcd_string("C ",2);
     ada:	62 e0       	ldi	r22, 0x02	; 2
     adc:	8e ea       	ldi	r24, 0xAE	; 174
     ade:	91 e0       	ldi	r25, 0x01	; 1
     ae0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						
						lcd_line_two();
     ae4:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
     ae8:	9f e9       	ldi	r25, 0x9F	; 159
     aea:	26 e8       	ldi	r18, 0x86	; 134
     aec:	81 e0       	ldi	r24, 0x01	; 1
     aee:	91 50       	subi	r25, 0x01	; 1
     af0:	20 40       	sbci	r18, 0x00	; 0
     af2:	80 40       	sbci	r24, 0x00	; 0
     af4:	e1 f7       	brne	.-8      	; 0xaee <__EEPROM_REGION_LENGTH__+0x2ee>
     af6:	00 c0       	rjmp	.+0      	; 0xaf8 <__EEPROM_REGION_LENGTH__+0x2f8>
     af8:	00 00       	nop
						lcd_print(" ");*/
					}
		
					_delay_ms(500);
		
					if ((I_Temp + D_Temp) <= 24)
     afa:	20 91 d0 01 	lds	r18, 0x01D0	; 0x8001d0 <I_Temp>
     afe:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <D_Temp>
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	82 0f       	add	r24, r18
     b06:	91 1d       	adc	r25, r1
     b08:	49 97       	sbiw	r24, 0x19	; 25
     b0a:	2c f4       	brge	.+10     	; 0xb16 <__EEPROM_REGION_LENGTH__+0x316>
					{
						lcd_string("H ON  ",6);
     b0c:	66 e0       	ldi	r22, 0x06	; 6
     b0e:	81 eb       	ldi	r24, 0xB1	; 177
     b10:	91 e0       	ldi	r25, 0x01	; 1
     b12:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						//DDRB |= (1<<0);
			
			
					}
					if ((I_Temp + D_Temp) >= 30)
     b16:	20 91 d0 01 	lds	r18, 0x01D0	; 0x8001d0 <I_Temp>
     b1a:	80 91 d2 01 	lds	r24, 0x01D2	; 0x8001d2 <D_Temp>
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	82 0f       	add	r24, r18
     b22:	91 1d       	adc	r25, r1
     b24:	4e 97       	sbiw	r24, 0x1e	; 30
     b26:	2c f0       	brlt	.+10     	; 0xb32 <__EEPROM_REGION_LENGTH__+0x332>
					{
			
			
						//lcd_gotoxy(5,1);
						lcd_string("FA ON  ",7);
     b28:	67 e0       	ldi	r22, 0x07	; 7
     b2a:	88 eb       	ldi	r24, 0xB8	; 184
     b2c:	91 e0       	ldi	r25, 0x01	; 1
     b2e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						//PORTB=(1<<PINB1);
						//PORTC=(1<<PINC0);
						//DDRB |= (1<<1);
			
					}
					if ((I_RH + D_RH ) <=75)
     b32:	20 91 d1 01 	lds	r18, 0x01D1	; 0x8001d1 <I_RH>
     b36:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <D_RH>
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	82 0f       	add	r24, r18
     b3e:	91 1d       	adc	r25, r1
     b40:	8c 34       	cpi	r24, 0x4C	; 76
     b42:	91 05       	cpc	r25, r1
     b44:	2c f4       	brge	.+10     	; 0xb50 <__EEPROM_REGION_LENGTH__+0x350>
					{
			
						//lcd_gotoxy(11,1);
						lcd_string("FO ON  ",7);
     b46:	67 e0       	ldi	r22, 0x07	; 7
     b48:	80 ec       	ldi	r24, 0xC0	; 192
     b4a:	91 e0       	ldi	r25, 0x01	; 1
     b4c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     b50:	87 ea       	ldi	r24, 0xA7	; 167
     b52:	91 e6       	ldi	r25, 0x61	; 97
     b54:	01 97       	sbiw	r24, 0x01	; 1
     b56:	f1 f7       	brne	.-4      	; 0xb54 <__EEPROM_REGION_LENGTH__+0x354>
     b58:	00 c0       	rjmp	.+0      	; 0xb5a <__EEPROM_REGION_LENGTH__+0x35a>
     b5a:	00 00       	nop
						PORTE=(0<<PINE0);

			
					}*/
					_delay_ms(100);
					key = scankey();
     b5c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
					if(key == '*') break;
     b60:	8a 32       	cpi	r24, 0x2A	; 42
     b62:	51 f0       	breq	.+20     	; 0xb78 <__EEPROM_REGION_LENGTH__+0x378>
     b64:	9f e7       	ldi	r25, 0x7F	; 127
     b66:	29 ea       	ldi	r18, 0xA9	; 169
     b68:	83 e0       	ldi	r24, 0x03	; 3
     b6a:	91 50       	subi	r25, 0x01	; 1
     b6c:	20 40       	sbci	r18, 0x00	; 0
     b6e:	80 40       	sbci	r24, 0x00	; 0
     b70:	e1 f7       	brne	.-8      	; 0xb6a <__EEPROM_REGION_LENGTH__+0x36a>
     b72:	00 c0       	rjmp	.+0      	; 0xb74 <__EEPROM_REGION_LENGTH__+0x374>
     b74:	00 00       	nop
     b76:	28 cf       	rjmp	.-432    	; 0x9c8 <__EEPROM_REGION_LENGTH__+0x1c8>
					_delay_ms(1200);
		
				}
				
		case '5':
			ldrconfig();
     b78:	0e 94 36 03 	call	0x66c	; 0x66c <ldrconfig>

00000b7c <__subsf3>:
     b7c:	50 58       	subi	r21, 0x80	; 128

00000b7e <__addsf3>:
     b7e:	bb 27       	eor	r27, r27
     b80:	aa 27       	eor	r26, r26
     b82:	0e 94 d6 05 	call	0xbac	; 0xbac <__addsf3x>
     b86:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <__fp_round>
     b8a:	0e 94 19 07 	call	0xe32	; 0xe32 <__fp_pscA>
     b8e:	38 f0       	brcs	.+14     	; 0xb9e <__addsf3+0x20>
     b90:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_pscB>
     b94:	20 f0       	brcs	.+8      	; 0xb9e <__addsf3+0x20>
     b96:	39 f4       	brne	.+14     	; 0xba6 <__addsf3+0x28>
     b98:	9f 3f       	cpi	r25, 0xFF	; 255
     b9a:	19 f4       	brne	.+6      	; 0xba2 <__addsf3+0x24>
     b9c:	26 f4       	brtc	.+8      	; 0xba6 <__addsf3+0x28>
     b9e:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>
     ba2:	0e f4       	brtc	.+2      	; 0xba6 <__addsf3+0x28>
     ba4:	e0 95       	com	r30
     ba6:	e7 fb       	bst	r30, 7
     ba8:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>

00000bac <__addsf3x>:
     bac:	e9 2f       	mov	r30, r25
     bae:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_split3>
     bb2:	58 f3       	brcs	.-42     	; 0xb8a <__addsf3+0xc>
     bb4:	ba 17       	cp	r27, r26
     bb6:	62 07       	cpc	r22, r18
     bb8:	73 07       	cpc	r23, r19
     bba:	84 07       	cpc	r24, r20
     bbc:	95 07       	cpc	r25, r21
     bbe:	20 f0       	brcs	.+8      	; 0xbc8 <__addsf3x+0x1c>
     bc0:	79 f4       	brne	.+30     	; 0xbe0 <__addsf3x+0x34>
     bc2:	a6 f5       	brtc	.+104    	; 0xc2c <__addsf3x+0x80>
     bc4:	0c 94 5a 07 	jmp	0xeb4	; 0xeb4 <__fp_zero>
     bc8:	0e f4       	brtc	.+2      	; 0xbcc <__addsf3x+0x20>
     bca:	e0 95       	com	r30
     bcc:	0b 2e       	mov	r0, r27
     bce:	ba 2f       	mov	r27, r26
     bd0:	a0 2d       	mov	r26, r0
     bd2:	0b 01       	movw	r0, r22
     bd4:	b9 01       	movw	r22, r18
     bd6:	90 01       	movw	r18, r0
     bd8:	0c 01       	movw	r0, r24
     bda:	ca 01       	movw	r24, r20
     bdc:	a0 01       	movw	r20, r0
     bde:	11 24       	eor	r1, r1
     be0:	ff 27       	eor	r31, r31
     be2:	59 1b       	sub	r21, r25
     be4:	99 f0       	breq	.+38     	; 0xc0c <__addsf3x+0x60>
     be6:	59 3f       	cpi	r21, 0xF9	; 249
     be8:	50 f4       	brcc	.+20     	; 0xbfe <__addsf3x+0x52>
     bea:	50 3e       	cpi	r21, 0xE0	; 224
     bec:	68 f1       	brcs	.+90     	; 0xc48 <__addsf3x+0x9c>
     bee:	1a 16       	cp	r1, r26
     bf0:	f0 40       	sbci	r31, 0x00	; 0
     bf2:	a2 2f       	mov	r26, r18
     bf4:	23 2f       	mov	r18, r19
     bf6:	34 2f       	mov	r19, r20
     bf8:	44 27       	eor	r20, r20
     bfa:	58 5f       	subi	r21, 0xF8	; 248
     bfc:	f3 cf       	rjmp	.-26     	; 0xbe4 <__addsf3x+0x38>
     bfe:	46 95       	lsr	r20
     c00:	37 95       	ror	r19
     c02:	27 95       	ror	r18
     c04:	a7 95       	ror	r26
     c06:	f0 40       	sbci	r31, 0x00	; 0
     c08:	53 95       	inc	r21
     c0a:	c9 f7       	brne	.-14     	; 0xbfe <__addsf3x+0x52>
     c0c:	7e f4       	brtc	.+30     	; 0xc2c <__addsf3x+0x80>
     c0e:	1f 16       	cp	r1, r31
     c10:	ba 0b       	sbc	r27, r26
     c12:	62 0b       	sbc	r22, r18
     c14:	73 0b       	sbc	r23, r19
     c16:	84 0b       	sbc	r24, r20
     c18:	ba f0       	brmi	.+46     	; 0xc48 <__addsf3x+0x9c>
     c1a:	91 50       	subi	r25, 0x01	; 1
     c1c:	a1 f0       	breq	.+40     	; 0xc46 <__addsf3x+0x9a>
     c1e:	ff 0f       	add	r31, r31
     c20:	bb 1f       	adc	r27, r27
     c22:	66 1f       	adc	r22, r22
     c24:	77 1f       	adc	r23, r23
     c26:	88 1f       	adc	r24, r24
     c28:	c2 f7       	brpl	.-16     	; 0xc1a <__addsf3x+0x6e>
     c2a:	0e c0       	rjmp	.+28     	; 0xc48 <__addsf3x+0x9c>
     c2c:	ba 0f       	add	r27, r26
     c2e:	62 1f       	adc	r22, r18
     c30:	73 1f       	adc	r23, r19
     c32:	84 1f       	adc	r24, r20
     c34:	48 f4       	brcc	.+18     	; 0xc48 <__addsf3x+0x9c>
     c36:	87 95       	ror	r24
     c38:	77 95       	ror	r23
     c3a:	67 95       	ror	r22
     c3c:	b7 95       	ror	r27
     c3e:	f7 95       	ror	r31
     c40:	9e 3f       	cpi	r25, 0xFE	; 254
     c42:	08 f0       	brcs	.+2      	; 0xc46 <__addsf3x+0x9a>
     c44:	b0 cf       	rjmp	.-160    	; 0xba6 <__addsf3+0x28>
     c46:	93 95       	inc	r25
     c48:	88 0f       	add	r24, r24
     c4a:	08 f0       	brcs	.+2      	; 0xc4e <__addsf3x+0xa2>
     c4c:	99 27       	eor	r25, r25
     c4e:	ee 0f       	add	r30, r30
     c50:	97 95       	ror	r25
     c52:	87 95       	ror	r24
     c54:	08 95       	ret

00000c56 <__divsf3>:
     c56:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__divsf3x>
     c5a:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <__fp_round>
     c5e:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_pscB>
     c62:	58 f0       	brcs	.+22     	; 0xc7a <__divsf3+0x24>
     c64:	0e 94 19 07 	call	0xe32	; 0xe32 <__fp_pscA>
     c68:	40 f0       	brcs	.+16     	; 0xc7a <__divsf3+0x24>
     c6a:	29 f4       	brne	.+10     	; 0xc76 <__divsf3+0x20>
     c6c:	5f 3f       	cpi	r21, 0xFF	; 255
     c6e:	29 f0       	breq	.+10     	; 0xc7a <__divsf3+0x24>
     c70:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
     c74:	51 11       	cpse	r21, r1
     c76:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>
     c7a:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>

00000c7e <__divsf3x>:
     c7e:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_split3>
     c82:	68 f3       	brcs	.-38     	; 0xc5e <__divsf3+0x8>

00000c84 <__divsf3_pse>:
     c84:	99 23       	and	r25, r25
     c86:	b1 f3       	breq	.-20     	; 0xc74 <__divsf3+0x1e>
     c88:	55 23       	and	r21, r21
     c8a:	91 f3       	breq	.-28     	; 0xc70 <__divsf3+0x1a>
     c8c:	95 1b       	sub	r25, r21
     c8e:	55 0b       	sbc	r21, r21
     c90:	bb 27       	eor	r27, r27
     c92:	aa 27       	eor	r26, r26
     c94:	62 17       	cp	r22, r18
     c96:	73 07       	cpc	r23, r19
     c98:	84 07       	cpc	r24, r20
     c9a:	38 f0       	brcs	.+14     	; 0xcaa <__divsf3_pse+0x26>
     c9c:	9f 5f       	subi	r25, 0xFF	; 255
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	22 0f       	add	r18, r18
     ca2:	33 1f       	adc	r19, r19
     ca4:	44 1f       	adc	r20, r20
     ca6:	aa 1f       	adc	r26, r26
     ca8:	a9 f3       	breq	.-22     	; 0xc94 <__divsf3_pse+0x10>
     caa:	35 d0       	rcall	.+106    	; 0xd16 <__divsf3_pse+0x92>
     cac:	0e 2e       	mov	r0, r30
     cae:	3a f0       	brmi	.+14     	; 0xcbe <__divsf3_pse+0x3a>
     cb0:	e0 e8       	ldi	r30, 0x80	; 128
     cb2:	32 d0       	rcall	.+100    	; 0xd18 <__divsf3_pse+0x94>
     cb4:	91 50       	subi	r25, 0x01	; 1
     cb6:	50 40       	sbci	r21, 0x00	; 0
     cb8:	e6 95       	lsr	r30
     cba:	00 1c       	adc	r0, r0
     cbc:	ca f7       	brpl	.-14     	; 0xcb0 <__divsf3_pse+0x2c>
     cbe:	2b d0       	rcall	.+86     	; 0xd16 <__divsf3_pse+0x92>
     cc0:	fe 2f       	mov	r31, r30
     cc2:	29 d0       	rcall	.+82     	; 0xd16 <__divsf3_pse+0x92>
     cc4:	66 0f       	add	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	bb 1f       	adc	r27, r27
     ccc:	26 17       	cp	r18, r22
     cce:	37 07       	cpc	r19, r23
     cd0:	48 07       	cpc	r20, r24
     cd2:	ab 07       	cpc	r26, r27
     cd4:	b0 e8       	ldi	r27, 0x80	; 128
     cd6:	09 f0       	breq	.+2      	; 0xcda <__divsf3_pse+0x56>
     cd8:	bb 0b       	sbc	r27, r27
     cda:	80 2d       	mov	r24, r0
     cdc:	bf 01       	movw	r22, r30
     cde:	ff 27       	eor	r31, r31
     ce0:	93 58       	subi	r25, 0x83	; 131
     ce2:	5f 4f       	sbci	r21, 0xFF	; 255
     ce4:	3a f0       	brmi	.+14     	; 0xcf4 <__divsf3_pse+0x70>
     ce6:	9e 3f       	cpi	r25, 0xFE	; 254
     ce8:	51 05       	cpc	r21, r1
     cea:	78 f0       	brcs	.+30     	; 0xd0a <__divsf3_pse+0x86>
     cec:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
     cf0:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>
     cf4:	5f 3f       	cpi	r21, 0xFF	; 255
     cf6:	e4 f3       	brlt	.-8      	; 0xcf0 <__divsf3_pse+0x6c>
     cf8:	98 3e       	cpi	r25, 0xE8	; 232
     cfa:	d4 f3       	brlt	.-12     	; 0xcf0 <__divsf3_pse+0x6c>
     cfc:	86 95       	lsr	r24
     cfe:	77 95       	ror	r23
     d00:	67 95       	ror	r22
     d02:	b7 95       	ror	r27
     d04:	f7 95       	ror	r31
     d06:	9f 5f       	subi	r25, 0xFF	; 255
     d08:	c9 f7       	brne	.-14     	; 0xcfc <__divsf3_pse+0x78>
     d0a:	88 0f       	add	r24, r24
     d0c:	91 1d       	adc	r25, r1
     d0e:	96 95       	lsr	r25
     d10:	87 95       	ror	r24
     d12:	97 f9       	bld	r25, 7
     d14:	08 95       	ret
     d16:	e1 e0       	ldi	r30, 0x01	; 1
     d18:	66 0f       	add	r22, r22
     d1a:	77 1f       	adc	r23, r23
     d1c:	88 1f       	adc	r24, r24
     d1e:	bb 1f       	adc	r27, r27
     d20:	62 17       	cp	r22, r18
     d22:	73 07       	cpc	r23, r19
     d24:	84 07       	cpc	r24, r20
     d26:	ba 07       	cpc	r27, r26
     d28:	20 f0       	brcs	.+8      	; 0xd32 <__divsf3_pse+0xae>
     d2a:	62 1b       	sub	r22, r18
     d2c:	73 0b       	sbc	r23, r19
     d2e:	84 0b       	sbc	r24, r20
     d30:	ba 0b       	sbc	r27, r26
     d32:	ee 1f       	adc	r30, r30
     d34:	88 f7       	brcc	.-30     	; 0xd18 <__divsf3_pse+0x94>
     d36:	e0 95       	com	r30
     d38:	08 95       	ret

00000d3a <__fixsfsi>:
     d3a:	0e 94 a4 06 	call	0xd48	; 0xd48 <__fixunssfsi>
     d3e:	68 94       	set
     d40:	b1 11       	cpse	r27, r1
     d42:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>
     d46:	08 95       	ret

00000d48 <__fixunssfsi>:
     d48:	0e 94 40 07 	call	0xe80	; 0xe80 <__fp_splitA>
     d4c:	88 f0       	brcs	.+34     	; 0xd70 <__fixunssfsi+0x28>
     d4e:	9f 57       	subi	r25, 0x7F	; 127
     d50:	98 f0       	brcs	.+38     	; 0xd78 <__fixunssfsi+0x30>
     d52:	b9 2f       	mov	r27, r25
     d54:	99 27       	eor	r25, r25
     d56:	b7 51       	subi	r27, 0x17	; 23
     d58:	b0 f0       	brcs	.+44     	; 0xd86 <__fixunssfsi+0x3e>
     d5a:	e1 f0       	breq	.+56     	; 0xd94 <__fixunssfsi+0x4c>
     d5c:	66 0f       	add	r22, r22
     d5e:	77 1f       	adc	r23, r23
     d60:	88 1f       	adc	r24, r24
     d62:	99 1f       	adc	r25, r25
     d64:	1a f0       	brmi	.+6      	; 0xd6c <__fixunssfsi+0x24>
     d66:	ba 95       	dec	r27
     d68:	c9 f7       	brne	.-14     	; 0xd5c <__fixunssfsi+0x14>
     d6a:	14 c0       	rjmp	.+40     	; 0xd94 <__fixunssfsi+0x4c>
     d6c:	b1 30       	cpi	r27, 0x01	; 1
     d6e:	91 f0       	breq	.+36     	; 0xd94 <__fixunssfsi+0x4c>
     d70:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__fp_zero>
     d74:	b1 e0       	ldi	r27, 0x01	; 1
     d76:	08 95       	ret
     d78:	0c 94 5a 07 	jmp	0xeb4	; 0xeb4 <__fp_zero>
     d7c:	67 2f       	mov	r22, r23
     d7e:	78 2f       	mov	r23, r24
     d80:	88 27       	eor	r24, r24
     d82:	b8 5f       	subi	r27, 0xF8	; 248
     d84:	39 f0       	breq	.+14     	; 0xd94 <__fixunssfsi+0x4c>
     d86:	b9 3f       	cpi	r27, 0xF9	; 249
     d88:	cc f3       	brlt	.-14     	; 0xd7c <__fixunssfsi+0x34>
     d8a:	86 95       	lsr	r24
     d8c:	77 95       	ror	r23
     d8e:	67 95       	ror	r22
     d90:	b3 95       	inc	r27
     d92:	d9 f7       	brne	.-10     	; 0xd8a <__fixunssfsi+0x42>
     d94:	3e f4       	brtc	.+14     	; 0xda4 <__fixunssfsi+0x5c>
     d96:	90 95       	com	r25
     d98:	80 95       	com	r24
     d9a:	70 95       	com	r23
     d9c:	61 95       	neg	r22
     d9e:	7f 4f       	sbci	r23, 0xFF	; 255
     da0:	8f 4f       	sbci	r24, 0xFF	; 255
     da2:	9f 4f       	sbci	r25, 0xFF	; 255
     da4:	08 95       	ret

00000da6 <__floatunsisf>:
     da6:	e8 94       	clt
     da8:	09 c0       	rjmp	.+18     	; 0xdbc <__floatsisf+0x12>

00000daa <__floatsisf>:
     daa:	97 fb       	bst	r25, 7
     dac:	3e f4       	brtc	.+14     	; 0xdbc <__floatsisf+0x12>
     dae:	90 95       	com	r25
     db0:	80 95       	com	r24
     db2:	70 95       	com	r23
     db4:	61 95       	neg	r22
     db6:	7f 4f       	sbci	r23, 0xFF	; 255
     db8:	8f 4f       	sbci	r24, 0xFF	; 255
     dba:	9f 4f       	sbci	r25, 0xFF	; 255
     dbc:	99 23       	and	r25, r25
     dbe:	a9 f0       	breq	.+42     	; 0xdea <__floatsisf+0x40>
     dc0:	f9 2f       	mov	r31, r25
     dc2:	96 e9       	ldi	r25, 0x96	; 150
     dc4:	bb 27       	eor	r27, r27
     dc6:	93 95       	inc	r25
     dc8:	f6 95       	lsr	r31
     dca:	87 95       	ror	r24
     dcc:	77 95       	ror	r23
     dce:	67 95       	ror	r22
     dd0:	b7 95       	ror	r27
     dd2:	f1 11       	cpse	r31, r1
     dd4:	f8 cf       	rjmp	.-16     	; 0xdc6 <__floatsisf+0x1c>
     dd6:	fa f4       	brpl	.+62     	; 0xe16 <__floatsisf+0x6c>
     dd8:	bb 0f       	add	r27, r27
     dda:	11 f4       	brne	.+4      	; 0xde0 <__floatsisf+0x36>
     ddc:	60 ff       	sbrs	r22, 0
     dde:	1b c0       	rjmp	.+54     	; 0xe16 <__floatsisf+0x6c>
     de0:	6f 5f       	subi	r22, 0xFF	; 255
     de2:	7f 4f       	sbci	r23, 0xFF	; 255
     de4:	8f 4f       	sbci	r24, 0xFF	; 255
     de6:	9f 4f       	sbci	r25, 0xFF	; 255
     de8:	16 c0       	rjmp	.+44     	; 0xe16 <__floatsisf+0x6c>
     dea:	88 23       	and	r24, r24
     dec:	11 f0       	breq	.+4      	; 0xdf2 <__floatsisf+0x48>
     dee:	96 e9       	ldi	r25, 0x96	; 150
     df0:	11 c0       	rjmp	.+34     	; 0xe14 <__floatsisf+0x6a>
     df2:	77 23       	and	r23, r23
     df4:	21 f0       	breq	.+8      	; 0xdfe <__floatsisf+0x54>
     df6:	9e e8       	ldi	r25, 0x8E	; 142
     df8:	87 2f       	mov	r24, r23
     dfa:	76 2f       	mov	r23, r22
     dfc:	05 c0       	rjmp	.+10     	; 0xe08 <__floatsisf+0x5e>
     dfe:	66 23       	and	r22, r22
     e00:	71 f0       	breq	.+28     	; 0xe1e <__floatsisf+0x74>
     e02:	96 e8       	ldi	r25, 0x86	; 134
     e04:	86 2f       	mov	r24, r22
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	60 e0       	ldi	r22, 0x00	; 0
     e0a:	2a f0       	brmi	.+10     	; 0xe16 <__floatsisf+0x6c>
     e0c:	9a 95       	dec	r25
     e0e:	66 0f       	add	r22, r22
     e10:	77 1f       	adc	r23, r23
     e12:	88 1f       	adc	r24, r24
     e14:	da f7       	brpl	.-10     	; 0xe0c <__floatsisf+0x62>
     e16:	88 0f       	add	r24, r24
     e18:	96 95       	lsr	r25
     e1a:	87 95       	ror	r24
     e1c:	97 f9       	bld	r25, 7
     e1e:	08 95       	ret

00000e20 <__fp_inf>:
     e20:	97 f9       	bld	r25, 7
     e22:	9f 67       	ori	r25, 0x7F	; 127
     e24:	80 e8       	ldi	r24, 0x80	; 128
     e26:	70 e0       	ldi	r23, 0x00	; 0
     e28:	60 e0       	ldi	r22, 0x00	; 0
     e2a:	08 95       	ret

00000e2c <__fp_nan>:
     e2c:	9f ef       	ldi	r25, 0xFF	; 255
     e2e:	80 ec       	ldi	r24, 0xC0	; 192
     e30:	08 95       	ret

00000e32 <__fp_pscA>:
     e32:	00 24       	eor	r0, r0
     e34:	0a 94       	dec	r0
     e36:	16 16       	cp	r1, r22
     e38:	17 06       	cpc	r1, r23
     e3a:	18 06       	cpc	r1, r24
     e3c:	09 06       	cpc	r0, r25
     e3e:	08 95       	ret

00000e40 <__fp_pscB>:
     e40:	00 24       	eor	r0, r0
     e42:	0a 94       	dec	r0
     e44:	12 16       	cp	r1, r18
     e46:	13 06       	cpc	r1, r19
     e48:	14 06       	cpc	r1, r20
     e4a:	05 06       	cpc	r0, r21
     e4c:	08 95       	ret

00000e4e <__fp_round>:
     e4e:	09 2e       	mov	r0, r25
     e50:	03 94       	inc	r0
     e52:	00 0c       	add	r0, r0
     e54:	11 f4       	brne	.+4      	; 0xe5a <__fp_round+0xc>
     e56:	88 23       	and	r24, r24
     e58:	52 f0       	brmi	.+20     	; 0xe6e <__fp_round+0x20>
     e5a:	bb 0f       	add	r27, r27
     e5c:	40 f4       	brcc	.+16     	; 0xe6e <__fp_round+0x20>
     e5e:	bf 2b       	or	r27, r31
     e60:	11 f4       	brne	.+4      	; 0xe66 <__fp_round+0x18>
     e62:	60 ff       	sbrs	r22, 0
     e64:	04 c0       	rjmp	.+8      	; 0xe6e <__fp_round+0x20>
     e66:	6f 5f       	subi	r22, 0xFF	; 255
     e68:	7f 4f       	sbci	r23, 0xFF	; 255
     e6a:	8f 4f       	sbci	r24, 0xFF	; 255
     e6c:	9f 4f       	sbci	r25, 0xFF	; 255
     e6e:	08 95       	ret

00000e70 <__fp_split3>:
     e70:	57 fd       	sbrc	r21, 7
     e72:	90 58       	subi	r25, 0x80	; 128
     e74:	44 0f       	add	r20, r20
     e76:	55 1f       	adc	r21, r21
     e78:	59 f0       	breq	.+22     	; 0xe90 <__fp_splitA+0x10>
     e7a:	5f 3f       	cpi	r21, 0xFF	; 255
     e7c:	71 f0       	breq	.+28     	; 0xe9a <__fp_splitA+0x1a>
     e7e:	47 95       	ror	r20

00000e80 <__fp_splitA>:
     e80:	88 0f       	add	r24, r24
     e82:	97 fb       	bst	r25, 7
     e84:	99 1f       	adc	r25, r25
     e86:	61 f0       	breq	.+24     	; 0xea0 <__fp_splitA+0x20>
     e88:	9f 3f       	cpi	r25, 0xFF	; 255
     e8a:	79 f0       	breq	.+30     	; 0xeaa <__fp_splitA+0x2a>
     e8c:	87 95       	ror	r24
     e8e:	08 95       	ret
     e90:	12 16       	cp	r1, r18
     e92:	13 06       	cpc	r1, r19
     e94:	14 06       	cpc	r1, r20
     e96:	55 1f       	adc	r21, r21
     e98:	f2 cf       	rjmp	.-28     	; 0xe7e <__fp_split3+0xe>
     e9a:	46 95       	lsr	r20
     e9c:	f1 df       	rcall	.-30     	; 0xe80 <__fp_splitA>
     e9e:	08 c0       	rjmp	.+16     	; 0xeb0 <__fp_splitA+0x30>
     ea0:	16 16       	cp	r1, r22
     ea2:	17 06       	cpc	r1, r23
     ea4:	18 06       	cpc	r1, r24
     ea6:	99 1f       	adc	r25, r25
     ea8:	f1 cf       	rjmp	.-30     	; 0xe8c <__fp_splitA+0xc>
     eaa:	86 95       	lsr	r24
     eac:	71 05       	cpc	r23, r1
     eae:	61 05       	cpc	r22, r1
     eb0:	08 94       	sec
     eb2:	08 95       	ret

00000eb4 <__fp_zero>:
     eb4:	e8 94       	clt

00000eb6 <__fp_szero>:
     eb6:	bb 27       	eor	r27, r27
     eb8:	66 27       	eor	r22, r22
     eba:	77 27       	eor	r23, r23
     ebc:	cb 01       	movw	r24, r22
     ebe:	97 f9       	bld	r25, 7
     ec0:	08 95       	ret

00000ec2 <__mulsf3>:
     ec2:	0e 94 74 07 	call	0xee8	; 0xee8 <__mulsf3x>
     ec6:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <__fp_round>
     eca:	0e 94 19 07 	call	0xe32	; 0xe32 <__fp_pscA>
     ece:	38 f0       	brcs	.+14     	; 0xede <__mulsf3+0x1c>
     ed0:	0e 94 20 07 	call	0xe40	; 0xe40 <__fp_pscB>
     ed4:	20 f0       	brcs	.+8      	; 0xede <__mulsf3+0x1c>
     ed6:	95 23       	and	r25, r21
     ed8:	11 f0       	breq	.+4      	; 0xede <__mulsf3+0x1c>
     eda:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
     ede:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>
     ee2:	11 24       	eor	r1, r1
     ee4:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>

00000ee8 <__mulsf3x>:
     ee8:	0e 94 38 07 	call	0xe70	; 0xe70 <__fp_split3>
     eec:	70 f3       	brcs	.-36     	; 0xeca <__mulsf3+0x8>

00000eee <__mulsf3_pse>:
     eee:	95 9f       	mul	r25, r21
     ef0:	c1 f3       	breq	.-16     	; 0xee2 <__mulsf3+0x20>
     ef2:	95 0f       	add	r25, r21
     ef4:	50 e0       	ldi	r21, 0x00	; 0
     ef6:	55 1f       	adc	r21, r21
     ef8:	62 9f       	mul	r22, r18
     efa:	f0 01       	movw	r30, r0
     efc:	72 9f       	mul	r23, r18
     efe:	bb 27       	eor	r27, r27
     f00:	f0 0d       	add	r31, r0
     f02:	b1 1d       	adc	r27, r1
     f04:	63 9f       	mul	r22, r19
     f06:	aa 27       	eor	r26, r26
     f08:	f0 0d       	add	r31, r0
     f0a:	b1 1d       	adc	r27, r1
     f0c:	aa 1f       	adc	r26, r26
     f0e:	64 9f       	mul	r22, r20
     f10:	66 27       	eor	r22, r22
     f12:	b0 0d       	add	r27, r0
     f14:	a1 1d       	adc	r26, r1
     f16:	66 1f       	adc	r22, r22
     f18:	82 9f       	mul	r24, r18
     f1a:	22 27       	eor	r18, r18
     f1c:	b0 0d       	add	r27, r0
     f1e:	a1 1d       	adc	r26, r1
     f20:	62 1f       	adc	r22, r18
     f22:	73 9f       	mul	r23, r19
     f24:	b0 0d       	add	r27, r0
     f26:	a1 1d       	adc	r26, r1
     f28:	62 1f       	adc	r22, r18
     f2a:	83 9f       	mul	r24, r19
     f2c:	a0 0d       	add	r26, r0
     f2e:	61 1d       	adc	r22, r1
     f30:	22 1f       	adc	r18, r18
     f32:	74 9f       	mul	r23, r20
     f34:	33 27       	eor	r19, r19
     f36:	a0 0d       	add	r26, r0
     f38:	61 1d       	adc	r22, r1
     f3a:	23 1f       	adc	r18, r19
     f3c:	84 9f       	mul	r24, r20
     f3e:	60 0d       	add	r22, r0
     f40:	21 1d       	adc	r18, r1
     f42:	82 2f       	mov	r24, r18
     f44:	76 2f       	mov	r23, r22
     f46:	6a 2f       	mov	r22, r26
     f48:	11 24       	eor	r1, r1
     f4a:	9f 57       	subi	r25, 0x7F	; 127
     f4c:	50 40       	sbci	r21, 0x00	; 0
     f4e:	9a f0       	brmi	.+38     	; 0xf76 <__mulsf3_pse+0x88>
     f50:	f1 f0       	breq	.+60     	; 0xf8e <__mulsf3_pse+0xa0>
     f52:	88 23       	and	r24, r24
     f54:	4a f0       	brmi	.+18     	; 0xf68 <__mulsf3_pse+0x7a>
     f56:	ee 0f       	add	r30, r30
     f58:	ff 1f       	adc	r31, r31
     f5a:	bb 1f       	adc	r27, r27
     f5c:	66 1f       	adc	r22, r22
     f5e:	77 1f       	adc	r23, r23
     f60:	88 1f       	adc	r24, r24
     f62:	91 50       	subi	r25, 0x01	; 1
     f64:	50 40       	sbci	r21, 0x00	; 0
     f66:	a9 f7       	brne	.-22     	; 0xf52 <__mulsf3_pse+0x64>
     f68:	9e 3f       	cpi	r25, 0xFE	; 254
     f6a:	51 05       	cpc	r21, r1
     f6c:	80 f0       	brcs	.+32     	; 0xf8e <__mulsf3_pse+0xa0>
     f6e:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
     f72:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>
     f76:	5f 3f       	cpi	r21, 0xFF	; 255
     f78:	e4 f3       	brlt	.-8      	; 0xf72 <__mulsf3_pse+0x84>
     f7a:	98 3e       	cpi	r25, 0xE8	; 232
     f7c:	d4 f3       	brlt	.-12     	; 0xf72 <__mulsf3_pse+0x84>
     f7e:	86 95       	lsr	r24
     f80:	77 95       	ror	r23
     f82:	67 95       	ror	r22
     f84:	b7 95       	ror	r27
     f86:	f7 95       	ror	r31
     f88:	e7 95       	ror	r30
     f8a:	9f 5f       	subi	r25, 0xFF	; 255
     f8c:	c1 f7       	brne	.-16     	; 0xf7e <__mulsf3_pse+0x90>
     f8e:	fe 2b       	or	r31, r30
     f90:	88 0f       	add	r24, r24
     f92:	91 1d       	adc	r25, r1
     f94:	96 95       	lsr	r25
     f96:	87 95       	ror	r24
     f98:	97 f9       	bld	r25, 7
     f9a:	08 95       	ret

00000f9c <pow>:
     f9c:	fa 01       	movw	r30, r20
     f9e:	ee 0f       	add	r30, r30
     fa0:	ff 1f       	adc	r31, r31
     fa2:	30 96       	adiw	r30, 0x00	; 0
     fa4:	21 05       	cpc	r18, r1
     fa6:	31 05       	cpc	r19, r1
     fa8:	a1 f1       	breq	.+104    	; 0x1012 <__DATA_REGION_LENGTH__+0x12>
     faa:	61 15       	cp	r22, r1
     fac:	71 05       	cpc	r23, r1
     fae:	61 f4       	brne	.+24     	; 0xfc8 <pow+0x2c>
     fb0:	80 38       	cpi	r24, 0x80	; 128
     fb2:	bf e3       	ldi	r27, 0x3F	; 63
     fb4:	9b 07       	cpc	r25, r27
     fb6:	49 f1       	breq	.+82     	; 0x100a <__DATA_REGION_LENGTH__+0xa>
     fb8:	68 94       	set
     fba:	90 38       	cpi	r25, 0x80	; 128
     fbc:	81 05       	cpc	r24, r1
     fbe:	61 f0       	breq	.+24     	; 0xfd8 <pow+0x3c>
     fc0:	80 38       	cpi	r24, 0x80	; 128
     fc2:	bf ef       	ldi	r27, 0xFF	; 255
     fc4:	9b 07       	cpc	r25, r27
     fc6:	41 f0       	breq	.+16     	; 0xfd8 <pow+0x3c>
     fc8:	99 23       	and	r25, r25
     fca:	4a f5       	brpl	.+82     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
     fcc:	ff 3f       	cpi	r31, 0xFF	; 255
     fce:	e1 05       	cpc	r30, r1
     fd0:	31 05       	cpc	r19, r1
     fd2:	21 05       	cpc	r18, r1
     fd4:	19 f1       	breq	.+70     	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
     fd6:	e8 94       	clt
     fd8:	08 94       	sec
     fda:	e7 95       	ror	r30
     fdc:	d9 01       	movw	r26, r18
     fde:	aa 23       	and	r26, r26
     fe0:	29 f4       	brne	.+10     	; 0xfec <pow+0x50>
     fe2:	ab 2f       	mov	r26, r27
     fe4:	be 2f       	mov	r27, r30
     fe6:	f8 5f       	subi	r31, 0xF8	; 248
     fe8:	d0 f3       	brcs	.-12     	; 0xfde <pow+0x42>
     fea:	10 c0       	rjmp	.+32     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
     fec:	ff 5f       	subi	r31, 0xFF	; 255
     fee:	70 f4       	brcc	.+28     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
     ff0:	a6 95       	lsr	r26
     ff2:	e0 f7       	brcc	.-8      	; 0xfec <pow+0x50>
     ff4:	f7 39       	cpi	r31, 0x97	; 151
     ff6:	50 f0       	brcs	.+20     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
     ff8:	19 f0       	breq	.+6      	; 0x1000 <__DATA_REGION_LENGTH__>
     ffa:	ff 3a       	cpi	r31, 0xAF	; 175
     ffc:	38 f4       	brcc	.+14     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
     ffe:	9f 77       	andi	r25, 0x7F	; 127
    1000:	9f 93       	push	r25
    1002:	0d d0       	rcall	.+26     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
    1004:	0f 90       	pop	r0
    1006:	07 fc       	sbrc	r0, 7
    1008:	90 58       	subi	r25, 0x80	; 128
    100a:	08 95       	ret
    100c:	46 f0       	brts	.+16     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
    100e:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>
    1012:	60 e0       	ldi	r22, 0x00	; 0
    1014:	70 e0       	ldi	r23, 0x00	; 0
    1016:	80 e8       	ldi	r24, 0x80	; 128
    1018:	9f e3       	ldi	r25, 0x3F	; 63
    101a:	08 95       	ret
    101c:	4f e7       	ldi	r20, 0x7F	; 127
    101e:	9f 77       	andi	r25, 0x7F	; 127
    1020:	5f 93       	push	r21
    1022:	4f 93       	push	r20
    1024:	3f 93       	push	r19
    1026:	2f 93       	push	r18
    1028:	0e 94 c9 08 	call	0x1192	; 0x1192 <log>
    102c:	2f 91       	pop	r18
    102e:	3f 91       	pop	r19
    1030:	4f 91       	pop	r20
    1032:	5f 91       	pop	r21
    1034:	0e 94 61 07 	call	0xec2	; 0xec2 <__mulsf3>
    1038:	0c 94 26 08 	jmp	0x104c	; 0x104c <exp>
    103c:	29 f4       	brne	.+10     	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
    103e:	16 f0       	brts	.+4      	; 0x1044 <__DATA_REGION_LENGTH__+0x44>
    1040:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
    1044:	0c 94 5a 07 	jmp	0xeb4	; 0xeb4 <__fp_zero>
    1048:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>

0000104c <exp>:
    104c:	0e 94 40 07 	call	0xe80	; 0xe80 <__fp_splitA>
    1050:	a8 f3       	brcs	.-22     	; 0x103c <__DATA_REGION_LENGTH__+0x3c>
    1052:	96 38       	cpi	r25, 0x86	; 134
    1054:	a0 f7       	brcc	.-24     	; 0x103e <__DATA_REGION_LENGTH__+0x3e>
    1056:	07 f8       	bld	r0, 7
    1058:	0f 92       	push	r0
    105a:	e8 94       	clt
    105c:	2b e3       	ldi	r18, 0x3B	; 59
    105e:	3a ea       	ldi	r19, 0xAA	; 170
    1060:	48 eb       	ldi	r20, 0xB8	; 184
    1062:	5f e7       	ldi	r21, 0x7F	; 127
    1064:	0e 94 77 07 	call	0xeee	; 0xeee <__mulsf3_pse>
    1068:	0f 92       	push	r0
    106a:	0f 92       	push	r0
    106c:	0f 92       	push	r0
    106e:	4d b7       	in	r20, 0x3d	; 61
    1070:	5e b7       	in	r21, 0x3e	; 62
    1072:	0f 92       	push	r0
    1074:	0e 94 11 09 	call	0x1222	; 0x1222 <modf>
    1078:	ec e8       	ldi	r30, 0x8C	; 140
    107a:	f0 e0       	ldi	r31, 0x00	; 0
    107c:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__fp_powser>
    1080:	4f 91       	pop	r20
    1082:	5f 91       	pop	r21
    1084:	ef 91       	pop	r30
    1086:	ff 91       	pop	r31
    1088:	e5 95       	asr	r30
    108a:	ee 1f       	adc	r30, r30
    108c:	ff 1f       	adc	r31, r31
    108e:	49 f0       	breq	.+18     	; 0x10a2 <exp+0x56>
    1090:	fe 57       	subi	r31, 0x7E	; 126
    1092:	e0 68       	ori	r30, 0x80	; 128
    1094:	44 27       	eor	r20, r20
    1096:	ee 0f       	add	r30, r30
    1098:	44 1f       	adc	r20, r20
    109a:	fa 95       	dec	r31
    109c:	e1 f7       	brne	.-8      	; 0x1096 <exp+0x4a>
    109e:	41 95       	neg	r20
    10a0:	55 0b       	sbc	r21, r21
    10a2:	0e 94 8b 08 	call	0x1116	; 0x1116 <ldexp>
    10a6:	0f 90       	pop	r0
    10a8:	07 fe       	sbrs	r0, 7
    10aa:	0c 94 7f 08 	jmp	0x10fe	; 0x10fe <inverse>
    10ae:	08 95       	ret

000010b0 <__fp_powser>:
    10b0:	df 93       	push	r29
    10b2:	cf 93       	push	r28
    10b4:	1f 93       	push	r17
    10b6:	0f 93       	push	r16
    10b8:	ff 92       	push	r15
    10ba:	ef 92       	push	r14
    10bc:	df 92       	push	r13
    10be:	7b 01       	movw	r14, r22
    10c0:	8c 01       	movw	r16, r24
    10c2:	68 94       	set
    10c4:	06 c0       	rjmp	.+12     	; 0x10d2 <__fp_powser+0x22>
    10c6:	da 2e       	mov	r13, r26
    10c8:	ef 01       	movw	r28, r30
    10ca:	0e 94 74 07 	call	0xee8	; 0xee8 <__mulsf3x>
    10ce:	fe 01       	movw	r30, r28
    10d0:	e8 94       	clt
    10d2:	a5 91       	lpm	r26, Z+
    10d4:	25 91       	lpm	r18, Z+
    10d6:	35 91       	lpm	r19, Z+
    10d8:	45 91       	lpm	r20, Z+
    10da:	55 91       	lpm	r21, Z+
    10dc:	a6 f3       	brts	.-24     	; 0x10c6 <__fp_powser+0x16>
    10de:	ef 01       	movw	r28, r30
    10e0:	0e 94 d6 05 	call	0xbac	; 0xbac <__addsf3x>
    10e4:	fe 01       	movw	r30, r28
    10e6:	97 01       	movw	r18, r14
    10e8:	a8 01       	movw	r20, r16
    10ea:	da 94       	dec	r13
    10ec:	69 f7       	brne	.-38     	; 0x10c8 <__fp_powser+0x18>
    10ee:	df 90       	pop	r13
    10f0:	ef 90       	pop	r14
    10f2:	ff 90       	pop	r15
    10f4:	0f 91       	pop	r16
    10f6:	1f 91       	pop	r17
    10f8:	cf 91       	pop	r28
    10fa:	df 91       	pop	r29
    10fc:	08 95       	ret

000010fe <inverse>:
    10fe:	9b 01       	movw	r18, r22
    1100:	ac 01       	movw	r20, r24
    1102:	60 e0       	ldi	r22, 0x00	; 0
    1104:	70 e0       	ldi	r23, 0x00	; 0
    1106:	80 e8       	ldi	r24, 0x80	; 128
    1108:	9f e3       	ldi	r25, 0x3F	; 63
    110a:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__divsf3>
    110e:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>
    1112:	0c 94 45 09 	jmp	0x128a	; 0x128a <__fp_mpack>

00001116 <ldexp>:
    1116:	0e 94 40 07 	call	0xe80	; 0xe80 <__fp_splitA>
    111a:	d8 f3       	brcs	.-10     	; 0x1112 <__stack+0x13>
    111c:	99 23       	and	r25, r25
    111e:	c9 f3       	breq	.-14     	; 0x1112 <__stack+0x13>
    1120:	94 0f       	add	r25, r20
    1122:	51 1d       	adc	r21, r1
    1124:	a3 f3       	brvs	.-24     	; 0x110e <__stack+0xf>
    1126:	91 50       	subi	r25, 0x01	; 1
    1128:	50 40       	sbci	r21, 0x00	; 0
    112a:	94 f0       	brlt	.+36     	; 0x1150 <ldexp+0x3a>
    112c:	59 f0       	breq	.+22     	; 0x1144 <ldexp+0x2e>
    112e:	88 23       	and	r24, r24
    1130:	32 f0       	brmi	.+12     	; 0x113e <ldexp+0x28>
    1132:	66 0f       	add	r22, r22
    1134:	77 1f       	adc	r23, r23
    1136:	88 1f       	adc	r24, r24
    1138:	91 50       	subi	r25, 0x01	; 1
    113a:	50 40       	sbci	r21, 0x00	; 0
    113c:	c1 f7       	brne	.-16     	; 0x112e <ldexp+0x18>
    113e:	9e 3f       	cpi	r25, 0xFE	; 254
    1140:	51 05       	cpc	r21, r1
    1142:	2c f7       	brge	.-54     	; 0x110e <__stack+0xf>
    1144:	88 0f       	add	r24, r24
    1146:	91 1d       	adc	r25, r1
    1148:	96 95       	lsr	r25
    114a:	87 95       	ror	r24
    114c:	97 f9       	bld	r25, 7
    114e:	08 95       	ret
    1150:	5f 3f       	cpi	r21, 0xFF	; 255
    1152:	ac f0       	brlt	.+42     	; 0x117e <ldexp+0x68>
    1154:	98 3e       	cpi	r25, 0xE8	; 232
    1156:	9c f0       	brlt	.+38     	; 0x117e <ldexp+0x68>
    1158:	bb 27       	eor	r27, r27
    115a:	86 95       	lsr	r24
    115c:	77 95       	ror	r23
    115e:	67 95       	ror	r22
    1160:	b7 95       	ror	r27
    1162:	08 f4       	brcc	.+2      	; 0x1166 <ldexp+0x50>
    1164:	b1 60       	ori	r27, 0x01	; 1
    1166:	93 95       	inc	r25
    1168:	c1 f7       	brne	.-16     	; 0x115a <ldexp+0x44>
    116a:	bb 0f       	add	r27, r27
    116c:	58 f7       	brcc	.-42     	; 0x1144 <ldexp+0x2e>
    116e:	11 f4       	brne	.+4      	; 0x1174 <ldexp+0x5e>
    1170:	60 ff       	sbrs	r22, 0
    1172:	e8 cf       	rjmp	.-48     	; 0x1144 <ldexp+0x2e>
    1174:	6f 5f       	subi	r22, 0xFF	; 255
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	8f 4f       	sbci	r24, 0xFF	; 255
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	e3 cf       	rjmp	.-58     	; 0x1144 <ldexp+0x2e>
    117e:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <__fp_szero>
    1182:	16 f0       	brts	.+4      	; 0x1188 <ldexp+0x72>
    1184:	0c 94 45 09 	jmp	0x128a	; 0x128a <__fp_mpack>
    1188:	0c 94 16 07 	jmp	0xe2c	; 0xe2c <__fp_nan>
    118c:	68 94       	set
    118e:	0c 94 10 07 	jmp	0xe20	; 0xe20 <__fp_inf>

00001192 <log>:
    1192:	0e 94 40 07 	call	0xe80	; 0xe80 <__fp_splitA>
    1196:	a8 f3       	brcs	.-22     	; 0x1182 <ldexp+0x6c>
    1198:	99 23       	and	r25, r25
    119a:	c1 f3       	breq	.-16     	; 0x118c <ldexp+0x76>
    119c:	ae f3       	brts	.-22     	; 0x1188 <ldexp+0x72>
    119e:	df 93       	push	r29
    11a0:	cf 93       	push	r28
    11a2:	1f 93       	push	r17
    11a4:	0f 93       	push	r16
    11a6:	ff 92       	push	r15
    11a8:	c9 2f       	mov	r28, r25
    11aa:	dd 27       	eor	r29, r29
    11ac:	88 23       	and	r24, r24
    11ae:	2a f0       	brmi	.+10     	; 0x11ba <log+0x28>
    11b0:	21 97       	sbiw	r28, 0x01	; 1
    11b2:	66 0f       	add	r22, r22
    11b4:	77 1f       	adc	r23, r23
    11b6:	88 1f       	adc	r24, r24
    11b8:	da f7       	brpl	.-10     	; 0x11b0 <log+0x1e>
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	40 e8       	ldi	r20, 0x80	; 128
    11c0:	5f eb       	ldi	r21, 0xBF	; 191
    11c2:	9f e3       	ldi	r25, 0x3F	; 63
    11c4:	88 39       	cpi	r24, 0x98	; 152
    11c6:	20 f0       	brcs	.+8      	; 0x11d0 <log+0x3e>
    11c8:	80 3e       	cpi	r24, 0xE0	; 224
    11ca:	38 f0       	brcs	.+14     	; 0x11da <log+0x48>
    11cc:	21 96       	adiw	r28, 0x01	; 1
    11ce:	8f 77       	andi	r24, 0x7F	; 127
    11d0:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__addsf3>
    11d4:	e4 eb       	ldi	r30, 0xB4	; 180
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	04 c0       	rjmp	.+8      	; 0x11e2 <log+0x50>
    11da:	0e 94 bf 05 	call	0xb7e	; 0xb7e <__addsf3>
    11de:	e1 ee       	ldi	r30, 0xE1	; 225
    11e0:	f0 e0       	ldi	r31, 0x00	; 0
    11e2:	0e 94 58 08 	call	0x10b0	; 0x10b0 <__fp_powser>
    11e6:	8b 01       	movw	r16, r22
    11e8:	be 01       	movw	r22, r28
    11ea:	ec 01       	movw	r28, r24
    11ec:	fb 2e       	mov	r15, r27
    11ee:	6f 57       	subi	r22, 0x7F	; 127
    11f0:	71 09       	sbc	r23, r1
    11f2:	75 95       	asr	r23
    11f4:	77 1f       	adc	r23, r23
    11f6:	88 0b       	sbc	r24, r24
    11f8:	99 0b       	sbc	r25, r25
    11fa:	0e 94 d5 06 	call	0xdaa	; 0xdaa <__floatsisf>
    11fe:	28 e1       	ldi	r18, 0x18	; 24
    1200:	32 e7       	ldi	r19, 0x72	; 114
    1202:	41 e3       	ldi	r20, 0x31	; 49
    1204:	5f e3       	ldi	r21, 0x3F	; 63
    1206:	0e 94 74 07 	call	0xee8	; 0xee8 <__mulsf3x>
    120a:	af 2d       	mov	r26, r15
    120c:	98 01       	movw	r18, r16
    120e:	ae 01       	movw	r20, r28
    1210:	ff 90       	pop	r15
    1212:	0f 91       	pop	r16
    1214:	1f 91       	pop	r17
    1216:	cf 91       	pop	r28
    1218:	df 91       	pop	r29
    121a:	0e 94 d6 05 	call	0xbac	; 0xbac <__addsf3x>
    121e:	0c 94 27 07 	jmp	0xe4e	; 0xe4e <__fp_round>

00001222 <modf>:
    1222:	fa 01       	movw	r30, r20
    1224:	dc 01       	movw	r26, r24
    1226:	aa 0f       	add	r26, r26
    1228:	bb 1f       	adc	r27, r27
    122a:	9b 01       	movw	r18, r22
    122c:	ac 01       	movw	r20, r24
    122e:	bf 57       	subi	r27, 0x7F	; 127
    1230:	28 f4       	brcc	.+10     	; 0x123c <modf+0x1a>
    1232:	22 27       	eor	r18, r18
    1234:	33 27       	eor	r19, r19
    1236:	44 27       	eor	r20, r20
    1238:	50 78       	andi	r21, 0x80	; 128
    123a:	20 c0       	rjmp	.+64     	; 0x127c <modf+0x5a>
    123c:	b7 51       	subi	r27, 0x17	; 23
    123e:	90 f4       	brcc	.+36     	; 0x1264 <modf+0x42>
    1240:	ab 2f       	mov	r26, r27
    1242:	00 24       	eor	r0, r0
    1244:	46 95       	lsr	r20
    1246:	37 95       	ror	r19
    1248:	27 95       	ror	r18
    124a:	01 1c       	adc	r0, r1
    124c:	a3 95       	inc	r26
    124e:	d2 f3       	brmi	.-12     	; 0x1244 <modf+0x22>
    1250:	00 20       	and	r0, r0
    1252:	71 f0       	breq	.+28     	; 0x1270 <modf+0x4e>
    1254:	22 0f       	add	r18, r18
    1256:	33 1f       	adc	r19, r19
    1258:	44 1f       	adc	r20, r20
    125a:	b3 95       	inc	r27
    125c:	da f3       	brmi	.-10     	; 0x1254 <modf+0x32>
    125e:	0e d0       	rcall	.+28     	; 0x127c <modf+0x5a>
    1260:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__subsf3>
    1264:	61 30       	cpi	r22, 0x01	; 1
    1266:	71 05       	cpc	r23, r1
    1268:	a0 e8       	ldi	r26, 0x80	; 128
    126a:	8a 07       	cpc	r24, r26
    126c:	b9 46       	sbci	r27, 0x69	; 105
    126e:	30 f4       	brcc	.+12     	; 0x127c <modf+0x5a>
    1270:	9b 01       	movw	r18, r22
    1272:	ac 01       	movw	r20, r24
    1274:	66 27       	eor	r22, r22
    1276:	77 27       	eor	r23, r23
    1278:	88 27       	eor	r24, r24
    127a:	90 78       	andi	r25, 0x80	; 128
    127c:	30 96       	adiw	r30, 0x00	; 0
    127e:	21 f0       	breq	.+8      	; 0x1288 <modf+0x66>
    1280:	20 83       	st	Z, r18
    1282:	31 83       	std	Z+1, r19	; 0x01
    1284:	42 83       	std	Z+2, r20	; 0x02
    1286:	53 83       	std	Z+3, r21	; 0x03
    1288:	08 95       	ret

0000128a <__fp_mpack>:
    128a:	9f 3f       	cpi	r25, 0xFF	; 255
    128c:	31 f0       	breq	.+12     	; 0x129a <__fp_mpack_finite+0xc>

0000128e <__fp_mpack_finite>:
    128e:	91 50       	subi	r25, 0x01	; 1
    1290:	20 f4       	brcc	.+8      	; 0x129a <__fp_mpack_finite+0xc>
    1292:	87 95       	ror	r24
    1294:	77 95       	ror	r23
    1296:	67 95       	ror	r22
    1298:	b7 95       	ror	r27
    129a:	88 0f       	add	r24, r24
    129c:	91 1d       	adc	r25, r1
    129e:	96 95       	lsr	r25
    12a0:	87 95       	ror	r24
    12a2:	97 f9       	bld	r25, 7
    12a4:	08 95       	ret

000012a6 <__ashrdi3>:
    12a6:	97 fb       	bst	r25, 7
    12a8:	10 f8       	bld	r1, 0

000012aa <__lshrdi3>:
    12aa:	16 94       	lsr	r1
    12ac:	00 08       	sbc	r0, r0
    12ae:	0f 93       	push	r16
    12b0:	08 30       	cpi	r16, 0x08	; 8
    12b2:	98 f0       	brcs	.+38     	; 0x12da <__lshrdi3+0x30>
    12b4:	08 50       	subi	r16, 0x08	; 8
    12b6:	23 2f       	mov	r18, r19
    12b8:	34 2f       	mov	r19, r20
    12ba:	45 2f       	mov	r20, r21
    12bc:	56 2f       	mov	r21, r22
    12be:	67 2f       	mov	r22, r23
    12c0:	78 2f       	mov	r23, r24
    12c2:	89 2f       	mov	r24, r25
    12c4:	90 2d       	mov	r25, r0
    12c6:	f4 cf       	rjmp	.-24     	; 0x12b0 <__lshrdi3+0x6>
    12c8:	05 94       	asr	r0
    12ca:	97 95       	ror	r25
    12cc:	87 95       	ror	r24
    12ce:	77 95       	ror	r23
    12d0:	67 95       	ror	r22
    12d2:	57 95       	ror	r21
    12d4:	47 95       	ror	r20
    12d6:	37 95       	ror	r19
    12d8:	27 95       	ror	r18
    12da:	0a 95       	dec	r16
    12dc:	aa f7       	brpl	.-22     	; 0x12c8 <__lshrdi3+0x1e>
    12de:	0f 91       	pop	r16
    12e0:	08 95       	ret

000012e2 <__adddi3_s8>:
    12e2:	00 24       	eor	r0, r0
    12e4:	a7 fd       	sbrc	r26, 7
    12e6:	00 94       	com	r0
    12e8:	2a 0f       	add	r18, r26
    12ea:	30 1d       	adc	r19, r0
    12ec:	40 1d       	adc	r20, r0
    12ee:	50 1d       	adc	r21, r0
    12f0:	60 1d       	adc	r22, r0
    12f2:	70 1d       	adc	r23, r0
    12f4:	80 1d       	adc	r24, r0
    12f6:	90 1d       	adc	r25, r0
    12f8:	08 95       	ret

000012fa <__itoa_ncheck>:
    12fa:	bb 27       	eor	r27, r27
    12fc:	4a 30       	cpi	r20, 0x0A	; 10
    12fe:	31 f4       	brne	.+12     	; 0x130c <__itoa_ncheck+0x12>
    1300:	99 23       	and	r25, r25
    1302:	22 f4       	brpl	.+8      	; 0x130c <__itoa_ncheck+0x12>
    1304:	bd e2       	ldi	r27, 0x2D	; 45
    1306:	90 95       	com	r25
    1308:	81 95       	neg	r24
    130a:	9f 4f       	sbci	r25, 0xFF	; 255
    130c:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__utoa_common>

00001310 <__utoa_ncheck>:
    1310:	bb 27       	eor	r27, r27

00001312 <__utoa_common>:
    1312:	fb 01       	movw	r30, r22
    1314:	55 27       	eor	r21, r21
    1316:	aa 27       	eor	r26, r26
    1318:	88 0f       	add	r24, r24
    131a:	99 1f       	adc	r25, r25
    131c:	aa 1f       	adc	r26, r26
    131e:	a4 17       	cp	r26, r20
    1320:	10 f0       	brcs	.+4      	; 0x1326 <__utoa_common+0x14>
    1322:	a4 1b       	sub	r26, r20
    1324:	83 95       	inc	r24
    1326:	50 51       	subi	r21, 0x10	; 16
    1328:	b9 f7       	brne	.-18     	; 0x1318 <__utoa_common+0x6>
    132a:	a0 5d       	subi	r26, 0xD0	; 208
    132c:	aa 33       	cpi	r26, 0x3A	; 58
    132e:	08 f0       	brcs	.+2      	; 0x1332 <__utoa_common+0x20>
    1330:	a9 5d       	subi	r26, 0xD9	; 217
    1332:	a1 93       	st	Z+, r26
    1334:	00 97       	sbiw	r24, 0x00	; 0
    1336:	79 f7       	brne	.-34     	; 0x1316 <__utoa_common+0x4>
    1338:	b1 11       	cpse	r27, r1
    133a:	b1 93       	st	Z+, r27
    133c:	11 92       	st	Z+, r1
    133e:	cb 01       	movw	r24, r22
    1340:	0c 94 bb 0b 	jmp	0x1776	; 0x1776 <strrev>

00001344 <sprintf>:
    1344:	ae e0       	ldi	r26, 0x0E	; 14
    1346:	b0 e0       	ldi	r27, 0x00	; 0
    1348:	e8 ea       	ldi	r30, 0xA8	; 168
    134a:	f9 e0       	ldi	r31, 0x09	; 9
    134c:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__prologue_saves__+0x1c>
    1350:	0d 89       	ldd	r16, Y+21	; 0x15
    1352:	1e 89       	ldd	r17, Y+22	; 0x16
    1354:	86 e0       	ldi	r24, 0x06	; 6
    1356:	8c 83       	std	Y+4, r24	; 0x04
    1358:	1a 83       	std	Y+2, r17	; 0x02
    135a:	09 83       	std	Y+1, r16	; 0x01
    135c:	8f ef       	ldi	r24, 0xFF	; 255
    135e:	9f e7       	ldi	r25, 0x7F	; 127
    1360:	9e 83       	std	Y+6, r25	; 0x06
    1362:	8d 83       	std	Y+5, r24	; 0x05
    1364:	ae 01       	movw	r20, r28
    1366:	47 5e       	subi	r20, 0xE7	; 231
    1368:	5f 4f       	sbci	r21, 0xFF	; 255
    136a:	6f 89       	ldd	r22, Y+23	; 0x17
    136c:	78 8d       	ldd	r23, Y+24	; 0x18
    136e:	ce 01       	movw	r24, r28
    1370:	01 96       	adiw	r24, 0x01	; 1
    1372:	0e 94 c4 09 	call	0x1388	; 0x1388 <vfprintf>
    1376:	ef 81       	ldd	r30, Y+7	; 0x07
    1378:	f8 85       	ldd	r31, Y+8	; 0x08
    137a:	e0 0f       	add	r30, r16
    137c:	f1 1f       	adc	r31, r17
    137e:	10 82       	st	Z, r1
    1380:	2e 96       	adiw	r28, 0x0e	; 14
    1382:	e4 e0       	ldi	r30, 0x04	; 4
    1384:	0c 94 8f 0c 	jmp	0x191e	; 0x191e <__epilogue_restores__+0x1c>

00001388 <vfprintf>:
    1388:	ab e0       	ldi	r26, 0x0B	; 11
    138a:	b0 e0       	ldi	r27, 0x00	; 0
    138c:	ea ec       	ldi	r30, 0xCA	; 202
    138e:	f9 e0       	ldi	r31, 0x09	; 9
    1390:	0c 94 65 0c 	jmp	0x18ca	; 0x18ca <__prologue_saves__>
    1394:	6c 01       	movw	r12, r24
    1396:	7b 01       	movw	r14, r22
    1398:	8a 01       	movw	r16, r20
    139a:	fc 01       	movw	r30, r24
    139c:	17 82       	std	Z+7, r1	; 0x07
    139e:	16 82       	std	Z+6, r1	; 0x06
    13a0:	83 81       	ldd	r24, Z+3	; 0x03
    13a2:	81 ff       	sbrs	r24, 1
    13a4:	cc c1       	rjmp	.+920    	; 0x173e <vfprintf+0x3b6>
    13a6:	ce 01       	movw	r24, r28
    13a8:	01 96       	adiw	r24, 0x01	; 1
    13aa:	3c 01       	movw	r6, r24
    13ac:	f6 01       	movw	r30, r12
    13ae:	93 81       	ldd	r25, Z+3	; 0x03
    13b0:	f7 01       	movw	r30, r14
    13b2:	93 fd       	sbrc	r25, 3
    13b4:	85 91       	lpm	r24, Z+
    13b6:	93 ff       	sbrs	r25, 3
    13b8:	81 91       	ld	r24, Z+
    13ba:	7f 01       	movw	r14, r30
    13bc:	88 23       	and	r24, r24
    13be:	09 f4       	brne	.+2      	; 0x13c2 <vfprintf+0x3a>
    13c0:	ba c1       	rjmp	.+884    	; 0x1736 <vfprintf+0x3ae>
    13c2:	85 32       	cpi	r24, 0x25	; 37
    13c4:	39 f4       	brne	.+14     	; 0x13d4 <vfprintf+0x4c>
    13c6:	93 fd       	sbrc	r25, 3
    13c8:	85 91       	lpm	r24, Z+
    13ca:	93 ff       	sbrs	r25, 3
    13cc:	81 91       	ld	r24, Z+
    13ce:	7f 01       	movw	r14, r30
    13d0:	85 32       	cpi	r24, 0x25	; 37
    13d2:	29 f4       	brne	.+10     	; 0x13de <vfprintf+0x56>
    13d4:	b6 01       	movw	r22, r12
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    13dc:	e7 cf       	rjmp	.-50     	; 0x13ac <vfprintf+0x24>
    13de:	91 2c       	mov	r9, r1
    13e0:	21 2c       	mov	r2, r1
    13e2:	31 2c       	mov	r3, r1
    13e4:	ff e1       	ldi	r31, 0x1F	; 31
    13e6:	f3 15       	cp	r31, r3
    13e8:	d8 f0       	brcs	.+54     	; 0x1420 <vfprintf+0x98>
    13ea:	8b 32       	cpi	r24, 0x2B	; 43
    13ec:	79 f0       	breq	.+30     	; 0x140c <vfprintf+0x84>
    13ee:	38 f4       	brcc	.+14     	; 0x13fe <vfprintf+0x76>
    13f0:	80 32       	cpi	r24, 0x20	; 32
    13f2:	79 f0       	breq	.+30     	; 0x1412 <vfprintf+0x8a>
    13f4:	83 32       	cpi	r24, 0x23	; 35
    13f6:	a1 f4       	brne	.+40     	; 0x1420 <vfprintf+0x98>
    13f8:	23 2d       	mov	r18, r3
    13fa:	20 61       	ori	r18, 0x10	; 16
    13fc:	1d c0       	rjmp	.+58     	; 0x1438 <vfprintf+0xb0>
    13fe:	8d 32       	cpi	r24, 0x2D	; 45
    1400:	61 f0       	breq	.+24     	; 0x141a <vfprintf+0x92>
    1402:	80 33       	cpi	r24, 0x30	; 48
    1404:	69 f4       	brne	.+26     	; 0x1420 <vfprintf+0x98>
    1406:	23 2d       	mov	r18, r3
    1408:	21 60       	ori	r18, 0x01	; 1
    140a:	16 c0       	rjmp	.+44     	; 0x1438 <vfprintf+0xb0>
    140c:	83 2d       	mov	r24, r3
    140e:	82 60       	ori	r24, 0x02	; 2
    1410:	38 2e       	mov	r3, r24
    1412:	e3 2d       	mov	r30, r3
    1414:	e4 60       	ori	r30, 0x04	; 4
    1416:	3e 2e       	mov	r3, r30
    1418:	2a c0       	rjmp	.+84     	; 0x146e <vfprintf+0xe6>
    141a:	f3 2d       	mov	r31, r3
    141c:	f8 60       	ori	r31, 0x08	; 8
    141e:	1d c0       	rjmp	.+58     	; 0x145a <vfprintf+0xd2>
    1420:	37 fc       	sbrc	r3, 7
    1422:	2d c0       	rjmp	.+90     	; 0x147e <vfprintf+0xf6>
    1424:	20 ed       	ldi	r18, 0xD0	; 208
    1426:	28 0f       	add	r18, r24
    1428:	2a 30       	cpi	r18, 0x0A	; 10
    142a:	40 f0       	brcs	.+16     	; 0x143c <vfprintf+0xb4>
    142c:	8e 32       	cpi	r24, 0x2E	; 46
    142e:	b9 f4       	brne	.+46     	; 0x145e <vfprintf+0xd6>
    1430:	36 fc       	sbrc	r3, 6
    1432:	81 c1       	rjmp	.+770    	; 0x1736 <vfprintf+0x3ae>
    1434:	23 2d       	mov	r18, r3
    1436:	20 64       	ori	r18, 0x40	; 64
    1438:	32 2e       	mov	r3, r18
    143a:	19 c0       	rjmp	.+50     	; 0x146e <vfprintf+0xe6>
    143c:	36 fe       	sbrs	r3, 6
    143e:	06 c0       	rjmp	.+12     	; 0x144c <vfprintf+0xc4>
    1440:	8a e0       	ldi	r24, 0x0A	; 10
    1442:	98 9e       	mul	r9, r24
    1444:	20 0d       	add	r18, r0
    1446:	11 24       	eor	r1, r1
    1448:	92 2e       	mov	r9, r18
    144a:	11 c0       	rjmp	.+34     	; 0x146e <vfprintf+0xe6>
    144c:	ea e0       	ldi	r30, 0x0A	; 10
    144e:	2e 9e       	mul	r2, r30
    1450:	20 0d       	add	r18, r0
    1452:	11 24       	eor	r1, r1
    1454:	22 2e       	mov	r2, r18
    1456:	f3 2d       	mov	r31, r3
    1458:	f0 62       	ori	r31, 0x20	; 32
    145a:	3f 2e       	mov	r3, r31
    145c:	08 c0       	rjmp	.+16     	; 0x146e <vfprintf+0xe6>
    145e:	8c 36       	cpi	r24, 0x6C	; 108
    1460:	21 f4       	brne	.+8      	; 0x146a <vfprintf+0xe2>
    1462:	83 2d       	mov	r24, r3
    1464:	80 68       	ori	r24, 0x80	; 128
    1466:	38 2e       	mov	r3, r24
    1468:	02 c0       	rjmp	.+4      	; 0x146e <vfprintf+0xe6>
    146a:	88 36       	cpi	r24, 0x68	; 104
    146c:	41 f4       	brne	.+16     	; 0x147e <vfprintf+0xf6>
    146e:	f7 01       	movw	r30, r14
    1470:	93 fd       	sbrc	r25, 3
    1472:	85 91       	lpm	r24, Z+
    1474:	93 ff       	sbrs	r25, 3
    1476:	81 91       	ld	r24, Z+
    1478:	7f 01       	movw	r14, r30
    147a:	81 11       	cpse	r24, r1
    147c:	b3 cf       	rjmp	.-154    	; 0x13e4 <vfprintf+0x5c>
    147e:	98 2f       	mov	r25, r24
    1480:	9f 7d       	andi	r25, 0xDF	; 223
    1482:	95 54       	subi	r25, 0x45	; 69
    1484:	93 30       	cpi	r25, 0x03	; 3
    1486:	28 f4       	brcc	.+10     	; 0x1492 <vfprintf+0x10a>
    1488:	0c 5f       	subi	r16, 0xFC	; 252
    148a:	1f 4f       	sbci	r17, 0xFF	; 255
    148c:	9f e3       	ldi	r25, 0x3F	; 63
    148e:	99 83       	std	Y+1, r25	; 0x01
    1490:	0d c0       	rjmp	.+26     	; 0x14ac <vfprintf+0x124>
    1492:	83 36       	cpi	r24, 0x63	; 99
    1494:	31 f0       	breq	.+12     	; 0x14a2 <vfprintf+0x11a>
    1496:	83 37       	cpi	r24, 0x73	; 115
    1498:	71 f0       	breq	.+28     	; 0x14b6 <vfprintf+0x12e>
    149a:	83 35       	cpi	r24, 0x53	; 83
    149c:	09 f0       	breq	.+2      	; 0x14a0 <vfprintf+0x118>
    149e:	59 c0       	rjmp	.+178    	; 0x1552 <vfprintf+0x1ca>
    14a0:	21 c0       	rjmp	.+66     	; 0x14e4 <vfprintf+0x15c>
    14a2:	f8 01       	movw	r30, r16
    14a4:	80 81       	ld	r24, Z
    14a6:	89 83       	std	Y+1, r24	; 0x01
    14a8:	0e 5f       	subi	r16, 0xFE	; 254
    14aa:	1f 4f       	sbci	r17, 0xFF	; 255
    14ac:	88 24       	eor	r8, r8
    14ae:	83 94       	inc	r8
    14b0:	91 2c       	mov	r9, r1
    14b2:	53 01       	movw	r10, r6
    14b4:	13 c0       	rjmp	.+38     	; 0x14dc <vfprintf+0x154>
    14b6:	28 01       	movw	r4, r16
    14b8:	f2 e0       	ldi	r31, 0x02	; 2
    14ba:	4f 0e       	add	r4, r31
    14bc:	51 1c       	adc	r5, r1
    14be:	f8 01       	movw	r30, r16
    14c0:	a0 80       	ld	r10, Z
    14c2:	b1 80       	ldd	r11, Z+1	; 0x01
    14c4:	36 fe       	sbrs	r3, 6
    14c6:	03 c0       	rjmp	.+6      	; 0x14ce <vfprintf+0x146>
    14c8:	69 2d       	mov	r22, r9
    14ca:	70 e0       	ldi	r23, 0x00	; 0
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <vfprintf+0x14a>
    14ce:	6f ef       	ldi	r22, 0xFF	; 255
    14d0:	7f ef       	ldi	r23, 0xFF	; 255
    14d2:	c5 01       	movw	r24, r10
    14d4:	0e 94 b0 0b 	call	0x1760	; 0x1760 <strnlen>
    14d8:	4c 01       	movw	r8, r24
    14da:	82 01       	movw	r16, r4
    14dc:	f3 2d       	mov	r31, r3
    14de:	ff 77       	andi	r31, 0x7F	; 127
    14e0:	3f 2e       	mov	r3, r31
    14e2:	16 c0       	rjmp	.+44     	; 0x1510 <vfprintf+0x188>
    14e4:	28 01       	movw	r4, r16
    14e6:	22 e0       	ldi	r18, 0x02	; 2
    14e8:	42 0e       	add	r4, r18
    14ea:	51 1c       	adc	r5, r1
    14ec:	f8 01       	movw	r30, r16
    14ee:	a0 80       	ld	r10, Z
    14f0:	b1 80       	ldd	r11, Z+1	; 0x01
    14f2:	36 fe       	sbrs	r3, 6
    14f4:	03 c0       	rjmp	.+6      	; 0x14fc <vfprintf+0x174>
    14f6:	69 2d       	mov	r22, r9
    14f8:	70 e0       	ldi	r23, 0x00	; 0
    14fa:	02 c0       	rjmp	.+4      	; 0x1500 <vfprintf+0x178>
    14fc:	6f ef       	ldi	r22, 0xFF	; 255
    14fe:	7f ef       	ldi	r23, 0xFF	; 255
    1500:	c5 01       	movw	r24, r10
    1502:	0e 94 a5 0b 	call	0x174a	; 0x174a <strnlen_P>
    1506:	4c 01       	movw	r8, r24
    1508:	f3 2d       	mov	r31, r3
    150a:	f0 68       	ori	r31, 0x80	; 128
    150c:	3f 2e       	mov	r3, r31
    150e:	82 01       	movw	r16, r4
    1510:	33 fc       	sbrc	r3, 3
    1512:	1b c0       	rjmp	.+54     	; 0x154a <vfprintf+0x1c2>
    1514:	82 2d       	mov	r24, r2
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	88 16       	cp	r8, r24
    151a:	99 06       	cpc	r9, r25
    151c:	b0 f4       	brcc	.+44     	; 0x154a <vfprintf+0x1c2>
    151e:	b6 01       	movw	r22, r12
    1520:	80 e2       	ldi	r24, 0x20	; 32
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1528:	2a 94       	dec	r2
    152a:	f4 cf       	rjmp	.-24     	; 0x1514 <vfprintf+0x18c>
    152c:	f5 01       	movw	r30, r10
    152e:	37 fc       	sbrc	r3, 7
    1530:	85 91       	lpm	r24, Z+
    1532:	37 fe       	sbrs	r3, 7
    1534:	81 91       	ld	r24, Z+
    1536:	5f 01       	movw	r10, r30
    1538:	b6 01       	movw	r22, r12
    153a:	90 e0       	ldi	r25, 0x00	; 0
    153c:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1540:	21 10       	cpse	r2, r1
    1542:	2a 94       	dec	r2
    1544:	21 e0       	ldi	r18, 0x01	; 1
    1546:	82 1a       	sub	r8, r18
    1548:	91 08       	sbc	r9, r1
    154a:	81 14       	cp	r8, r1
    154c:	91 04       	cpc	r9, r1
    154e:	71 f7       	brne	.-36     	; 0x152c <vfprintf+0x1a4>
    1550:	e8 c0       	rjmp	.+464    	; 0x1722 <vfprintf+0x39a>
    1552:	84 36       	cpi	r24, 0x64	; 100
    1554:	11 f0       	breq	.+4      	; 0x155a <vfprintf+0x1d2>
    1556:	89 36       	cpi	r24, 0x69	; 105
    1558:	41 f5       	brne	.+80     	; 0x15aa <vfprintf+0x222>
    155a:	f8 01       	movw	r30, r16
    155c:	37 fe       	sbrs	r3, 7
    155e:	07 c0       	rjmp	.+14     	; 0x156e <vfprintf+0x1e6>
    1560:	60 81       	ld	r22, Z
    1562:	71 81       	ldd	r23, Z+1	; 0x01
    1564:	82 81       	ldd	r24, Z+2	; 0x02
    1566:	93 81       	ldd	r25, Z+3	; 0x03
    1568:	0c 5f       	subi	r16, 0xFC	; 252
    156a:	1f 4f       	sbci	r17, 0xFF	; 255
    156c:	08 c0       	rjmp	.+16     	; 0x157e <vfprintf+0x1f6>
    156e:	60 81       	ld	r22, Z
    1570:	71 81       	ldd	r23, Z+1	; 0x01
    1572:	07 2e       	mov	r0, r23
    1574:	00 0c       	add	r0, r0
    1576:	88 0b       	sbc	r24, r24
    1578:	99 0b       	sbc	r25, r25
    157a:	0e 5f       	subi	r16, 0xFE	; 254
    157c:	1f 4f       	sbci	r17, 0xFF	; 255
    157e:	f3 2d       	mov	r31, r3
    1580:	ff 76       	andi	r31, 0x6F	; 111
    1582:	3f 2e       	mov	r3, r31
    1584:	97 ff       	sbrs	r25, 7
    1586:	09 c0       	rjmp	.+18     	; 0x159a <vfprintf+0x212>
    1588:	90 95       	com	r25
    158a:	80 95       	com	r24
    158c:	70 95       	com	r23
    158e:	61 95       	neg	r22
    1590:	7f 4f       	sbci	r23, 0xFF	; 255
    1592:	8f 4f       	sbci	r24, 0xFF	; 255
    1594:	9f 4f       	sbci	r25, 0xFF	; 255
    1596:	f0 68       	ori	r31, 0x80	; 128
    1598:	3f 2e       	mov	r3, r31
    159a:	2a e0       	ldi	r18, 0x0A	; 10
    159c:	30 e0       	ldi	r19, 0x00	; 0
    159e:	a3 01       	movw	r20, r6
    15a0:	0e 94 07 0c 	call	0x180e	; 0x180e <__ultoa_invert>
    15a4:	88 2e       	mov	r8, r24
    15a6:	86 18       	sub	r8, r6
    15a8:	45 c0       	rjmp	.+138    	; 0x1634 <vfprintf+0x2ac>
    15aa:	85 37       	cpi	r24, 0x75	; 117
    15ac:	31 f4       	brne	.+12     	; 0x15ba <vfprintf+0x232>
    15ae:	23 2d       	mov	r18, r3
    15b0:	2f 7e       	andi	r18, 0xEF	; 239
    15b2:	b2 2e       	mov	r11, r18
    15b4:	2a e0       	ldi	r18, 0x0A	; 10
    15b6:	30 e0       	ldi	r19, 0x00	; 0
    15b8:	25 c0       	rjmp	.+74     	; 0x1604 <vfprintf+0x27c>
    15ba:	93 2d       	mov	r25, r3
    15bc:	99 7f       	andi	r25, 0xF9	; 249
    15be:	b9 2e       	mov	r11, r25
    15c0:	8f 36       	cpi	r24, 0x6F	; 111
    15c2:	c1 f0       	breq	.+48     	; 0x15f4 <vfprintf+0x26c>
    15c4:	18 f4       	brcc	.+6      	; 0x15cc <vfprintf+0x244>
    15c6:	88 35       	cpi	r24, 0x58	; 88
    15c8:	79 f0       	breq	.+30     	; 0x15e8 <vfprintf+0x260>
    15ca:	b5 c0       	rjmp	.+362    	; 0x1736 <vfprintf+0x3ae>
    15cc:	80 37       	cpi	r24, 0x70	; 112
    15ce:	19 f0       	breq	.+6      	; 0x15d6 <vfprintf+0x24e>
    15d0:	88 37       	cpi	r24, 0x78	; 120
    15d2:	21 f0       	breq	.+8      	; 0x15dc <vfprintf+0x254>
    15d4:	b0 c0       	rjmp	.+352    	; 0x1736 <vfprintf+0x3ae>
    15d6:	e9 2f       	mov	r30, r25
    15d8:	e0 61       	ori	r30, 0x10	; 16
    15da:	be 2e       	mov	r11, r30
    15dc:	b4 fe       	sbrs	r11, 4
    15de:	0d c0       	rjmp	.+26     	; 0x15fa <vfprintf+0x272>
    15e0:	fb 2d       	mov	r31, r11
    15e2:	f4 60       	ori	r31, 0x04	; 4
    15e4:	bf 2e       	mov	r11, r31
    15e6:	09 c0       	rjmp	.+18     	; 0x15fa <vfprintf+0x272>
    15e8:	34 fe       	sbrs	r3, 4
    15ea:	0a c0       	rjmp	.+20     	; 0x1600 <vfprintf+0x278>
    15ec:	29 2f       	mov	r18, r25
    15ee:	26 60       	ori	r18, 0x06	; 6
    15f0:	b2 2e       	mov	r11, r18
    15f2:	06 c0       	rjmp	.+12     	; 0x1600 <vfprintf+0x278>
    15f4:	28 e0       	ldi	r18, 0x08	; 8
    15f6:	30 e0       	ldi	r19, 0x00	; 0
    15f8:	05 c0       	rjmp	.+10     	; 0x1604 <vfprintf+0x27c>
    15fa:	20 e1       	ldi	r18, 0x10	; 16
    15fc:	30 e0       	ldi	r19, 0x00	; 0
    15fe:	02 c0       	rjmp	.+4      	; 0x1604 <vfprintf+0x27c>
    1600:	20 e1       	ldi	r18, 0x10	; 16
    1602:	32 e0       	ldi	r19, 0x02	; 2
    1604:	f8 01       	movw	r30, r16
    1606:	b7 fe       	sbrs	r11, 7
    1608:	07 c0       	rjmp	.+14     	; 0x1618 <vfprintf+0x290>
    160a:	60 81       	ld	r22, Z
    160c:	71 81       	ldd	r23, Z+1	; 0x01
    160e:	82 81       	ldd	r24, Z+2	; 0x02
    1610:	93 81       	ldd	r25, Z+3	; 0x03
    1612:	0c 5f       	subi	r16, 0xFC	; 252
    1614:	1f 4f       	sbci	r17, 0xFF	; 255
    1616:	06 c0       	rjmp	.+12     	; 0x1624 <vfprintf+0x29c>
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	80 e0       	ldi	r24, 0x00	; 0
    161e:	90 e0       	ldi	r25, 0x00	; 0
    1620:	0e 5f       	subi	r16, 0xFE	; 254
    1622:	1f 4f       	sbci	r17, 0xFF	; 255
    1624:	a3 01       	movw	r20, r6
    1626:	0e 94 07 0c 	call	0x180e	; 0x180e <__ultoa_invert>
    162a:	88 2e       	mov	r8, r24
    162c:	86 18       	sub	r8, r6
    162e:	fb 2d       	mov	r31, r11
    1630:	ff 77       	andi	r31, 0x7F	; 127
    1632:	3f 2e       	mov	r3, r31
    1634:	36 fe       	sbrs	r3, 6
    1636:	0d c0       	rjmp	.+26     	; 0x1652 <vfprintf+0x2ca>
    1638:	23 2d       	mov	r18, r3
    163a:	2e 7f       	andi	r18, 0xFE	; 254
    163c:	a2 2e       	mov	r10, r18
    163e:	89 14       	cp	r8, r9
    1640:	58 f4       	brcc	.+22     	; 0x1658 <vfprintf+0x2d0>
    1642:	34 fe       	sbrs	r3, 4
    1644:	0b c0       	rjmp	.+22     	; 0x165c <vfprintf+0x2d4>
    1646:	32 fc       	sbrc	r3, 2
    1648:	09 c0       	rjmp	.+18     	; 0x165c <vfprintf+0x2d4>
    164a:	83 2d       	mov	r24, r3
    164c:	8e 7e       	andi	r24, 0xEE	; 238
    164e:	a8 2e       	mov	r10, r24
    1650:	05 c0       	rjmp	.+10     	; 0x165c <vfprintf+0x2d4>
    1652:	b8 2c       	mov	r11, r8
    1654:	a3 2c       	mov	r10, r3
    1656:	03 c0       	rjmp	.+6      	; 0x165e <vfprintf+0x2d6>
    1658:	b8 2c       	mov	r11, r8
    165a:	01 c0       	rjmp	.+2      	; 0x165e <vfprintf+0x2d6>
    165c:	b9 2c       	mov	r11, r9
    165e:	a4 fe       	sbrs	r10, 4
    1660:	0f c0       	rjmp	.+30     	; 0x1680 <vfprintf+0x2f8>
    1662:	fe 01       	movw	r30, r28
    1664:	e8 0d       	add	r30, r8
    1666:	f1 1d       	adc	r31, r1
    1668:	80 81       	ld	r24, Z
    166a:	80 33       	cpi	r24, 0x30	; 48
    166c:	21 f4       	brne	.+8      	; 0x1676 <vfprintf+0x2ee>
    166e:	9a 2d       	mov	r25, r10
    1670:	99 7e       	andi	r25, 0xE9	; 233
    1672:	a9 2e       	mov	r10, r25
    1674:	09 c0       	rjmp	.+18     	; 0x1688 <vfprintf+0x300>
    1676:	a2 fe       	sbrs	r10, 2
    1678:	06 c0       	rjmp	.+12     	; 0x1686 <vfprintf+0x2fe>
    167a:	b3 94       	inc	r11
    167c:	b3 94       	inc	r11
    167e:	04 c0       	rjmp	.+8      	; 0x1688 <vfprintf+0x300>
    1680:	8a 2d       	mov	r24, r10
    1682:	86 78       	andi	r24, 0x86	; 134
    1684:	09 f0       	breq	.+2      	; 0x1688 <vfprintf+0x300>
    1686:	b3 94       	inc	r11
    1688:	a3 fc       	sbrc	r10, 3
    168a:	11 c0       	rjmp	.+34     	; 0x16ae <vfprintf+0x326>
    168c:	a0 fe       	sbrs	r10, 0
    168e:	06 c0       	rjmp	.+12     	; 0x169c <vfprintf+0x314>
    1690:	b2 14       	cp	r11, r2
    1692:	88 f4       	brcc	.+34     	; 0x16b6 <vfprintf+0x32e>
    1694:	28 0c       	add	r2, r8
    1696:	92 2c       	mov	r9, r2
    1698:	9b 18       	sub	r9, r11
    169a:	0e c0       	rjmp	.+28     	; 0x16b8 <vfprintf+0x330>
    169c:	b2 14       	cp	r11, r2
    169e:	60 f4       	brcc	.+24     	; 0x16b8 <vfprintf+0x330>
    16a0:	b6 01       	movw	r22, r12
    16a2:	80 e2       	ldi	r24, 0x20	; 32
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    16aa:	b3 94       	inc	r11
    16ac:	f7 cf       	rjmp	.-18     	; 0x169c <vfprintf+0x314>
    16ae:	b2 14       	cp	r11, r2
    16b0:	18 f4       	brcc	.+6      	; 0x16b8 <vfprintf+0x330>
    16b2:	2b 18       	sub	r2, r11
    16b4:	02 c0       	rjmp	.+4      	; 0x16ba <vfprintf+0x332>
    16b6:	98 2c       	mov	r9, r8
    16b8:	21 2c       	mov	r2, r1
    16ba:	a4 fe       	sbrs	r10, 4
    16bc:	10 c0       	rjmp	.+32     	; 0x16de <vfprintf+0x356>
    16be:	b6 01       	movw	r22, r12
    16c0:	80 e3       	ldi	r24, 0x30	; 48
    16c2:	90 e0       	ldi	r25, 0x00	; 0
    16c4:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    16c8:	a2 fe       	sbrs	r10, 2
    16ca:	17 c0       	rjmp	.+46     	; 0x16fa <vfprintf+0x372>
    16cc:	a1 fc       	sbrc	r10, 1
    16ce:	03 c0       	rjmp	.+6      	; 0x16d6 <vfprintf+0x34e>
    16d0:	88 e7       	ldi	r24, 0x78	; 120
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <vfprintf+0x352>
    16d6:	88 e5       	ldi	r24, 0x58	; 88
    16d8:	90 e0       	ldi	r25, 0x00	; 0
    16da:	b6 01       	movw	r22, r12
    16dc:	0c c0       	rjmp	.+24     	; 0x16f6 <vfprintf+0x36e>
    16de:	8a 2d       	mov	r24, r10
    16e0:	86 78       	andi	r24, 0x86	; 134
    16e2:	59 f0       	breq	.+22     	; 0x16fa <vfprintf+0x372>
    16e4:	a1 fe       	sbrs	r10, 1
    16e6:	02 c0       	rjmp	.+4      	; 0x16ec <vfprintf+0x364>
    16e8:	8b e2       	ldi	r24, 0x2B	; 43
    16ea:	01 c0       	rjmp	.+2      	; 0x16ee <vfprintf+0x366>
    16ec:	80 e2       	ldi	r24, 0x20	; 32
    16ee:	a7 fc       	sbrc	r10, 7
    16f0:	8d e2       	ldi	r24, 0x2D	; 45
    16f2:	b6 01       	movw	r22, r12
    16f4:	90 e0       	ldi	r25, 0x00	; 0
    16f6:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    16fa:	89 14       	cp	r8, r9
    16fc:	38 f4       	brcc	.+14     	; 0x170c <vfprintf+0x384>
    16fe:	b6 01       	movw	r22, r12
    1700:	80 e3       	ldi	r24, 0x30	; 48
    1702:	90 e0       	ldi	r25, 0x00	; 0
    1704:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1708:	9a 94       	dec	r9
    170a:	f7 cf       	rjmp	.-18     	; 0x16fa <vfprintf+0x372>
    170c:	8a 94       	dec	r8
    170e:	f3 01       	movw	r30, r6
    1710:	e8 0d       	add	r30, r8
    1712:	f1 1d       	adc	r31, r1
    1714:	80 81       	ld	r24, Z
    1716:	b6 01       	movw	r22, r12
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    171e:	81 10       	cpse	r8, r1
    1720:	f5 cf       	rjmp	.-22     	; 0x170c <vfprintf+0x384>
    1722:	22 20       	and	r2, r2
    1724:	09 f4       	brne	.+2      	; 0x1728 <vfprintf+0x3a0>
    1726:	42 ce       	rjmp	.-892    	; 0x13ac <vfprintf+0x24>
    1728:	b6 01       	movw	r22, r12
    172a:	80 e2       	ldi	r24, 0x20	; 32
    172c:	90 e0       	ldi	r25, 0x00	; 0
    172e:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1732:	2a 94       	dec	r2
    1734:	f6 cf       	rjmp	.-20     	; 0x1722 <vfprintf+0x39a>
    1736:	f6 01       	movw	r30, r12
    1738:	86 81       	ldd	r24, Z+6	; 0x06
    173a:	97 81       	ldd	r25, Z+7	; 0x07
    173c:	02 c0       	rjmp	.+4      	; 0x1742 <vfprintf+0x3ba>
    173e:	8f ef       	ldi	r24, 0xFF	; 255
    1740:	9f ef       	ldi	r25, 0xFF	; 255
    1742:	2b 96       	adiw	r28, 0x0b	; 11
    1744:	e2 e1       	ldi	r30, 0x12	; 18
    1746:	0c 94 81 0c 	jmp	0x1902	; 0x1902 <__epilogue_restores__>

0000174a <strnlen_P>:
    174a:	fc 01       	movw	r30, r24
    174c:	05 90       	lpm	r0, Z+
    174e:	61 50       	subi	r22, 0x01	; 1
    1750:	70 40       	sbci	r23, 0x00	; 0
    1752:	01 10       	cpse	r0, r1
    1754:	d8 f7       	brcc	.-10     	; 0x174c <strnlen_P+0x2>
    1756:	80 95       	com	r24
    1758:	90 95       	com	r25
    175a:	8e 0f       	add	r24, r30
    175c:	9f 1f       	adc	r25, r31
    175e:	08 95       	ret

00001760 <strnlen>:
    1760:	fc 01       	movw	r30, r24
    1762:	61 50       	subi	r22, 0x01	; 1
    1764:	70 40       	sbci	r23, 0x00	; 0
    1766:	01 90       	ld	r0, Z+
    1768:	01 10       	cpse	r0, r1
    176a:	d8 f7       	brcc	.-10     	; 0x1762 <strnlen+0x2>
    176c:	80 95       	com	r24
    176e:	90 95       	com	r25
    1770:	8e 0f       	add	r24, r30
    1772:	9f 1f       	adc	r25, r31
    1774:	08 95       	ret

00001776 <strrev>:
    1776:	dc 01       	movw	r26, r24
    1778:	fc 01       	movw	r30, r24
    177a:	67 2f       	mov	r22, r23
    177c:	71 91       	ld	r23, Z+
    177e:	77 23       	and	r23, r23
    1780:	e1 f7       	brne	.-8      	; 0x177a <strrev+0x4>
    1782:	32 97       	sbiw	r30, 0x02	; 2
    1784:	04 c0       	rjmp	.+8      	; 0x178e <strrev+0x18>
    1786:	7c 91       	ld	r23, X
    1788:	6d 93       	st	X+, r22
    178a:	70 83       	st	Z, r23
    178c:	62 91       	ld	r22, -Z
    178e:	ae 17       	cp	r26, r30
    1790:	bf 07       	cpc	r27, r31
    1792:	c8 f3       	brcs	.-14     	; 0x1786 <strrev+0x10>
    1794:	08 95       	ret

00001796 <fputc>:
    1796:	0f 93       	push	r16
    1798:	1f 93       	push	r17
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
    179e:	fb 01       	movw	r30, r22
    17a0:	23 81       	ldd	r18, Z+3	; 0x03
    17a2:	21 fd       	sbrc	r18, 1
    17a4:	03 c0       	rjmp	.+6      	; 0x17ac <fputc+0x16>
    17a6:	8f ef       	ldi	r24, 0xFF	; 255
    17a8:	9f ef       	ldi	r25, 0xFF	; 255
    17aa:	2c c0       	rjmp	.+88     	; 0x1804 <fputc+0x6e>
    17ac:	22 ff       	sbrs	r18, 2
    17ae:	16 c0       	rjmp	.+44     	; 0x17dc <fputc+0x46>
    17b0:	46 81       	ldd	r20, Z+6	; 0x06
    17b2:	57 81       	ldd	r21, Z+7	; 0x07
    17b4:	24 81       	ldd	r18, Z+4	; 0x04
    17b6:	35 81       	ldd	r19, Z+5	; 0x05
    17b8:	42 17       	cp	r20, r18
    17ba:	53 07       	cpc	r21, r19
    17bc:	44 f4       	brge	.+16     	; 0x17ce <fputc+0x38>
    17be:	a0 81       	ld	r26, Z
    17c0:	b1 81       	ldd	r27, Z+1	; 0x01
    17c2:	9d 01       	movw	r18, r26
    17c4:	2f 5f       	subi	r18, 0xFF	; 255
    17c6:	3f 4f       	sbci	r19, 0xFF	; 255
    17c8:	31 83       	std	Z+1, r19	; 0x01
    17ca:	20 83       	st	Z, r18
    17cc:	8c 93       	st	X, r24
    17ce:	26 81       	ldd	r18, Z+6	; 0x06
    17d0:	37 81       	ldd	r19, Z+7	; 0x07
    17d2:	2f 5f       	subi	r18, 0xFF	; 255
    17d4:	3f 4f       	sbci	r19, 0xFF	; 255
    17d6:	37 83       	std	Z+7, r19	; 0x07
    17d8:	26 83       	std	Z+6, r18	; 0x06
    17da:	14 c0       	rjmp	.+40     	; 0x1804 <fputc+0x6e>
    17dc:	8b 01       	movw	r16, r22
    17de:	ec 01       	movw	r28, r24
    17e0:	fb 01       	movw	r30, r22
    17e2:	00 84       	ldd	r0, Z+8	; 0x08
    17e4:	f1 85       	ldd	r31, Z+9	; 0x09
    17e6:	e0 2d       	mov	r30, r0
    17e8:	09 95       	icall
    17ea:	89 2b       	or	r24, r25
    17ec:	e1 f6       	brne	.-72     	; 0x17a6 <fputc+0x10>
    17ee:	d8 01       	movw	r26, r16
    17f0:	16 96       	adiw	r26, 0x06	; 6
    17f2:	8d 91       	ld	r24, X+
    17f4:	9c 91       	ld	r25, X
    17f6:	17 97       	sbiw	r26, 0x07	; 7
    17f8:	01 96       	adiw	r24, 0x01	; 1
    17fa:	17 96       	adiw	r26, 0x07	; 7
    17fc:	9c 93       	st	X, r25
    17fe:	8e 93       	st	-X, r24
    1800:	16 97       	sbiw	r26, 0x06	; 6
    1802:	ce 01       	movw	r24, r28
    1804:	df 91       	pop	r29
    1806:	cf 91       	pop	r28
    1808:	1f 91       	pop	r17
    180a:	0f 91       	pop	r16
    180c:	08 95       	ret

0000180e <__ultoa_invert>:
    180e:	fa 01       	movw	r30, r20
    1810:	aa 27       	eor	r26, r26
    1812:	28 30       	cpi	r18, 0x08	; 8
    1814:	51 f1       	breq	.+84     	; 0x186a <__ultoa_invert+0x5c>
    1816:	20 31       	cpi	r18, 0x10	; 16
    1818:	81 f1       	breq	.+96     	; 0x187a <__ultoa_invert+0x6c>
    181a:	e8 94       	clt
    181c:	6f 93       	push	r22
    181e:	6e 7f       	andi	r22, 0xFE	; 254
    1820:	6e 5f       	subi	r22, 0xFE	; 254
    1822:	7f 4f       	sbci	r23, 0xFF	; 255
    1824:	8f 4f       	sbci	r24, 0xFF	; 255
    1826:	9f 4f       	sbci	r25, 0xFF	; 255
    1828:	af 4f       	sbci	r26, 0xFF	; 255
    182a:	b1 e0       	ldi	r27, 0x01	; 1
    182c:	3e d0       	rcall	.+124    	; 0x18aa <__ultoa_invert+0x9c>
    182e:	b4 e0       	ldi	r27, 0x04	; 4
    1830:	3c d0       	rcall	.+120    	; 0x18aa <__ultoa_invert+0x9c>
    1832:	67 0f       	add	r22, r23
    1834:	78 1f       	adc	r23, r24
    1836:	89 1f       	adc	r24, r25
    1838:	9a 1f       	adc	r25, r26
    183a:	a1 1d       	adc	r26, r1
    183c:	68 0f       	add	r22, r24
    183e:	79 1f       	adc	r23, r25
    1840:	8a 1f       	adc	r24, r26
    1842:	91 1d       	adc	r25, r1
    1844:	a1 1d       	adc	r26, r1
    1846:	6a 0f       	add	r22, r26
    1848:	71 1d       	adc	r23, r1
    184a:	81 1d       	adc	r24, r1
    184c:	91 1d       	adc	r25, r1
    184e:	a1 1d       	adc	r26, r1
    1850:	20 d0       	rcall	.+64     	; 0x1892 <__ultoa_invert+0x84>
    1852:	09 f4       	brne	.+2      	; 0x1856 <__ultoa_invert+0x48>
    1854:	68 94       	set
    1856:	3f 91       	pop	r19
    1858:	2a e0       	ldi	r18, 0x0A	; 10
    185a:	26 9f       	mul	r18, r22
    185c:	11 24       	eor	r1, r1
    185e:	30 19       	sub	r19, r0
    1860:	30 5d       	subi	r19, 0xD0	; 208
    1862:	31 93       	st	Z+, r19
    1864:	de f6       	brtc	.-74     	; 0x181c <__ultoa_invert+0xe>
    1866:	cf 01       	movw	r24, r30
    1868:	08 95       	ret
    186a:	46 2f       	mov	r20, r22
    186c:	47 70       	andi	r20, 0x07	; 7
    186e:	40 5d       	subi	r20, 0xD0	; 208
    1870:	41 93       	st	Z+, r20
    1872:	b3 e0       	ldi	r27, 0x03	; 3
    1874:	0f d0       	rcall	.+30     	; 0x1894 <__ultoa_invert+0x86>
    1876:	c9 f7       	brne	.-14     	; 0x186a <__ultoa_invert+0x5c>
    1878:	f6 cf       	rjmp	.-20     	; 0x1866 <__ultoa_invert+0x58>
    187a:	46 2f       	mov	r20, r22
    187c:	4f 70       	andi	r20, 0x0F	; 15
    187e:	40 5d       	subi	r20, 0xD0	; 208
    1880:	4a 33       	cpi	r20, 0x3A	; 58
    1882:	18 f0       	brcs	.+6      	; 0x188a <__ultoa_invert+0x7c>
    1884:	49 5d       	subi	r20, 0xD9	; 217
    1886:	31 fd       	sbrc	r19, 1
    1888:	40 52       	subi	r20, 0x20	; 32
    188a:	41 93       	st	Z+, r20
    188c:	02 d0       	rcall	.+4      	; 0x1892 <__ultoa_invert+0x84>
    188e:	a9 f7       	brne	.-22     	; 0x187a <__ultoa_invert+0x6c>
    1890:	ea cf       	rjmp	.-44     	; 0x1866 <__ultoa_invert+0x58>
    1892:	b4 e0       	ldi	r27, 0x04	; 4
    1894:	a6 95       	lsr	r26
    1896:	97 95       	ror	r25
    1898:	87 95       	ror	r24
    189a:	77 95       	ror	r23
    189c:	67 95       	ror	r22
    189e:	ba 95       	dec	r27
    18a0:	c9 f7       	brne	.-14     	; 0x1894 <__ultoa_invert+0x86>
    18a2:	00 97       	sbiw	r24, 0x00	; 0
    18a4:	61 05       	cpc	r22, r1
    18a6:	71 05       	cpc	r23, r1
    18a8:	08 95       	ret
    18aa:	9b 01       	movw	r18, r22
    18ac:	ac 01       	movw	r20, r24
    18ae:	0a 2e       	mov	r0, r26
    18b0:	06 94       	lsr	r0
    18b2:	57 95       	ror	r21
    18b4:	47 95       	ror	r20
    18b6:	37 95       	ror	r19
    18b8:	27 95       	ror	r18
    18ba:	ba 95       	dec	r27
    18bc:	c9 f7       	brne	.-14     	; 0x18b0 <__ultoa_invert+0xa2>
    18be:	62 0f       	add	r22, r18
    18c0:	73 1f       	adc	r23, r19
    18c2:	84 1f       	adc	r24, r20
    18c4:	95 1f       	adc	r25, r21
    18c6:	a0 1d       	adc	r26, r0
    18c8:	08 95       	ret

000018ca <__prologue_saves__>:
    18ca:	2f 92       	push	r2
    18cc:	3f 92       	push	r3
    18ce:	4f 92       	push	r4
    18d0:	5f 92       	push	r5
    18d2:	6f 92       	push	r6
    18d4:	7f 92       	push	r7
    18d6:	8f 92       	push	r8
    18d8:	9f 92       	push	r9
    18da:	af 92       	push	r10
    18dc:	bf 92       	push	r11
    18de:	cf 92       	push	r12
    18e0:	df 92       	push	r13
    18e2:	ef 92       	push	r14
    18e4:	ff 92       	push	r15
    18e6:	0f 93       	push	r16
    18e8:	1f 93       	push	r17
    18ea:	cf 93       	push	r28
    18ec:	df 93       	push	r29
    18ee:	cd b7       	in	r28, 0x3d	; 61
    18f0:	de b7       	in	r29, 0x3e	; 62
    18f2:	ca 1b       	sub	r28, r26
    18f4:	db 0b       	sbc	r29, r27
    18f6:	0f b6       	in	r0, 0x3f	; 63
    18f8:	f8 94       	cli
    18fa:	de bf       	out	0x3e, r29	; 62
    18fc:	0f be       	out	0x3f, r0	; 63
    18fe:	cd bf       	out	0x3d, r28	; 61
    1900:	09 94       	ijmp

00001902 <__epilogue_restores__>:
    1902:	2a 88       	ldd	r2, Y+18	; 0x12
    1904:	39 88       	ldd	r3, Y+17	; 0x11
    1906:	48 88       	ldd	r4, Y+16	; 0x10
    1908:	5f 84       	ldd	r5, Y+15	; 0x0f
    190a:	6e 84       	ldd	r6, Y+14	; 0x0e
    190c:	7d 84       	ldd	r7, Y+13	; 0x0d
    190e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1910:	9b 84       	ldd	r9, Y+11	; 0x0b
    1912:	aa 84       	ldd	r10, Y+10	; 0x0a
    1914:	b9 84       	ldd	r11, Y+9	; 0x09
    1916:	c8 84       	ldd	r12, Y+8	; 0x08
    1918:	df 80       	ldd	r13, Y+7	; 0x07
    191a:	ee 80       	ldd	r14, Y+6	; 0x06
    191c:	fd 80       	ldd	r15, Y+5	; 0x05
    191e:	0c 81       	ldd	r16, Y+4	; 0x04
    1920:	1b 81       	ldd	r17, Y+3	; 0x03
    1922:	aa 81       	ldd	r26, Y+2	; 0x02
    1924:	b9 81       	ldd	r27, Y+1	; 0x01
    1926:	ce 0f       	add	r28, r30
    1928:	d1 1d       	adc	r29, r1
    192a:	0f b6       	in	r0, 0x3f	; 63
    192c:	f8 94       	cli
    192e:	de bf       	out	0x3e, r29	; 62
    1930:	0f be       	out	0x3f, r0	; 63
    1932:	cd bf       	out	0x3d, r28	; 61
    1934:	ed 01       	movw	r28, r26
    1936:	08 95       	ret

00001938 <_exit>:
    1938:	f8 94       	cli

0000193a <__stop_program>:
    193a:	ff cf       	rjmp	.-2      	; 0x193a <__stop_program>
