
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000aa  00800100  000017d8  0000186c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  008001aa  008001aa  00001916  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001916  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001974  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  000019b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a5a  00000000  00000000  00001a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a6a  00000000  00000000  000034b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a0c  00000000  00000000  00003f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f4  00000000  00000000  00004928  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059c  00000000  00000000  00004b1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e9d  00000000  00000000  000050b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00005f55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__EEPROM_REGION_LENGTH__+0x108>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e8 ed       	ldi	r30, 0xD8	; 216
     122:	f7 e1       	ldi	r31, 0x17	; 23
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	aa 3a       	cpi	r26, 0xAA	; 170
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	aa ea       	ldi	r26, 0xAA	; 170
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	a5 3b       	cpi	r26, 0xB5	; 181
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 24 03 	call	0x648	; 0x648 <main>
     144:	0c 94 ea 0b 	jmp	0x17d4	; 0x17d4 <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <lcd_clear>:


void lcd_clear()
{
	lcdcmd(0x01);
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     20e:	08 95       	ret

00000210 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     216:	08 95       	ret

00000218 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     218:	80 ec       	ldi	r24, 0xC0	; 192
     21a:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     21e:	08 95       	ret

00000220 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     220:	8f ee       	ldi	r24, 0xEF	; 239
     222:	82 bb       	out	0x12, r24	; 18
     224:	83 ec       	ldi	r24, 0xC3	; 195
     226:	99 e0       	ldi	r25, 0x09	; 9
     228:	01 97       	sbiw	r24, 0x01	; 1
     22a:	f1 f7       	brne	.-4      	; 0x228 <keycheck+0x8>
     22c:	00 c0       	rjmp	.+0      	; 0x22e <keycheck+0xe>
     22e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     230:	80 9b       	sbis	0x10, 0	; 16
     232:	30 c0       	rjmp	.+96     	; 0x294 <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     234:	81 9b       	sbis	0x10, 1	; 16
     236:	30 c0       	rjmp	.+96     	; 0x298 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     238:	82 9b       	sbis	0x10, 2	; 16
     23a:	30 c0       	rjmp	.+96     	; 0x29c <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     23c:	8f ed       	ldi	r24, 0xDF	; 223
     23e:	82 bb       	out	0x12, r24	; 18
     240:	83 ec       	ldi	r24, 0xC3	; 195
     242:	99 e0       	ldi	r25, 0x09	; 9
     244:	01 97       	sbiw	r24, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <keycheck+0x24>
     248:	00 c0       	rjmp	.+0      	; 0x24a <keycheck+0x2a>
     24a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     24c:	80 9b       	sbis	0x10, 0	; 16
     24e:	28 c0       	rjmp	.+80     	; 0x2a0 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     250:	81 9b       	sbis	0x10, 1	; 16
     252:	28 c0       	rjmp	.+80     	; 0x2a4 <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     254:	82 9b       	sbis	0x10, 2	; 16
     256:	28 c0       	rjmp	.+80     	; 0x2a8 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     258:	8f eb       	ldi	r24, 0xBF	; 191
     25a:	82 bb       	out	0x12, r24	; 18
     25c:	83 ec       	ldi	r24, 0xC3	; 195
     25e:	99 e0       	ldi	r25, 0x09	; 9
     260:	01 97       	sbiw	r24, 0x01	; 1
     262:	f1 f7       	brne	.-4      	; 0x260 <keycheck+0x40>
     264:	00 c0       	rjmp	.+0      	; 0x266 <keycheck+0x46>
     266:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     268:	80 9b       	sbis	0x10, 0	; 16
     26a:	20 c0       	rjmp	.+64     	; 0x2ac <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     26c:	81 9b       	sbis	0x10, 1	; 16
     26e:	20 c0       	rjmp	.+64     	; 0x2b0 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     270:	82 9b       	sbis	0x10, 2	; 16
     272:	20 c0       	rjmp	.+64     	; 0x2b4 <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     274:	8f e7       	ldi	r24, 0x7F	; 127
     276:	82 bb       	out	0x12, r24	; 18
     278:	83 ec       	ldi	r24, 0xC3	; 195
     27a:	99 e0       	ldi	r25, 0x09	; 9
     27c:	01 97       	sbiw	r24, 0x01	; 1
     27e:	f1 f7       	brne	.-4      	; 0x27c <keycheck+0x5c>
     280:	00 c0       	rjmp	.+0      	; 0x282 <keycheck+0x62>
     282:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     284:	80 9b       	sbis	0x10, 0	; 16
     286:	18 c0       	rjmp	.+48     	; 0x2b8 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     288:	81 9b       	sbis	0x10, 1	; 16
     28a:	18 c0       	rjmp	.+48     	; 0x2bc <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     28c:	82 99       	sbic	0x10, 2	; 16
     28e:	18 c0       	rjmp	.+48     	; 0x2c0 <keycheck+0xa0>
	{
		return '#';
     290:	83 e2       	ldi	r24, 0x23	; 35
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     294:	81 e3       	ldi	r24, 0x31	; 49
     296:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     298:	82 e3       	ldi	r24, 0x32	; 50
     29a:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     29c:	83 e3       	ldi	r24, 0x33	; 51
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     2a0:	84 e3       	ldi	r24, 0x34	; 52
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     2a4:	85 e3       	ldi	r24, 0x35	; 53
     2a6:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     2a8:	86 e3       	ldi	r24, 0x36	; 54
     2aa:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     2ac:	87 e3       	ldi	r24, 0x37	; 55
     2ae:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     2b0:	88 e3       	ldi	r24, 0x38	; 56
     2b2:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     2b4:	89 e3       	ldi	r24, 0x39	; 57
     2b6:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2b8:	8a e2       	ldi	r24, 0x2A	; 42
     2ba:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2bc:	80 e3       	ldi	r24, 0x30	; 48
     2be:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2c0:	81 e6       	ldi	r24, 0x61	; 97

}
     2c2:	08 95       	ret

000002c4 <scankey>:

char scankey()
{
	char key='a';
     2c4:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2c6:	02 c0       	rjmp	.+4      	; 0x2cc <scankey+0x8>
	{
		key=keycheck();
     2c8:	0e 94 10 01 	call	0x220	; 0x220 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2cc:	81 36       	cpi	r24, 0x61	; 97
     2ce:	e1 f3       	breq	.-8      	; 0x2c8 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2d0:	08 95       	ret

000002d2 <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2d2:	84 b3       	in	r24, 0x14	; 20
     2d4:	81 60       	ori	r24, 0x01	; 1
     2d6:	84 bb       	out	0x14, r24	; 20
     2d8:	08 95       	ret

000002da <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2da:	85 b3       	in	r24, 0x15	; 21
     2dc:	81 60       	ori	r24, 0x01	; 1
     2de:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2e0:	85 e0       	ldi	r24, 0x05	; 5
     2e2:	8a 95       	dec	r24
     2e4:	f1 f7       	brne	.-4      	; 0x2e2 <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2e6:	85 b3       	in	r24, 0x15	; 21
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	85 bb       	out	0x15, r24	; 21
     2ec:	08 95       	ret

000002ee <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2ee:	8f 92       	push	r8
     2f0:	9f 92       	push	r9
     2f2:	af 92       	push	r10
     2f4:	bf 92       	push	r11
     2f6:	cf 92       	push	r12
     2f8:	df 92       	push	r13
     2fa:	ef 92       	push	r14
     2fc:	ff 92       	push	r15
     2fe:	0f 93       	push	r16
     300:	1f 93       	push	r17
     302:	cf 93       	push	r28
     304:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     306:	d0 e0       	ldi	r29, 0x00	; 0
     308:	c0 e0       	ldi	r28, 0x00	; 0
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	a0 e0       	ldi	r26, 0x00	; 0
     30e:	f0 e0       	ldi	r31, 0x00	; 0
     310:	f1 2c       	mov	r15, r1
     312:	00 e0       	ldi	r16, 0x00	; 0
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	15 c0       	rjmp	.+42     	; 0x342 <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     318:	99 99       	sbic	0x13, 1	; 19
     31a:	25 c0       	rjmp	.+74     	; 0x366 <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     31c:	2d 2f       	mov	r18, r29
     31e:	3c 2f       	mov	r19, r28
     320:	4b 2f       	mov	r20, r27
     322:	5a 2f       	mov	r21, r26
     324:	6f 2f       	mov	r22, r31
     326:	7f 2d       	mov	r23, r15
     328:	80 2f       	mov	r24, r16
     32a:	91 2f       	mov	r25, r17
     32c:	a1 e0       	ldi	r26, 0x01	; 1
     32e:	0e 94 bf 08 	call	0x117e	; 0x117e <__adddi3_s8>
     332:	d2 2f       	mov	r29, r18
     334:	c3 2f       	mov	r28, r19
     336:	b4 2f       	mov	r27, r20
     338:	a5 2f       	mov	r26, r21
     33a:	f6 2f       	mov	r31, r22
     33c:	f7 2e       	mov	r15, r23
     33e:	08 2f       	mov	r16, r24
     340:	19 2f       	mov	r17, r25
     342:	2d 2f       	mov	r18, r29
     344:	3c 2f       	mov	r19, r28
     346:	4b 2f       	mov	r20, r27
     348:	5a 2f       	mov	r21, r26
     34a:	6f 2f       	mov	r22, r31
     34c:	7f 2d       	mov	r23, r15
     34e:	80 2f       	mov	r24, r16
     350:	91 2f       	mov	r25, r17
     352:	2f 3b       	cpi	r18, 0xBF	; 191
     354:	37 42       	sbci	r19, 0x27	; 39
     356:	49 40       	sbci	r20, 0x09	; 9
     358:	51 05       	cpc	r21, r1
     35a:	61 05       	cpc	r22, r1
     35c:	71 05       	cpc	r23, r1
     35e:	81 05       	cpc	r24, r1
     360:	91 05       	cpc	r25, r1
     362:	d1 f2       	breq	.-76     	; 0x318 <GetPulseWidth+0x2a>
     364:	c8 f2       	brcs	.-78     	; 0x318 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     366:	2d 2f       	mov	r18, r29
     368:	3c 2f       	mov	r19, r28
     36a:	4b 2f       	mov	r20, r27
     36c:	5a 2f       	mov	r21, r26
     36e:	6f 2f       	mov	r22, r31
     370:	7f 2d       	mov	r23, r15
     372:	80 2f       	mov	r24, r16
     374:	91 2f       	mov	r25, r17
     376:	20 3c       	cpi	r18, 0xC0	; 192
     378:	37 42       	sbci	r19, 0x27	; 39
     37a:	49 40       	sbci	r20, 0x09	; 9
     37c:	51 05       	cpc	r21, r1
     37e:	61 05       	cpc	r22, r1
     380:	71 05       	cpc	r23, r1
     382:	81 05       	cpc	r24, r1
     384:	91 05       	cpc	r25, r1
     386:	09 f4       	brne	.+2      	; 0x38a <GetPulseWidth+0x9c>
     388:	69 c0       	rjmp	.+210    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	return US_ERROR;
	
	TCCR1A=0X00;
     38a:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     38c:	82 e0       	ldi	r24, 0x02	; 2
     38e:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     390:	1d bc       	out	0x2d, r1	; 45
     392:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     394:	d0 e0       	ldi	r29, 0x00	; 0
     396:	c0 e0       	ldi	r28, 0x00	; 0
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	f0 e0       	ldi	r31, 0x00	; 0
     39e:	f1 2c       	mov	r15, r1
     3a0:	00 e0       	ldi	r16, 0x00	; 0
     3a2:	10 e0       	ldi	r17, 0x00	; 0
     3a4:	1a c0       	rjmp	.+52     	; 0x3da <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     3a6:	99 9b       	sbis	0x13, 1	; 19
     3a8:	2a c0       	rjmp	.+84     	; 0x3fe <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     3aa:	8c b5       	in	r24, 0x2c	; 44
     3ac:	9d b5       	in	r25, 0x2d	; 45
     3ae:	81 36       	cpi	r24, 0x61	; 97
     3b0:	9a 4e       	sbci	r25, 0xEA	; 234
     3b2:	28 f5       	brcc	.+74     	; 0x3fe <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     3b4:	2d 2f       	mov	r18, r29
     3b6:	3c 2f       	mov	r19, r28
     3b8:	4b 2f       	mov	r20, r27
     3ba:	5a 2f       	mov	r21, r26
     3bc:	6f 2f       	mov	r22, r31
     3be:	7f 2d       	mov	r23, r15
     3c0:	80 2f       	mov	r24, r16
     3c2:	91 2f       	mov	r25, r17
     3c4:	a1 e0       	ldi	r26, 0x01	; 1
     3c6:	0e 94 bf 08 	call	0x117e	; 0x117e <__adddi3_s8>
     3ca:	d2 2f       	mov	r29, r18
     3cc:	c3 2f       	mov	r28, r19
     3ce:	b4 2f       	mov	r27, r20
     3d0:	a5 2f       	mov	r26, r21
     3d2:	f6 2f       	mov	r31, r22
     3d4:	f7 2e       	mov	r15, r23
     3d6:	08 2f       	mov	r16, r24
     3d8:	19 2f       	mov	r17, r25
     3da:	2d 2f       	mov	r18, r29
     3dc:	3c 2f       	mov	r19, r28
     3de:	4b 2f       	mov	r20, r27
     3e0:	5a 2f       	mov	r21, r26
     3e2:	6f 2f       	mov	r22, r31
     3e4:	7f 2d       	mov	r23, r15
     3e6:	80 2f       	mov	r24, r16
     3e8:	91 2f       	mov	r25, r17
     3ea:	2f 3b       	cpi	r18, 0xBF	; 191
     3ec:	37 42       	sbci	r19, 0x27	; 39
     3ee:	49 40       	sbci	r20, 0x09	; 9
     3f0:	51 05       	cpc	r21, r1
     3f2:	61 05       	cpc	r22, r1
     3f4:	71 05       	cpc	r23, r1
     3f6:	81 05       	cpc	r24, r1
     3f8:	91 05       	cpc	r25, r1
     3fa:	a9 f2       	breq	.-86     	; 0x3a6 <GetPulseWidth+0xb8>
     3fc:	a0 f2       	brcs	.-88     	; 0x3a6 <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3fe:	2d 2f       	mov	r18, r29
     400:	3c 2f       	mov	r19, r28
     402:	4b 2f       	mov	r20, r27
     404:	5a 2f       	mov	r21, r26
     406:	6f 2f       	mov	r22, r31
     408:	7f 2d       	mov	r23, r15
     40a:	80 2f       	mov	r24, r16
     40c:	91 2f       	mov	r25, r17
     40e:	20 3c       	cpi	r18, 0xC0	; 192
     410:	37 42       	sbci	r19, 0x27	; 39
     412:	49 40       	sbci	r20, 0x09	; 9
     414:	51 05       	cpc	r21, r1
     416:	61 05       	cpc	r22, r1
     418:	71 05       	cpc	r23, r1
     41a:	81 05       	cpc	r24, r1
     41c:	91 05       	cpc	r25, r1
     41e:	19 f1       	breq	.+70     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
	return US_NO_OBSTACLE;

	result=TCNT1;
     420:	8c b4       	in	r8, 0x2c	; 44
     422:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     424:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     426:	28 2d       	mov	r18, r8
     428:	39 2d       	mov	r19, r9
     42a:	40 e0       	ldi	r20, 0x00	; 0
     42c:	50 e0       	ldi	r21, 0x00	; 0
     42e:	60 e0       	ldi	r22, 0x00	; 0
     430:	70 e0       	ldi	r23, 0x00	; 0
     432:	80 e0       	ldi	r24, 0x00	; 0
     434:	90 e0       	ldi	r25, 0x00	; 0
     436:	20 36       	cpi	r18, 0x60	; 96
     438:	ea ee       	ldi	r30, 0xEA	; 234
     43a:	3e 07       	cpc	r19, r30
     43c:	41 05       	cpc	r20, r1
     43e:	51 05       	cpc	r21, r1
     440:	61 05       	cpc	r22, r1
     442:	71 05       	cpc	r23, r1
     444:	81 05       	cpc	r24, r1
     446:	91 05       	cpc	r25, r1
     448:	09 f0       	breq	.+2      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
     44a:	90 f4       	brcc	.+36     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     44c:	01 e0       	ldi	r16, 0x01	; 1
     44e:	0e 94 a3 08 	call	0x1146	; 0x1146 <__lshrdi3>
     452:	62 2f       	mov	r22, r18
     454:	73 2f       	mov	r23, r19
     456:	84 2f       	mov	r24, r20
     458:	95 2f       	mov	r25, r21
     45a:	0e c0       	rjmp	.+28     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     45c:	6f ef       	ldi	r22, 0xFF	; 255
     45e:	7f ef       	ldi	r23, 0xFF	; 255
     460:	8f ef       	ldi	r24, 0xFF	; 255
     462:	9f ef       	ldi	r25, 0xFF	; 255
     464:	09 c0       	rjmp	.+18     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     466:	6e ef       	ldi	r22, 0xFE	; 254
     468:	7f ef       	ldi	r23, 0xFF	; 255
     46a:	8f ef       	ldi	r24, 0xFF	; 255
     46c:	9f ef       	ldi	r25, 0xFF	; 255
     46e:	04 c0       	rjmp	.+8      	; 0x478 <__LOCK_REGION_LENGTH__+0x78>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     470:	6e ef       	ldi	r22, 0xFE	; 254
     472:	7f ef       	ldi	r23, 0xFF	; 255
     474:	8f ef       	ldi	r24, 0xFF	; 255
     476:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	0f 91       	pop	r16
     480:	ff 90       	pop	r15
     482:	ef 90       	pop	r14
     484:	df 90       	pop	r13
     486:	cf 90       	pop	r12
     488:	bf 90       	pop	r11
     48a:	af 90       	pop	r10
     48c:	9f 90       	pop	r9
     48e:	8f 90       	pop	r8
     490:	08 95       	ret

00000492 <Request>:
#define DHT11_PIN 3
uint8_t c=0,I_RH,D_RH,I_Temp,D_Temp,CheckSum;

void Request()						/* Microcontroller send start pulse or request */
{
	DDRD |= (1<<DHT11_PIN);
     492:	81 b3       	in	r24, 0x11	; 17
     494:	88 60       	ori	r24, 0x08	; 8
     496:	81 bb       	out	0x11, r24	; 17
	PORTD &= ~(1<<DHT11_PIN);		/* set to low pin */
     498:	82 b3       	in	r24, 0x12	; 18
     49a:	87 7f       	andi	r24, 0xF7	; 247
     49c:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     49e:	87 e8       	ldi	r24, 0x87	; 135
     4a0:	93 e1       	ldi	r25, 0x13	; 19
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	f1 f7       	brne	.-4      	; 0x4a2 <Request+0x10>
     4a6:	00 c0       	rjmp	.+0      	; 0x4a8 <Request+0x16>
     4a8:	00 00       	nop
	_delay_ms(20);					/* wait for 20ms */
	PORTD |= (1<<DHT11_PIN);		/* set to high pin */
     4aa:	82 b3       	in	r24, 0x12	; 18
     4ac:	88 60       	ori	r24, 0x08	; 8
     4ae:	82 bb       	out	0x12, r24	; 18
     4b0:	08 95       	ret

000004b2 <Response>:
}

void Response()						/* receive response from DHT11 */
{
	DDRD &= ~(1<<DHT11_PIN);
     4b2:	81 b3       	in	r24, 0x11	; 17
     4b4:	87 7f       	andi	r24, 0xF7	; 247
     4b6:	81 bb       	out	0x11, r24	; 17
	while(PIND & (1<<DHT11_PIN));
     4b8:	83 99       	sbic	0x10, 3	; 16
     4ba:	fe cf       	rjmp	.-4      	; 0x4b8 <Response+0x6>
	while((PIND & (1<<DHT11_PIN))==0);
     4bc:	83 9b       	sbis	0x10, 3	; 16
     4be:	fe cf       	rjmp	.-4      	; 0x4bc <Response+0xa>
	while(PIND & (1<<DHT11_PIN));
     4c0:	83 99       	sbic	0x10, 3	; 16
     4c2:	fe cf       	rjmp	.-4      	; 0x4c0 <Response+0xe>
}
     4c4:	08 95       	ret

000004c6 <Receive_data>:

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	19 c0       	rjmp	.+50     	; 0x4fe <Receive_data+0x38>
	{
		while((PIND & (1<<DHT11_PIN)) == 0);	/* check received bit 0 or 1 */
     4cc:	83 9b       	sbis	0x10, 3	; 16
     4ce:	fe cf       	rjmp	.-4      	; 0x4cc <Receive_data+0x6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4d0:	8a e0       	ldi	r24, 0x0A	; 10
     4d2:	8a 95       	dec	r24
     4d4:	f1 f7       	brne	.-4      	; 0x4d2 <Receive_data+0xc>
		_delay_us(30);
		if(PIND & (1<<DHT11_PIN))				/* if high pulse is greater than 30ms */
     4d6:	83 9b       	sbis	0x10, 3	; 16
     4d8:	09 c0       	rjmp	.+18     	; 0x4ec <Receive_data+0x26>
		c = (c<<1)|(0x01);						/* then its logic HIGH */
     4da:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	88 0f       	add	r24, r24
     4e2:	99 1f       	adc	r25, r25
     4e4:	81 60       	ori	r24, 0x01	; 1
     4e6:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
     4ea:	05 c0       	rjmp	.+10     	; 0x4f6 <Receive_data+0x30>
		else									/* otherwise its logic LOW */
		c = (c<<1);
     4ec:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
     4f0:	88 0f       	add	r24, r24
     4f2:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <__data_end>
		while(PIND & (1<<DHT11_PIN));
     4f6:	83 99       	sbic	0x10, 3	; 16
     4f8:	fe cf       	rjmp	.-4      	; 0x4f6 <Receive_data+0x30>
	while(PIND & (1<<DHT11_PIN));
}

uint8_t Receive_data()							/* receive data */
{
	for (int q=0; q<8; q++)
     4fa:	2f 5f       	subi	r18, 0xFF	; 255
     4fc:	3f 4f       	sbci	r19, 0xFF	; 255
     4fe:	28 30       	cpi	r18, 0x08	; 8
     500:	31 05       	cpc	r19, r1
     502:	24 f3       	brlt	.-56     	; 0x4cc <Receive_data+0x6>
		else									/* otherwise its logic LOW */
		c = (c<<1);
		while(PIND & (1<<DHT11_PIN));
	}
	return c;
     504:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <__data_end>
     508:	08 95       	ret

0000050a <displayKey>:




int displayKey()
{
     50a:	4f 92       	push	r4
     50c:	5f 92       	push	r5
     50e:	6f 92       	push	r6
     510:	7f 92       	push	r7
     512:	8f 92       	push	r8
     514:	9f 92       	push	r9
     516:	af 92       	push	r10
     518:	bf 92       	push	r11
     51a:	cf 92       	push	r12
     51c:	df 92       	push	r13
     51e:	ef 92       	push	r14
     520:	ff 92       	push	r15
     522:	0f 93       	push	r16
     524:	1f 93       	push	r17
     526:	cf 93       	push	r28
     528:	df 93       	push	r29
     52a:	cd b7       	in	r28, 0x3d	; 61
     52c:	de b7       	in	r29, 0x3e	; 62
     52e:	64 97       	sbiw	r28, 0x14	; 20
     530:	0f b6       	in	r0, 0x3f	; 63
     532:	f8 94       	cli
     534:	de bf       	out	0x3e, r29	; 62
     536:	0f be       	out	0x3f, r0	; 63
     538:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     53a:	00 e0       	ldi	r16, 0x00	; 0
     53c:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     53e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
     542:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <key>
		lcddata(key);
     546:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     54a:	80 91 af 01 	lds	r24, 0x01AF	; 0x8001af <key>
     54e:	83 32       	cpi	r24, 0x23	; 35
     550:	c9 f0       	breq	.+50     	; 0x584 <displayKey+0x7a>
		tmpNum = charToInt(key);
     552:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     556:	f8 01       	movw	r30, r16
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	21 e0       	ldi	r18, 0x01	; 1
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	2c 0f       	add	r18, r28
     562:	3d 1f       	adc	r19, r29
     564:	e2 0f       	add	r30, r18
     566:	f3 1f       	adc	r31, r19
     568:	91 83       	std	Z+1, r25	; 0x01
     56a:	80 83       	st	Z, r24
		i++;
     56c:	0f 5f       	subi	r16, 0xFF	; 255
     56e:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     570:	3f e5       	ldi	r19, 0x5F	; 95
     572:	8a ee       	ldi	r24, 0xEA	; 234
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	31 50       	subi	r19, 0x01	; 1
     578:	80 40       	sbci	r24, 0x00	; 0
     57a:	90 40       	sbci	r25, 0x00	; 0
     57c:	e1 f7       	brne	.-8      	; 0x576 <displayKey+0x6c>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <displayKey+0x76>
     580:	00 00       	nop
     582:	dd cf       	rjmp	.-70     	; 0x53e <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     584:	58 01       	movw	r10, r16
     586:	21 e0       	ldi	r18, 0x01	; 1
     588:	a2 1a       	sub	r10, r18
     58a:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     58c:	e1 2c       	mov	r14, r1
     58e:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     590:	81 2c       	mov	r8, r1
     592:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     594:	3b c0       	rjmp	.+118    	; 0x60c <displayKey+0x102>
		num += data[j]*pow(10,k);
     596:	f7 01       	movw	r30, r14
     598:	ee 0f       	add	r30, r30
     59a:	ff 1f       	adc	r31, r31
     59c:	81 e0       	ldi	r24, 0x01	; 1
     59e:	90 e0       	ldi	r25, 0x00	; 0
     5a0:	8c 0f       	add	r24, r28
     5a2:	9d 1f       	adc	r25, r29
     5a4:	e8 0f       	add	r30, r24
     5a6:	f9 1f       	adc	r31, r25
     5a8:	c0 80       	ld	r12, Z
     5aa:	d1 80       	ldd	r13, Z+1	; 0x01
     5ac:	b5 01       	movw	r22, r10
     5ae:	0b 2c       	mov	r0, r11
     5b0:	00 0c       	add	r0, r0
     5b2:	88 0b       	sbc	r24, r24
     5b4:	99 0b       	sbc	r25, r25
     5b6:	0e 94 b1 05 	call	0xb62	; 0xb62 <__floatsisf>
     5ba:	9b 01       	movw	r18, r22
     5bc:	ac 01       	movw	r20, r24
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	80 e2       	ldi	r24, 0x20	; 32
     5c4:	91 e4       	ldi	r25, 0x41	; 65
     5c6:	0e 94 aa 06 	call	0xd54	; 0xd54 <pow>
     5ca:	2b 01       	movw	r4, r22
     5cc:	3c 01       	movw	r6, r24
     5ce:	b6 01       	movw	r22, r12
     5d0:	dd 0c       	add	r13, r13
     5d2:	88 0b       	sbc	r24, r24
     5d4:	99 0b       	sbc	r25, r25
     5d6:	0e 94 b1 05 	call	0xb62	; 0xb62 <__floatsisf>
     5da:	a3 01       	movw	r20, r6
     5dc:	92 01       	movw	r18, r4
     5de:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__mulsf3>
     5e2:	2b 01       	movw	r4, r22
     5e4:	3c 01       	movw	r6, r24
     5e6:	b4 01       	movw	r22, r8
     5e8:	99 0c       	add	r9, r9
     5ea:	88 0b       	sbc	r24, r24
     5ec:	99 0b       	sbc	r25, r25
     5ee:	0e 94 b1 05 	call	0xb62	; 0xb62 <__floatsisf>
     5f2:	a3 01       	movw	r20, r6
     5f4:	92 01       	movw	r18, r4
     5f6:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__addsf3>
     5fa:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fixsfsi>
     5fe:	4b 01       	movw	r8, r22
		k--;
     600:	91 e0       	ldi	r25, 0x01	; 1
     602:	a9 1a       	sub	r10, r25
     604:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     606:	2f ef       	ldi	r18, 0xFF	; 255
     608:	e2 1a       	sub	r14, r18
     60a:	f2 0a       	sbc	r15, r18
     60c:	e0 16       	cp	r14, r16
     60e:	f1 06       	cpc	r15, r17
     610:	14 f2       	brlt	.-124    	; 0x596 <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     618:	c4 01       	movw	r24, r8
     61a:	64 96       	adiw	r28, 0x14	; 20
     61c:	0f b6       	in	r0, 0x3f	; 63
     61e:	f8 94       	cli
     620:	de bf       	out	0x3e, r29	; 62
     622:	0f be       	out	0x3f, r0	; 63
     624:	cd bf       	out	0x3d, r28	; 61
     626:	df 91       	pop	r29
     628:	cf 91       	pop	r28
     62a:	1f 91       	pop	r17
     62c:	0f 91       	pop	r16
     62e:	ff 90       	pop	r15
     630:	ef 90       	pop	r14
     632:	df 90       	pop	r13
     634:	cf 90       	pop	r12
     636:	bf 90       	pop	r11
     638:	af 90       	pop	r10
     63a:	9f 90       	pop	r9
     63c:	8f 90       	pop	r8
     63e:	7f 90       	pop	r7
     640:	6f 90       	pop	r6
     642:	5f 90       	pop	r5
     644:	4f 90       	pop	r4
     646:	08 95       	ret

00000648 <main>:



int main(void)

{
     648:	cf 93       	push	r28
     64a:	df 93       	push	r29
     64c:	cd b7       	in	r28, 0x3d	; 61
     64e:	de b7       	in	r29, 0x3e	; 62
     650:	2e 97       	sbiw	r28, 0x0e	; 14
     652:	0f b6       	in	r0, 0x3f	; 63
     654:	f8 94       	cli
     656:	de bf       	out	0x3e, r29	; 62
     658:	0f be       	out	0x3f, r0	; 63
     65a:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     65c:	8f ef       	ldi	r24, 0xFF	; 255
     65e:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     660:	87 e0       	ldi	r24, 0x07	; 7
     662:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     664:	80 ef       	ldi	r24, 0xF0	; 240
     666:	81 bb       	out	0x11, r24	; 17

	char key;
	char numberString[4];

	lcdint();
     668:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     66c:	6e e0       	ldi	r22, 0x0E	; 14
     66e:	80 e0       	ldi	r24, 0x00	; 0
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     676:	2f e7       	ldi	r18, 0x7F	; 127
     678:	89 ea       	ldi	r24, 0xA9	; 169
     67a:	93 e0       	ldi	r25, 0x03	; 3
     67c:	21 50       	subi	r18, 0x01	; 1
     67e:	80 40       	sbci	r24, 0x00	; 0
     680:	90 40       	sbci	r25, 0x00	; 0
     682:	e1 f7       	brne	.-8      	; 0x67c <main+0x34>
     684:	00 c0       	rjmp	.+0      	; 0x686 <main+0x3e>
     686:	00 00       	nop
	_delay_ms(1200);
	lcd_line_two();
     688:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("from ~GROUP 06~",16);
     68c:	60 e1       	ldi	r22, 0x10	; 16
     68e:	80 e1       	ldi	r24, 0x10	; 16
     690:	91 e0       	ldi	r25, 0x01	; 1
     692:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     696:	2f e3       	ldi	r18, 0x3F	; 63
     698:	8d e0       	ldi	r24, 0x0D	; 13
     69a:	93 e0       	ldi	r25, 0x03	; 3
     69c:	21 50       	subi	r18, 0x01	; 1
     69e:	80 40       	sbci	r24, 0x00	; 0
     6a0:	90 40       	sbci	r25, 0x00	; 0
     6a2:	e1 f7       	brne	.-8      	; 0x69c <main+0x54>
     6a4:	00 c0       	rjmp	.+0      	; 0x6a6 <main+0x5e>
     6a6:	00 00       	nop
	_delay_ms(1000);
	
	lcd_clear();
     6a8:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
	lcd_line_one();
     6ac:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
	lcd_string("ENTER 1 TO",10);
     6b0:	6a e0       	ldi	r22, 0x0A	; 10
     6b2:	80 e2       	ldi	r24, 0x20	; 32
     6b4:	91 e0       	ldi	r25, 0x01	; 1
     6b6:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     6ba:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
	lcd_string("INSTRUCTIONS",12);
     6be:	6c e0       	ldi	r22, 0x0C	; 12
     6c0:	8b e2       	ldi	r24, 0x2B	; 43
     6c2:	91 e0       	ldi	r25, 0x01	; 1
     6c4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     6c8:	2f e7       	ldi	r18, 0x7F	; 127
     6ca:	89 ea       	ldi	r24, 0xA9	; 169
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	21 50       	subi	r18, 0x01	; 1
     6d0:	80 40       	sbci	r24, 0x00	; 0
     6d2:	90 40       	sbci	r25, 0x00	; 0
     6d4:	e1 f7       	brne	.-8      	; 0x6ce <main+0x86>
     6d6:	00 c0       	rjmp	.+0      	; 0x6d8 <main+0x90>
     6d8:	00 00       	nop

	
	while(1)
	{
		
		lcd_clear();
     6da:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
		lcd_string("ENTER COMMAND:",15);
     6de:	6f e0       	ldi	r22, 0x0F	; 15
     6e0:	88 e3       	ldi	r24, 0x38	; 56
     6e2:	91 e0       	ldi	r25, 0x01	; 1
     6e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
		key = scankey();
     6e8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
		char data[5];
		
		switch(key)
     6ec:	82 33       	cpi	r24, 0x32	; 50
     6ee:	99 f0       	breq	.+38     	; 0x716 <main+0xce>
     6f0:	18 f4       	brcc	.+6      	; 0x6f8 <main+0xb0>
     6f2:	81 33       	cpi	r24, 0x31	; 49
     6f4:	41 f0       	breq	.+16     	; 0x706 <main+0xbe>
     6f6:	f1 cf       	rjmp	.-30     	; 0x6da <main+0x92>
     6f8:	83 33       	cpi	r24, 0x33	; 51
     6fa:	09 f4       	brne	.+2      	; 0x6fe <main+0xb6>
     6fc:	4e c0       	rjmp	.+156    	; 0x79a <main+0x152>
     6fe:	84 33       	cpi	r24, 0x34	; 52
     700:	09 f4       	brne	.+2      	; 0x704 <main+0xbc>
     702:	ea c0       	rjmp	.+468    	; 0x8d8 <__EEPROM_REGION_LENGTH__+0xd8>
     704:	ea cf       	rjmp	.-44     	; 0x6da <main+0x92>
		{
			case '1':
				lcd_clear();
     706:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_string("INSTRUCTIONS",12);
     70a:	6c e0       	ldi	r22, 0x0C	; 12
     70c:	8b e2       	ldi	r24, 0x2B	; 43
     70e:	91 e0       	ldi	r25, 0x01	; 1
     710:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				break;
     714:	e2 cf       	rjmp	.-60     	; 0x6da <main+0x92>
			case '2':
				lcd_clear();
     716:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();
     71a:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("ENTER PLANT",11);
     71e:	6b e0       	ldi	r22, 0x0B	; 11
     720:	87 e4       	ldi	r24, 0x47	; 71
     722:	91 e0       	ldi	r25, 0x01	; 1
     724:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcd_line_two();
     728:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
				lcd_string("COUNT: ",7);
     72c:	67 e0       	ldi	r22, 0x07	; 7
     72e:	83 e5       	ldi	r24, 0x53	; 83
     730:	91 e0       	ldi	r25, 0x01	; 1
     732:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				key = scankey();
     736:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
				if(key == '*') break;
     73a:	8a 32       	cpi	r24, 0x2A	; 42
     73c:	71 f2       	breq	.-100    	; 0x6da <main+0x92>
				int plantCount = displayKey();
     73e:	0e 94 85 02 	call	0x50a	; 0x50a <displayKey>
				
				char text[10];
				sprintf(text, "%d", plantCount);
     742:	9f 93       	push	r25
     744:	8f 93       	push	r24
     746:	8b e5       	ldi	r24, 0x5B	; 91
     748:	91 e0       	ldi	r25, 0x01	; 1
     74a:	9f 93       	push	r25
     74c:	8f 93       	push	r24
     74e:	8e 01       	movw	r16, r28
     750:	0b 5f       	subi	r16, 0xFB	; 251
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	1f 93       	push	r17
     756:	0f 93       	push	r16
     758:	0e 94 f0 08 	call	0x11e0	; 0x11e0 <sprintf>
				
				lcdcmd(0x01);
     75c:	81 e0       	ldi	r24, 0x01	; 1
     75e:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("PLANT COUNT IS",15);
     762:	6f e0       	ldi	r22, 0x0F	; 15
     764:	8e e5       	ldi	r24, 0x5E	; 94
     766:	91 e0       	ldi	r25, 0x01	; 1
     768:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				lcdcmd(0xC0);
     76c:	80 ec       	ldi	r24, 0xC0	; 192
     76e:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string(text,10);
     772:	6a e0       	ldi	r22, 0x0A	; 10
     774:	c8 01       	movw	r24, r16
     776:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     77a:	2f e3       	ldi	r18, 0x3F	; 63
     77c:	8d e0       	ldi	r24, 0x0D	; 13
     77e:	93 e0       	ldi	r25, 0x03	; 3
     780:	21 50       	subi	r18, 0x01	; 1
     782:	80 40       	sbci	r24, 0x00	; 0
     784:	90 40       	sbci	r25, 0x00	; 0
     786:	e1 f7       	brne	.-8      	; 0x780 <main+0x138>
     788:	00 c0       	rjmp	.+0      	; 0x78a <main+0x142>
     78a:	00 00       	nop
     78c:	0f 90       	pop	r0
     78e:	0f 90       	pop	r0
     790:	0f 90       	pop	r0
     792:	0f 90       	pop	r0
     794:	0f 90       	pop	r0
     796:	0f 90       	pop	r0
     798:	a0 cf       	rjmp	.-192    	; 0x6da <main+0x92>
     79a:	87 ea       	ldi	r24, 0xA7	; 167
     79c:	91 e6       	ldi	r25, 0x61	; 97
     79e:	01 97       	sbiw	r24, 0x01	; 1
     7a0:	f1 f7       	brne	.-4      	; 0x79e <main+0x156>
     7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <main+0x15c>
     7a4:	00 00       	nop
					
					uint16_t r;
					
					_delay_ms(100);

					lcd_clear();
     7a6:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
					
					
					HCSR04Init();
     7aa:	0e 94 69 01 	call	0x2d2	; 0x2d2 <HCSR04Init>

					while(1)
					{	
						HCSR04Trigger();              
     7ae:	0e 94 6d 01 	call	0x2da	; 0x2da <HCSR04Trigger>
						r=GetPulseWidth();
     7b2:	0e 94 77 01 	call	0x2ee	; 0x2ee <GetPulseWidth>
						if(r==US_ERROR) 
     7b6:	6f 3f       	cpi	r22, 0xFF	; 255
     7b8:	2f ef       	ldi	r18, 0xFF	; 255
     7ba:	72 07       	cpc	r23, r18
     7bc:	89 f4       	brne	.+34     	; 0x7e0 <main+0x198>
						{
							lcd_clear();
     7be:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							lcd_string("E!",2);
     7c2:	62 e0       	ldi	r22, 0x02	; 2
     7c4:	8d e0       	ldi	r24, 0x0D	; 13
     7c6:	91 e0       	ldi	r25, 0x01	; 1
     7c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     7cc:	8f e3       	ldi	r24, 0x3F	; 63
     7ce:	9d e0       	ldi	r25, 0x0D	; 13
     7d0:	23 e0       	ldi	r18, 0x03	; 3
     7d2:	81 50       	subi	r24, 0x01	; 1
     7d4:	90 40       	sbci	r25, 0x00	; 0
     7d6:	20 40       	sbci	r18, 0x00	; 0
     7d8:	e1 f7       	brne	.-8      	; 0x7d2 <main+0x18a>
     7da:	00 c0       	rjmp	.+0      	; 0x7dc <main+0x194>
     7dc:	00 00       	nop
     7de:	e7 cf       	rjmp	.-50     	; 0x7ae <main+0x166>
							
						}
						else
						{
							
							distance=50-(r*0.034/2.0);	
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	0e 94 af 05 	call	0xb5e	; 0xb5e <__floatunsisf>
     7e8:	26 e9       	ldi	r18, 0x96	; 150
     7ea:	33 e4       	ldi	r19, 0x43	; 67
     7ec:	4b e0       	ldi	r20, 0x0B	; 11
     7ee:	5d e3       	ldi	r21, 0x3D	; 61
     7f0:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__mulsf3>
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	40 e0       	ldi	r20, 0x00	; 0
     7fa:	5f e3       	ldi	r21, 0x3F	; 63
     7fc:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__mulsf3>
     800:	9b 01       	movw	r18, r22
     802:	ac 01       	movw	r20, r24
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	88 e4       	ldi	r24, 0x48	; 72
     80a:	92 e4       	ldi	r25, 0x42	; 66
     80c:	0e 94 0c 05 	call	0xa18	; 0xa18 <__subsf3>
     810:	0e 94 79 05 	call	0xaf2	; 0xaf2 <__fixsfsi>
     814:	70 93 ae 01 	sts	0x01AE, r23	; 0x8001ae <distance+0x1>
     818:	60 93 ad 01 	sts	0x01AD, r22	; 0x8001ad <distance>
							
							
							
							if (distance != previous_distance)    
     81c:	20 91 ab 01 	lds	r18, 0x01AB	; 0x8001ab <previous_distance>
     820:	30 91 ac 01 	lds	r19, 0x01AC	; 0x8001ac <previous_distance+0x1>
     824:	26 17       	cp	r18, r22
     826:	37 07       	cpc	r19, r23
     828:	11 f0       	breq	.+4      	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
							{
								lcd_clear();
     82a:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
							}
							
	
							
							lcd_line_one();
     82e:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
							lcd_string("WATER LV =",11);
     832:	6b e0       	ldi	r22, 0x0B	; 11
     834:	8d e6       	ldi	r24, 0x6D	; 109
     836:	91 e0       	ldi	r25, 0x01	; 1
     838:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     83c:	4a e0       	ldi	r20, 0x0A	; 10
     83e:	be 01       	movw	r22, r28
     840:	6f 5f       	subi	r22, 0xFF	; 255
     842:	7f 4f       	sbci	r23, 0xFF	; 255
     844:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <distance>
     848:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <distance+0x1>
     84c:	0e 94 cb 08 	call	0x1196	; 0x1196 <__itoa_ncheck>
							
							itoa(distance, numberString, 10);   
							lcd_string(numberString,3);
     850:	63 e0       	ldi	r22, 0x03	; 3
     852:	ce 01       	movw	r24, r28
     854:	01 96       	adiw	r24, 0x01	; 1
     856:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

							lcd_string("cm",2);
     85a:	62 e0       	ldi	r22, 0x02	; 2
     85c:	88 e7       	ldi	r24, 0x78	; 120
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
							
							
							previous_distance = distance;
     864:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <distance>
     868:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <distance+0x1>
     86c:	90 93 ac 01 	sts	0x01AC, r25	; 0x8001ac <previous_distance+0x1>
     870:	80 93 ab 01 	sts	0x01AB, r24	; 0x8001ab <previous_distance>
     874:	8b e4       	ldi	r24, 0x4B	; 75
     876:	9d e1       	ldi	r25, 0x1D	; 29
     878:	01 97       	sbiw	r24, 0x01	; 1
     87a:	f1 f7       	brne	.-4      	; 0x878 <__EEPROM_REGION_LENGTH__+0x78>
     87c:	00 c0       	rjmp	.+0      	; 0x87e <__EEPROM_REGION_LENGTH__+0x7e>
     87e:	00 00       	nop
							_delay_ms(30);
							
							if(distance<10)
     880:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <distance>
     884:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <distance+0x1>
     888:	0a 97       	sbiw	r24, 0x0a	; 10
     88a:	3c f4       	brge	.+14     	; 0x89a <__EEPROM_REGION_LENGTH__+0x9a>
							{
								lcd_line_two();
     88c:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("WATER LOW!!!",13);
     890:	6d e0       	ldi	r22, 0x0D	; 13
     892:	8b e7       	ldi	r24, 0x7B	; 123
     894:	91 e0       	ldi	r25, 0x01	; 1
     896:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(1<<PINA0);
								
							}
							if(distance>=10)
     89a:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <distance>
     89e:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <distance+0x1>
     8a2:	0a 97       	sbiw	r24, 0x0a	; 10
     8a4:	3c f0       	brlt	.+14     	; 0x8b4 <__EEPROM_REGION_LENGTH__+0xb4>
							{
								lcd_line_two();
     8a6:	0e 94 0c 01 	call	0x218	; 0x218 <lcd_line_two>
								lcd_string("ENOUGH WATER",12);
     8aa:	6c e0       	ldi	r22, 0x0C	; 12
     8ac:	88 e8       	ldi	r24, 0x88	; 136
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
								// PORTA=(0<<PINA0);
								
							}
							key = scankey();
     8b4:	0e 94 62 01 	call	0x2c4	; 0x2c4 <scankey>
							if(key == '*') break;
     8b8:	8a 32       	cpi	r24, 0x2A	; 42
     8ba:	51 f0       	breq	.+20     	; 0x8d0 <__EEPROM_REGION_LENGTH__+0xd0>
     8bc:	9f e7       	ldi	r25, 0x7F	; 127
     8be:	29 ea       	ldi	r18, 0xA9	; 169
     8c0:	83 e0       	ldi	r24, 0x03	; 3
     8c2:	91 50       	subi	r25, 0x01	; 1
     8c4:	20 40       	sbci	r18, 0x00	; 0
     8c6:	80 40       	sbci	r24, 0x00	; 0
     8c8:	e1 f7       	brne	.-8      	; 0x8c2 <__EEPROM_REGION_LENGTH__+0xc2>
     8ca:	00 c0       	rjmp	.+0      	; 0x8cc <__EEPROM_REGION_LENGTH__+0xcc>
     8cc:	00 00       	nop
     8ce:	6f cf       	rjmp	.-290    	; 0x7ae <main+0x166>
							_delay_ms(1200);
							
						}
					}
					
				if(key == '*') break;
     8d0:	8a 32       	cpi	r24, 0x2A	; 42
     8d2:	09 f0       	breq	.+2      	; 0x8d6 <__EEPROM_REGION_LENGTH__+0xd6>
     8d4:	62 cf       	rjmp	.-316    	; 0x79a <main+0x152>
     8d6:	01 cf       	rjmp	.-510    	; 0x6da <main+0x92>
				}
			break;		
			
			case '4':
				
				DDRE=0xff;
     8d8:	8f ef       	ldi	r24, 0xFF	; 255
     8da:	82 b9       	out	0x02, r24	; 2
				
				lcd_clear();				/* clear LCD */
     8dc:	0e 94 04 01 	call	0x208	; 0x208 <lcd_clear>
				lcd_line_one();		/* enter column and row position */
     8e0:	0e 94 08 01 	call	0x210	; 0x210 <lcd_line_one>
				lcd_string("H=",2);
     8e4:	62 e0       	ldi	r22, 0x02	; 2
     8e6:	85 e9       	ldi	r24, 0x95	; 149
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				//lcd_gotoxy(8,0);
				lcd_string("T= ",2);
     8ee:	62 e0       	ldi	r22, 0x02	; 2
     8f0:	88 e9       	ldi	r24, 0x98	; 152
     8f2:	91 e0       	ldi	r25, 0x01	; 1
     8f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	
				while(1)
				{
					Request();				/* send start pulse */
     8f8:	0e 94 49 02 	call	0x492	; 0x492 <Request>
					Response();				/* receive response */
     8fc:	0e 94 59 02 	call	0x4b2	; 0x4b2 <Response>
					I_RH=Receive_data();	/* store first eight bit in I_RH */
     900:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     904:	80 93 b3 01 	sts	0x01B3, r24	; 0x8001b3 <I_RH>
					D_RH=Receive_data();	/* store next eight bit in D_RH */
     908:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     90c:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <D_RH>
					I_Temp=Receive_data();	/* store next eight bit in I_Temp */
     910:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     914:	80 93 b2 01 	sts	0x01B2, r24	; 0x8001b2 <I_Temp>
					D_Temp=Receive_data();	/* store next eight bit in D_Temp */
     918:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     91c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <D_Temp>
					CheckSum=Receive_data();/* store next eight bit in CheckSum */
     920:	0e 94 63 02 	call	0x4c6	; 0x4c6 <Receive_data>
     924:	80 93 b1 01 	sts	0x01B1, r24	; 0x8001b1 <CheckSum>
		
					if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
     928:	e0 91 b3 01 	lds	r30, 0x01B3	; 0x8001b3 <I_RH>
     92c:	f0 e0       	ldi	r31, 0x00	; 0
     92e:	90 91 b0 01 	lds	r25, 0x01B0	; 0x8001b0 <D_RH>
     932:	9f 01       	movw	r18, r30
     934:	29 0f       	add	r18, r25
     936:	31 1d       	adc	r19, r1
     938:	90 91 b2 01 	lds	r25, 0x01B2	; 0x8001b2 <I_Temp>
     93c:	29 0f       	add	r18, r25
     93e:	31 1d       	adc	r19, r1
     940:	90 91 b4 01 	lds	r25, 0x01B4	; 0x8001b4 <D_Temp>
     944:	29 0f       	add	r18, r25
     946:	31 1d       	adc	r19, r1
     948:	48 2f       	mov	r20, r24
     94a:	50 e0       	ldi	r21, 0x00	; 0
     94c:	24 17       	cp	r18, r20
     94e:	35 07       	cpc	r19, r21
     950:	31 f0       	breq	.+12     	; 0x95e <__EEPROM_REGION_LENGTH__+0x15e>
					{
						//lcd_gotoxy(0,0);
						lcd_string("Error",5);
     952:	65 e0       	ldi	r22, 0x05	; 5
     954:	8c e9       	ldi	r24, 0x9C	; 156
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     95c:	4d c0       	rjmp	.+154    	; 0x9f8 <__EEPROM_REGION_LENGTH__+0x1f8>
     95e:	4a e0       	ldi	r20, 0x0A	; 10
     960:	be 01       	movw	r22, r28
     962:	6b 5f       	subi	r22, 0xFB	; 251
     964:	7f 4f       	sbci	r23, 0xFF	; 255
     966:	cf 01       	movw	r24, r30
     968:	0e 94 cb 08 	call	0x1196	; 0x1196 <__itoa_ncheck>
		
					else
					{
						itoa(I_RH,data,10);
						//lcd_gotoxy(2,0);
						lcd_string(data,3);
     96c:	63 e0       	ldi	r22, 0x03	; 3
     96e:	ce 01       	movw	r24, r28
     970:	05 96       	adiw	r24, 0x05	; 5
     972:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     976:	61 e0       	ldi	r22, 0x01	; 1
     978:	82 ea       	ldi	r24, 0xA2	; 162
     97a:	91 e0       	ldi	r25, 0x01	; 1
     97c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_RH,data,10);
     980:	80 91 b0 01 	lds	r24, 0x01B0	; 0x8001b0 <D_RH>
     984:	4a e0       	ldi	r20, 0x0A	; 10
     986:	be 01       	movw	r22, r28
     988:	6b 5f       	subi	r22, 0xFB	; 251
     98a:	7f 4f       	sbci	r23, 0xFF	; 255
     98c:	90 e0       	ldi	r25, 0x00	; 0
     98e:	0e 94 cb 08 	call	0x1196	; 0x1196 <__itoa_ncheck>
						lcd_string(data,3);
     992:	63 e0       	ldi	r22, 0x03	; 3
     994:	ce 01       	movw	r24, r28
     996:	05 96       	adiw	r24, 0x05	; 5
     998:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string("%",1);
     99c:	61 e0       	ldi	r22, 0x01	; 1
     99e:	84 ea       	ldi	r24, 0xA4	; 164
     9a0:	91 e0       	ldi	r25, 0x01	; 1
     9a2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

						itoa(I_Temp,data,10);
     9a6:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <I_Temp>
     9aa:	4a e0       	ldi	r20, 0x0A	; 10
     9ac:	be 01       	movw	r22, r28
     9ae:	6b 5f       	subi	r22, 0xFB	; 251
     9b0:	7f 4f       	sbci	r23, 0xFF	; 255
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 cb 08 	call	0x1196	; 0x1196 <__itoa_ncheck>
						//lcd_gotoxy(10,0);
						lcd_string(data,3);
     9b8:	63 e0       	ldi	r22, 0x03	; 3
     9ba:	ce 01       	movw	r24, r28
     9bc:	05 96       	adiw	r24, 0x05	; 5
     9be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcd_string(".",1);
     9c2:	61 e0       	ldi	r22, 0x01	; 1
     9c4:	82 ea       	ldi	r24, 0xA2	; 162
     9c6:	91 e0       	ldi	r25, 0x01	; 1
     9c8:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
			
						itoa(D_Temp,data,10);
     9cc:	80 91 b4 01 	lds	r24, 0x01B4	; 0x8001b4 <D_Temp>
     9d0:	4a e0       	ldi	r20, 0x0A	; 10
     9d2:	be 01       	movw	r22, r28
     9d4:	6b 5f       	subi	r22, 0xFB	; 251
     9d6:	7f 4f       	sbci	r23, 0xFF	; 255
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	0e 94 cb 08 	call	0x1196	; 0x1196 <__itoa_ncheck>
						lcd_string(data,3);
     9de:	63 e0       	ldi	r22, 0x03	; 3
     9e0:	ce 01       	movw	r24, r28
     9e2:	05 96       	adiw	r24, 0x05	; 5
     9e4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
						lcddata(0xDF);
     9e8:	8f ed       	ldi	r24, 0xDF	; 223
     9ea:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
						lcd_string("C ",2);
     9ee:	62 e0       	ldi	r22, 0x02	; 2
     9f0:	86 ea       	ldi	r24, 0xA6	; 166
     9f2:	91 e0       	ldi	r25, 0x01	; 1
     9f4:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     9f8:	9f e9       	ldi	r25, 0x9F	; 159
     9fa:	26 e8       	ldi	r18, 0x86	; 134
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	91 50       	subi	r25, 0x01	; 1
     a00:	20 40       	sbci	r18, 0x00	; 0
     a02:	80 40       	sbci	r24, 0x00	; 0
     a04:	e1 f7       	brne	.-8      	; 0x9fe <__EEPROM_REGION_LENGTH__+0x1fe>
     a06:	00 c0       	rjmp	.+0      	; 0xa08 <__EEPROM_REGION_LENGTH__+0x208>
     a08:	00 00       	nop
     a0a:	87 ea       	ldi	r24, 0xA7	; 167
     a0c:	91 e6       	ldi	r25, 0x61	; 97
     a0e:	01 97       	sbiw	r24, 0x01	; 1
     a10:	f1 f7       	brne	.-4      	; 0xa0e <__EEPROM_REGION_LENGTH__+0x20e>
     a12:	00 c0       	rjmp	.+0      	; 0xa14 <__EEPROM_REGION_LENGTH__+0x214>
     a14:	00 00       	nop
     a16:	70 cf       	rjmp	.-288    	; 0x8f8 <__EEPROM_REGION_LENGTH__+0xf8>

00000a18 <__subsf3>:
     a18:	50 58       	subi	r21, 0x80	; 128

00000a1a <__addsf3>:
     a1a:	bb 27       	eor	r27, r27
     a1c:	aa 27       	eor	r26, r26
     a1e:	0e 94 24 05 	call	0xa48	; 0xa48 <__addsf3x>
     a22:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
     a26:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
     a2a:	38 f0       	brcs	.+14     	; 0xa3a <__addsf3+0x20>
     a2c:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
     a30:	20 f0       	brcs	.+8      	; 0xa3a <__addsf3+0x20>
     a32:	39 f4       	brne	.+14     	; 0xa42 <__addsf3+0x28>
     a34:	9f 3f       	cpi	r25, 0xFF	; 255
     a36:	19 f4       	brne	.+6      	; 0xa3e <__addsf3+0x24>
     a38:	26 f4       	brtc	.+8      	; 0xa42 <__addsf3+0x28>
     a3a:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
     a3e:	0e f4       	brtc	.+2      	; 0xa42 <__addsf3+0x28>
     a40:	e0 95       	com	r30
     a42:	e7 fb       	bst	r30, 7
     a44:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>

00000a48 <__addsf3x>:
     a48:	e9 2f       	mov	r30, r25
     a4a:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
     a4e:	58 f3       	brcs	.-42     	; 0xa26 <__addsf3+0xc>
     a50:	ba 17       	cp	r27, r26
     a52:	62 07       	cpc	r22, r18
     a54:	73 07       	cpc	r23, r19
     a56:	84 07       	cpc	r24, r20
     a58:	95 07       	cpc	r25, r21
     a5a:	20 f0       	brcs	.+8      	; 0xa64 <__addsf3x+0x1c>
     a5c:	79 f4       	brne	.+30     	; 0xa7c <__addsf3x+0x34>
     a5e:	a6 f5       	brtc	.+104    	; 0xac8 <__addsf3x+0x80>
     a60:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_zero>
     a64:	0e f4       	brtc	.+2      	; 0xa68 <__addsf3x+0x20>
     a66:	e0 95       	com	r30
     a68:	0b 2e       	mov	r0, r27
     a6a:	ba 2f       	mov	r27, r26
     a6c:	a0 2d       	mov	r26, r0
     a6e:	0b 01       	movw	r0, r22
     a70:	b9 01       	movw	r22, r18
     a72:	90 01       	movw	r18, r0
     a74:	0c 01       	movw	r0, r24
     a76:	ca 01       	movw	r24, r20
     a78:	a0 01       	movw	r20, r0
     a7a:	11 24       	eor	r1, r1
     a7c:	ff 27       	eor	r31, r31
     a7e:	59 1b       	sub	r21, r25
     a80:	99 f0       	breq	.+38     	; 0xaa8 <__addsf3x+0x60>
     a82:	59 3f       	cpi	r21, 0xF9	; 249
     a84:	50 f4       	brcc	.+20     	; 0xa9a <__addsf3x+0x52>
     a86:	50 3e       	cpi	r21, 0xE0	; 224
     a88:	68 f1       	brcs	.+90     	; 0xae4 <__addsf3x+0x9c>
     a8a:	1a 16       	cp	r1, r26
     a8c:	f0 40       	sbci	r31, 0x00	; 0
     a8e:	a2 2f       	mov	r26, r18
     a90:	23 2f       	mov	r18, r19
     a92:	34 2f       	mov	r19, r20
     a94:	44 27       	eor	r20, r20
     a96:	58 5f       	subi	r21, 0xF8	; 248
     a98:	f3 cf       	rjmp	.-26     	; 0xa80 <__addsf3x+0x38>
     a9a:	46 95       	lsr	r20
     a9c:	37 95       	ror	r19
     a9e:	27 95       	ror	r18
     aa0:	a7 95       	ror	r26
     aa2:	f0 40       	sbci	r31, 0x00	; 0
     aa4:	53 95       	inc	r21
     aa6:	c9 f7       	brne	.-14     	; 0xa9a <__addsf3x+0x52>
     aa8:	7e f4       	brtc	.+30     	; 0xac8 <__addsf3x+0x80>
     aaa:	1f 16       	cp	r1, r31
     aac:	ba 0b       	sbc	r27, r26
     aae:	62 0b       	sbc	r22, r18
     ab0:	73 0b       	sbc	r23, r19
     ab2:	84 0b       	sbc	r24, r20
     ab4:	ba f0       	brmi	.+46     	; 0xae4 <__addsf3x+0x9c>
     ab6:	91 50       	subi	r25, 0x01	; 1
     ab8:	a1 f0       	breq	.+40     	; 0xae2 <__addsf3x+0x9a>
     aba:	ff 0f       	add	r31, r31
     abc:	bb 1f       	adc	r27, r27
     abe:	66 1f       	adc	r22, r22
     ac0:	77 1f       	adc	r23, r23
     ac2:	88 1f       	adc	r24, r24
     ac4:	c2 f7       	brpl	.-16     	; 0xab6 <__addsf3x+0x6e>
     ac6:	0e c0       	rjmp	.+28     	; 0xae4 <__addsf3x+0x9c>
     ac8:	ba 0f       	add	r27, r26
     aca:	62 1f       	adc	r22, r18
     acc:	73 1f       	adc	r23, r19
     ace:	84 1f       	adc	r24, r20
     ad0:	48 f4       	brcc	.+18     	; 0xae4 <__addsf3x+0x9c>
     ad2:	87 95       	ror	r24
     ad4:	77 95       	ror	r23
     ad6:	67 95       	ror	r22
     ad8:	b7 95       	ror	r27
     ada:	f7 95       	ror	r31
     adc:	9e 3f       	cpi	r25, 0xFE	; 254
     ade:	08 f0       	brcs	.+2      	; 0xae2 <__addsf3x+0x9a>
     ae0:	b0 cf       	rjmp	.-160    	; 0xa42 <__addsf3+0x28>
     ae2:	93 95       	inc	r25
     ae4:	88 0f       	add	r24, r24
     ae6:	08 f0       	brcs	.+2      	; 0xaea <__addsf3x+0xa2>
     ae8:	99 27       	eor	r25, r25
     aea:	ee 0f       	add	r30, r30
     aec:	97 95       	ror	r25
     aee:	87 95       	ror	r24
     af0:	08 95       	ret

00000af2 <__fixsfsi>:
     af2:	0e 94 80 05 	call	0xb00	; 0xb00 <__fixunssfsi>
     af6:	68 94       	set
     af8:	b1 11       	cpse	r27, r1
     afa:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
     afe:	08 95       	ret

00000b00 <__fixunssfsi>:
     b00:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_splitA>
     b04:	88 f0       	brcs	.+34     	; 0xb28 <__fixunssfsi+0x28>
     b06:	9f 57       	subi	r25, 0x7F	; 127
     b08:	98 f0       	brcs	.+38     	; 0xb30 <__fixunssfsi+0x30>
     b0a:	b9 2f       	mov	r27, r25
     b0c:	99 27       	eor	r25, r25
     b0e:	b7 51       	subi	r27, 0x17	; 23
     b10:	b0 f0       	brcs	.+44     	; 0xb3e <__fixunssfsi+0x3e>
     b12:	e1 f0       	breq	.+56     	; 0xb4c <__fixunssfsi+0x4c>
     b14:	66 0f       	add	r22, r22
     b16:	77 1f       	adc	r23, r23
     b18:	88 1f       	adc	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	1a f0       	brmi	.+6      	; 0xb24 <__fixunssfsi+0x24>
     b1e:	ba 95       	dec	r27
     b20:	c9 f7       	brne	.-14     	; 0xb14 <__fixunssfsi+0x14>
     b22:	14 c0       	rjmp	.+40     	; 0xb4c <__fixunssfsi+0x4c>
     b24:	b1 30       	cpi	r27, 0x01	; 1
     b26:	91 f0       	breq	.+36     	; 0xb4c <__fixunssfsi+0x4c>
     b28:	0e 94 36 06 	call	0xc6c	; 0xc6c <__fp_zero>
     b2c:	b1 e0       	ldi	r27, 0x01	; 1
     b2e:	08 95       	ret
     b30:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_zero>
     b34:	67 2f       	mov	r22, r23
     b36:	78 2f       	mov	r23, r24
     b38:	88 27       	eor	r24, r24
     b3a:	b8 5f       	subi	r27, 0xF8	; 248
     b3c:	39 f0       	breq	.+14     	; 0xb4c <__fixunssfsi+0x4c>
     b3e:	b9 3f       	cpi	r27, 0xF9	; 249
     b40:	cc f3       	brlt	.-14     	; 0xb34 <__fixunssfsi+0x34>
     b42:	86 95       	lsr	r24
     b44:	77 95       	ror	r23
     b46:	67 95       	ror	r22
     b48:	b3 95       	inc	r27
     b4a:	d9 f7       	brne	.-10     	; 0xb42 <__fixunssfsi+0x42>
     b4c:	3e f4       	brtc	.+14     	; 0xb5c <__fixunssfsi+0x5c>
     b4e:	90 95       	com	r25
     b50:	80 95       	com	r24
     b52:	70 95       	com	r23
     b54:	61 95       	neg	r22
     b56:	7f 4f       	sbci	r23, 0xFF	; 255
     b58:	8f 4f       	sbci	r24, 0xFF	; 255
     b5a:	9f 4f       	sbci	r25, 0xFF	; 255
     b5c:	08 95       	ret

00000b5e <__floatunsisf>:
     b5e:	e8 94       	clt
     b60:	09 c0       	rjmp	.+18     	; 0xb74 <__floatsisf+0x12>

00000b62 <__floatsisf>:
     b62:	97 fb       	bst	r25, 7
     b64:	3e f4       	brtc	.+14     	; 0xb74 <__floatsisf+0x12>
     b66:	90 95       	com	r25
     b68:	80 95       	com	r24
     b6a:	70 95       	com	r23
     b6c:	61 95       	neg	r22
     b6e:	7f 4f       	sbci	r23, 0xFF	; 255
     b70:	8f 4f       	sbci	r24, 0xFF	; 255
     b72:	9f 4f       	sbci	r25, 0xFF	; 255
     b74:	99 23       	and	r25, r25
     b76:	a9 f0       	breq	.+42     	; 0xba2 <__floatsisf+0x40>
     b78:	f9 2f       	mov	r31, r25
     b7a:	96 e9       	ldi	r25, 0x96	; 150
     b7c:	bb 27       	eor	r27, r27
     b7e:	93 95       	inc	r25
     b80:	f6 95       	lsr	r31
     b82:	87 95       	ror	r24
     b84:	77 95       	ror	r23
     b86:	67 95       	ror	r22
     b88:	b7 95       	ror	r27
     b8a:	f1 11       	cpse	r31, r1
     b8c:	f8 cf       	rjmp	.-16     	; 0xb7e <__floatsisf+0x1c>
     b8e:	fa f4       	brpl	.+62     	; 0xbce <__floatsisf+0x6c>
     b90:	bb 0f       	add	r27, r27
     b92:	11 f4       	brne	.+4      	; 0xb98 <__floatsisf+0x36>
     b94:	60 ff       	sbrs	r22, 0
     b96:	1b c0       	rjmp	.+54     	; 0xbce <__floatsisf+0x6c>
     b98:	6f 5f       	subi	r22, 0xFF	; 255
     b9a:	7f 4f       	sbci	r23, 0xFF	; 255
     b9c:	8f 4f       	sbci	r24, 0xFF	; 255
     b9e:	9f 4f       	sbci	r25, 0xFF	; 255
     ba0:	16 c0       	rjmp	.+44     	; 0xbce <__floatsisf+0x6c>
     ba2:	88 23       	and	r24, r24
     ba4:	11 f0       	breq	.+4      	; 0xbaa <__floatsisf+0x48>
     ba6:	96 e9       	ldi	r25, 0x96	; 150
     ba8:	11 c0       	rjmp	.+34     	; 0xbcc <__floatsisf+0x6a>
     baa:	77 23       	and	r23, r23
     bac:	21 f0       	breq	.+8      	; 0xbb6 <__floatsisf+0x54>
     bae:	9e e8       	ldi	r25, 0x8E	; 142
     bb0:	87 2f       	mov	r24, r23
     bb2:	76 2f       	mov	r23, r22
     bb4:	05 c0       	rjmp	.+10     	; 0xbc0 <__floatsisf+0x5e>
     bb6:	66 23       	and	r22, r22
     bb8:	71 f0       	breq	.+28     	; 0xbd6 <__floatsisf+0x74>
     bba:	96 e8       	ldi	r25, 0x86	; 134
     bbc:	86 2f       	mov	r24, r22
     bbe:	70 e0       	ldi	r23, 0x00	; 0
     bc0:	60 e0       	ldi	r22, 0x00	; 0
     bc2:	2a f0       	brmi	.+10     	; 0xbce <__floatsisf+0x6c>
     bc4:	9a 95       	dec	r25
     bc6:	66 0f       	add	r22, r22
     bc8:	77 1f       	adc	r23, r23
     bca:	88 1f       	adc	r24, r24
     bcc:	da f7       	brpl	.-10     	; 0xbc4 <__floatsisf+0x62>
     bce:	88 0f       	add	r24, r24
     bd0:	96 95       	lsr	r25
     bd2:	87 95       	ror	r24
     bd4:	97 f9       	bld	r25, 7
     bd6:	08 95       	ret

00000bd8 <__fp_inf>:
     bd8:	97 f9       	bld	r25, 7
     bda:	9f 67       	ori	r25, 0x7F	; 127
     bdc:	80 e8       	ldi	r24, 0x80	; 128
     bde:	70 e0       	ldi	r23, 0x00	; 0
     be0:	60 e0       	ldi	r22, 0x00	; 0
     be2:	08 95       	ret

00000be4 <__fp_nan>:
     be4:	9f ef       	ldi	r25, 0xFF	; 255
     be6:	80 ec       	ldi	r24, 0xC0	; 192
     be8:	08 95       	ret

00000bea <__fp_pscA>:
     bea:	00 24       	eor	r0, r0
     bec:	0a 94       	dec	r0
     bee:	16 16       	cp	r1, r22
     bf0:	17 06       	cpc	r1, r23
     bf2:	18 06       	cpc	r1, r24
     bf4:	09 06       	cpc	r0, r25
     bf6:	08 95       	ret

00000bf8 <__fp_pscB>:
     bf8:	00 24       	eor	r0, r0
     bfa:	0a 94       	dec	r0
     bfc:	12 16       	cp	r1, r18
     bfe:	13 06       	cpc	r1, r19
     c00:	14 06       	cpc	r1, r20
     c02:	05 06       	cpc	r0, r21
     c04:	08 95       	ret

00000c06 <__fp_round>:
     c06:	09 2e       	mov	r0, r25
     c08:	03 94       	inc	r0
     c0a:	00 0c       	add	r0, r0
     c0c:	11 f4       	brne	.+4      	; 0xc12 <__fp_round+0xc>
     c0e:	88 23       	and	r24, r24
     c10:	52 f0       	brmi	.+20     	; 0xc26 <__fp_round+0x20>
     c12:	bb 0f       	add	r27, r27
     c14:	40 f4       	brcc	.+16     	; 0xc26 <__fp_round+0x20>
     c16:	bf 2b       	or	r27, r31
     c18:	11 f4       	brne	.+4      	; 0xc1e <__fp_round+0x18>
     c1a:	60 ff       	sbrs	r22, 0
     c1c:	04 c0       	rjmp	.+8      	; 0xc26 <__fp_round+0x20>
     c1e:	6f 5f       	subi	r22, 0xFF	; 255
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	8f 4f       	sbci	r24, 0xFF	; 255
     c24:	9f 4f       	sbci	r25, 0xFF	; 255
     c26:	08 95       	ret

00000c28 <__fp_split3>:
     c28:	57 fd       	sbrc	r21, 7
     c2a:	90 58       	subi	r25, 0x80	; 128
     c2c:	44 0f       	add	r20, r20
     c2e:	55 1f       	adc	r21, r21
     c30:	59 f0       	breq	.+22     	; 0xc48 <__fp_splitA+0x10>
     c32:	5f 3f       	cpi	r21, 0xFF	; 255
     c34:	71 f0       	breq	.+28     	; 0xc52 <__fp_splitA+0x1a>
     c36:	47 95       	ror	r20

00000c38 <__fp_splitA>:
     c38:	88 0f       	add	r24, r24
     c3a:	97 fb       	bst	r25, 7
     c3c:	99 1f       	adc	r25, r25
     c3e:	61 f0       	breq	.+24     	; 0xc58 <__fp_splitA+0x20>
     c40:	9f 3f       	cpi	r25, 0xFF	; 255
     c42:	79 f0       	breq	.+30     	; 0xc62 <__fp_splitA+0x2a>
     c44:	87 95       	ror	r24
     c46:	08 95       	ret
     c48:	12 16       	cp	r1, r18
     c4a:	13 06       	cpc	r1, r19
     c4c:	14 06       	cpc	r1, r20
     c4e:	55 1f       	adc	r21, r21
     c50:	f2 cf       	rjmp	.-28     	; 0xc36 <__fp_split3+0xe>
     c52:	46 95       	lsr	r20
     c54:	f1 df       	rcall	.-30     	; 0xc38 <__fp_splitA>
     c56:	08 c0       	rjmp	.+16     	; 0xc68 <__fp_splitA+0x30>
     c58:	16 16       	cp	r1, r22
     c5a:	17 06       	cpc	r1, r23
     c5c:	18 06       	cpc	r1, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	f1 cf       	rjmp	.-30     	; 0xc44 <__fp_splitA+0xc>
     c62:	86 95       	lsr	r24
     c64:	71 05       	cpc	r23, r1
     c66:	61 05       	cpc	r22, r1
     c68:	08 94       	sec
     c6a:	08 95       	ret

00000c6c <__fp_zero>:
     c6c:	e8 94       	clt

00000c6e <__fp_szero>:
     c6e:	bb 27       	eor	r27, r27
     c70:	66 27       	eor	r22, r22
     c72:	77 27       	eor	r23, r23
     c74:	cb 01       	movw	r24, r22
     c76:	97 f9       	bld	r25, 7
     c78:	08 95       	ret

00000c7a <__mulsf3>:
     c7a:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3x>
     c7e:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
     c82:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
     c86:	38 f0       	brcs	.+14     	; 0xc96 <__mulsf3+0x1c>
     c88:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
     c8c:	20 f0       	brcs	.+8      	; 0xc96 <__mulsf3+0x1c>
     c8e:	95 23       	and	r25, r21
     c90:	11 f0       	breq	.+4      	; 0xc96 <__mulsf3+0x1c>
     c92:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
     c96:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
     c9a:	11 24       	eor	r1, r1
     c9c:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>

00000ca0 <__mulsf3x>:
     ca0:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
     ca4:	70 f3       	brcs	.-36     	; 0xc82 <__mulsf3+0x8>

00000ca6 <__mulsf3_pse>:
     ca6:	95 9f       	mul	r25, r21
     ca8:	c1 f3       	breq	.-16     	; 0xc9a <__mulsf3+0x20>
     caa:	95 0f       	add	r25, r21
     cac:	50 e0       	ldi	r21, 0x00	; 0
     cae:	55 1f       	adc	r21, r21
     cb0:	62 9f       	mul	r22, r18
     cb2:	f0 01       	movw	r30, r0
     cb4:	72 9f       	mul	r23, r18
     cb6:	bb 27       	eor	r27, r27
     cb8:	f0 0d       	add	r31, r0
     cba:	b1 1d       	adc	r27, r1
     cbc:	63 9f       	mul	r22, r19
     cbe:	aa 27       	eor	r26, r26
     cc0:	f0 0d       	add	r31, r0
     cc2:	b1 1d       	adc	r27, r1
     cc4:	aa 1f       	adc	r26, r26
     cc6:	64 9f       	mul	r22, r20
     cc8:	66 27       	eor	r22, r22
     cca:	b0 0d       	add	r27, r0
     ccc:	a1 1d       	adc	r26, r1
     cce:	66 1f       	adc	r22, r22
     cd0:	82 9f       	mul	r24, r18
     cd2:	22 27       	eor	r18, r18
     cd4:	b0 0d       	add	r27, r0
     cd6:	a1 1d       	adc	r26, r1
     cd8:	62 1f       	adc	r22, r18
     cda:	73 9f       	mul	r23, r19
     cdc:	b0 0d       	add	r27, r0
     cde:	a1 1d       	adc	r26, r1
     ce0:	62 1f       	adc	r22, r18
     ce2:	83 9f       	mul	r24, r19
     ce4:	a0 0d       	add	r26, r0
     ce6:	61 1d       	adc	r22, r1
     ce8:	22 1f       	adc	r18, r18
     cea:	74 9f       	mul	r23, r20
     cec:	33 27       	eor	r19, r19
     cee:	a0 0d       	add	r26, r0
     cf0:	61 1d       	adc	r22, r1
     cf2:	23 1f       	adc	r18, r19
     cf4:	84 9f       	mul	r24, r20
     cf6:	60 0d       	add	r22, r0
     cf8:	21 1d       	adc	r18, r1
     cfa:	82 2f       	mov	r24, r18
     cfc:	76 2f       	mov	r23, r22
     cfe:	6a 2f       	mov	r22, r26
     d00:	11 24       	eor	r1, r1
     d02:	9f 57       	subi	r25, 0x7F	; 127
     d04:	50 40       	sbci	r21, 0x00	; 0
     d06:	9a f0       	brmi	.+38     	; 0xd2e <__mulsf3_pse+0x88>
     d08:	f1 f0       	breq	.+60     	; 0xd46 <__mulsf3_pse+0xa0>
     d0a:	88 23       	and	r24, r24
     d0c:	4a f0       	brmi	.+18     	; 0xd20 <__mulsf3_pse+0x7a>
     d0e:	ee 0f       	add	r30, r30
     d10:	ff 1f       	adc	r31, r31
     d12:	bb 1f       	adc	r27, r27
     d14:	66 1f       	adc	r22, r22
     d16:	77 1f       	adc	r23, r23
     d18:	88 1f       	adc	r24, r24
     d1a:	91 50       	subi	r25, 0x01	; 1
     d1c:	50 40       	sbci	r21, 0x00	; 0
     d1e:	a9 f7       	brne	.-22     	; 0xd0a <__mulsf3_pse+0x64>
     d20:	9e 3f       	cpi	r25, 0xFE	; 254
     d22:	51 05       	cpc	r21, r1
     d24:	80 f0       	brcs	.+32     	; 0xd46 <__mulsf3_pse+0xa0>
     d26:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
     d2a:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
     d2e:	5f 3f       	cpi	r21, 0xFF	; 255
     d30:	e4 f3       	brlt	.-8      	; 0xd2a <__mulsf3_pse+0x84>
     d32:	98 3e       	cpi	r25, 0xE8	; 232
     d34:	d4 f3       	brlt	.-12     	; 0xd2a <__mulsf3_pse+0x84>
     d36:	86 95       	lsr	r24
     d38:	77 95       	ror	r23
     d3a:	67 95       	ror	r22
     d3c:	b7 95       	ror	r27
     d3e:	f7 95       	ror	r31
     d40:	e7 95       	ror	r30
     d42:	9f 5f       	subi	r25, 0xFF	; 255
     d44:	c1 f7       	brne	.-16     	; 0xd36 <__mulsf3_pse+0x90>
     d46:	fe 2b       	or	r31, r30
     d48:	88 0f       	add	r24, r24
     d4a:	91 1d       	adc	r25, r1
     d4c:	96 95       	lsr	r25
     d4e:	87 95       	ror	r24
     d50:	97 f9       	bld	r25, 7
     d52:	08 95       	ret

00000d54 <pow>:
     d54:	fa 01       	movw	r30, r20
     d56:	ee 0f       	add	r30, r30
     d58:	ff 1f       	adc	r31, r31
     d5a:	30 96       	adiw	r30, 0x00	; 0
     d5c:	21 05       	cpc	r18, r1
     d5e:	31 05       	cpc	r19, r1
     d60:	a1 f1       	breq	.+104    	; 0xdca <pow+0x76>
     d62:	61 15       	cp	r22, r1
     d64:	71 05       	cpc	r23, r1
     d66:	61 f4       	brne	.+24     	; 0xd80 <pow+0x2c>
     d68:	80 38       	cpi	r24, 0x80	; 128
     d6a:	bf e3       	ldi	r27, 0x3F	; 63
     d6c:	9b 07       	cpc	r25, r27
     d6e:	49 f1       	breq	.+82     	; 0xdc2 <pow+0x6e>
     d70:	68 94       	set
     d72:	90 38       	cpi	r25, 0x80	; 128
     d74:	81 05       	cpc	r24, r1
     d76:	61 f0       	breq	.+24     	; 0xd90 <pow+0x3c>
     d78:	80 38       	cpi	r24, 0x80	; 128
     d7a:	bf ef       	ldi	r27, 0xFF	; 255
     d7c:	9b 07       	cpc	r25, r27
     d7e:	41 f0       	breq	.+16     	; 0xd90 <pow+0x3c>
     d80:	99 23       	and	r25, r25
     d82:	4a f5       	brpl	.+82     	; 0xdd6 <pow+0x82>
     d84:	ff 3f       	cpi	r31, 0xFF	; 255
     d86:	e1 05       	cpc	r30, r1
     d88:	31 05       	cpc	r19, r1
     d8a:	21 05       	cpc	r18, r1
     d8c:	19 f1       	breq	.+70     	; 0xdd4 <pow+0x80>
     d8e:	e8 94       	clt
     d90:	08 94       	sec
     d92:	e7 95       	ror	r30
     d94:	d9 01       	movw	r26, r18
     d96:	aa 23       	and	r26, r26
     d98:	29 f4       	brne	.+10     	; 0xda4 <pow+0x50>
     d9a:	ab 2f       	mov	r26, r27
     d9c:	be 2f       	mov	r27, r30
     d9e:	f8 5f       	subi	r31, 0xF8	; 248
     da0:	d0 f3       	brcs	.-12     	; 0xd96 <pow+0x42>
     da2:	10 c0       	rjmp	.+32     	; 0xdc4 <pow+0x70>
     da4:	ff 5f       	subi	r31, 0xFF	; 255
     da6:	70 f4       	brcc	.+28     	; 0xdc4 <pow+0x70>
     da8:	a6 95       	lsr	r26
     daa:	e0 f7       	brcc	.-8      	; 0xda4 <pow+0x50>
     dac:	f7 39       	cpi	r31, 0x97	; 151
     dae:	50 f0       	brcs	.+20     	; 0xdc4 <pow+0x70>
     db0:	19 f0       	breq	.+6      	; 0xdb8 <pow+0x64>
     db2:	ff 3a       	cpi	r31, 0xAF	; 175
     db4:	38 f4       	brcc	.+14     	; 0xdc4 <pow+0x70>
     db6:	9f 77       	andi	r25, 0x7F	; 127
     db8:	9f 93       	push	r25
     dba:	0d d0       	rcall	.+26     	; 0xdd6 <pow+0x82>
     dbc:	0f 90       	pop	r0
     dbe:	07 fc       	sbrc	r0, 7
     dc0:	90 58       	subi	r25, 0x80	; 128
     dc2:	08 95       	ret
     dc4:	46 f0       	brts	.+16     	; 0xdd6 <pow+0x82>
     dc6:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
     dca:	60 e0       	ldi	r22, 0x00	; 0
     dcc:	70 e0       	ldi	r23, 0x00	; 0
     dce:	80 e8       	ldi	r24, 0x80	; 128
     dd0:	9f e3       	ldi	r25, 0x3F	; 63
     dd2:	08 95       	ret
     dd4:	4f e7       	ldi	r20, 0x7F	; 127
     dd6:	9f 77       	andi	r25, 0x7F	; 127
     dd8:	5f 93       	push	r21
     dda:	4f 93       	push	r20
     ddc:	3f 93       	push	r19
     dde:	2f 93       	push	r18
     de0:	0e 94 a5 07 	call	0xf4a	; 0xf4a <log>
     de4:	2f 91       	pop	r18
     de6:	3f 91       	pop	r19
     de8:	4f 91       	pop	r20
     dea:	5f 91       	pop	r21
     dec:	0e 94 3d 06 	call	0xc7a	; 0xc7a <__mulsf3>
     df0:	0c 94 02 07 	jmp	0xe04	; 0xe04 <exp>
     df4:	29 f4       	brne	.+10     	; 0xe00 <pow+0xac>
     df6:	16 f0       	brts	.+4      	; 0xdfc <pow+0xa8>
     df8:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
     dfc:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__fp_zero>
     e00:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>

00000e04 <exp>:
     e04:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_splitA>
     e08:	a8 f3       	brcs	.-22     	; 0xdf4 <pow+0xa0>
     e0a:	96 38       	cpi	r25, 0x86	; 134
     e0c:	a0 f7       	brcc	.-24     	; 0xdf6 <pow+0xa2>
     e0e:	07 f8       	bld	r0, 7
     e10:	0f 92       	push	r0
     e12:	e8 94       	clt
     e14:	2b e3       	ldi	r18, 0x3B	; 59
     e16:	3a ea       	ldi	r19, 0xAA	; 170
     e18:	48 eb       	ldi	r20, 0xB8	; 184
     e1a:	5f e7       	ldi	r21, 0x7F	; 127
     e1c:	0e 94 53 06 	call	0xca6	; 0xca6 <__mulsf3_pse>
     e20:	0f 92       	push	r0
     e22:	0f 92       	push	r0
     e24:	0f 92       	push	r0
     e26:	4d b7       	in	r20, 0x3d	; 61
     e28:	5e b7       	in	r21, 0x3e	; 62
     e2a:	0f 92       	push	r0
     e2c:	0e 94 ed 07 	call	0xfda	; 0xfda <modf>
     e30:	ec e8       	ldi	r30, 0x8C	; 140
     e32:	f0 e0       	ldi	r31, 0x00	; 0
     e34:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_powser>
     e38:	4f 91       	pop	r20
     e3a:	5f 91       	pop	r21
     e3c:	ef 91       	pop	r30
     e3e:	ff 91       	pop	r31
     e40:	e5 95       	asr	r30
     e42:	ee 1f       	adc	r30, r30
     e44:	ff 1f       	adc	r31, r31
     e46:	49 f0       	breq	.+18     	; 0xe5a <exp+0x56>
     e48:	fe 57       	subi	r31, 0x7E	; 126
     e4a:	e0 68       	ori	r30, 0x80	; 128
     e4c:	44 27       	eor	r20, r20
     e4e:	ee 0f       	add	r30, r30
     e50:	44 1f       	adc	r20, r20
     e52:	fa 95       	dec	r31
     e54:	e1 f7       	brne	.-8      	; 0xe4e <exp+0x4a>
     e56:	41 95       	neg	r20
     e58:	55 0b       	sbc	r21, r21
     e5a:	0e 94 67 07 	call	0xece	; 0xece <ldexp>
     e5e:	0f 90       	pop	r0
     e60:	07 fe       	sbrs	r0, 7
     e62:	0c 94 5b 07 	jmp	0xeb6	; 0xeb6 <inverse>
     e66:	08 95       	ret

00000e68 <__fp_powser>:
     e68:	df 93       	push	r29
     e6a:	cf 93       	push	r28
     e6c:	1f 93       	push	r17
     e6e:	0f 93       	push	r16
     e70:	ff 92       	push	r15
     e72:	ef 92       	push	r14
     e74:	df 92       	push	r13
     e76:	7b 01       	movw	r14, r22
     e78:	8c 01       	movw	r16, r24
     e7a:	68 94       	set
     e7c:	06 c0       	rjmp	.+12     	; 0xe8a <__fp_powser+0x22>
     e7e:	da 2e       	mov	r13, r26
     e80:	ef 01       	movw	r28, r30
     e82:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3x>
     e86:	fe 01       	movw	r30, r28
     e88:	e8 94       	clt
     e8a:	a5 91       	lpm	r26, Z+
     e8c:	25 91       	lpm	r18, Z+
     e8e:	35 91       	lpm	r19, Z+
     e90:	45 91       	lpm	r20, Z+
     e92:	55 91       	lpm	r21, Z+
     e94:	a6 f3       	brts	.-24     	; 0xe7e <__fp_powser+0x16>
     e96:	ef 01       	movw	r28, r30
     e98:	0e 94 24 05 	call	0xa48	; 0xa48 <__addsf3x>
     e9c:	fe 01       	movw	r30, r28
     e9e:	97 01       	movw	r18, r14
     ea0:	a8 01       	movw	r20, r16
     ea2:	da 94       	dec	r13
     ea4:	69 f7       	brne	.-38     	; 0xe80 <__fp_powser+0x18>
     ea6:	df 90       	pop	r13
     ea8:	ef 90       	pop	r14
     eaa:	ff 90       	pop	r15
     eac:	0f 91       	pop	r16
     eae:	1f 91       	pop	r17
     eb0:	cf 91       	pop	r28
     eb2:	df 91       	pop	r29
     eb4:	08 95       	ret

00000eb6 <inverse>:
     eb6:	9b 01       	movw	r18, r22
     eb8:	ac 01       	movw	r20, r24
     eba:	60 e0       	ldi	r22, 0x00	; 0
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	80 e8       	ldi	r24, 0x80	; 128
     ec0:	9f e3       	ldi	r25, 0x3F	; 63
     ec2:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__divsf3>
     ec6:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
     eca:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_mpack>

00000ece <ldexp>:
     ece:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_splitA>
     ed2:	d8 f3       	brcs	.-10     	; 0xeca <inverse+0x14>
     ed4:	99 23       	and	r25, r25
     ed6:	c9 f3       	breq	.-14     	; 0xeca <inverse+0x14>
     ed8:	94 0f       	add	r25, r20
     eda:	51 1d       	adc	r21, r1
     edc:	a3 f3       	brvs	.-24     	; 0xec6 <inverse+0x10>
     ede:	91 50       	subi	r25, 0x01	; 1
     ee0:	50 40       	sbci	r21, 0x00	; 0
     ee2:	94 f0       	brlt	.+36     	; 0xf08 <ldexp+0x3a>
     ee4:	59 f0       	breq	.+22     	; 0xefc <ldexp+0x2e>
     ee6:	88 23       	and	r24, r24
     ee8:	32 f0       	brmi	.+12     	; 0xef6 <ldexp+0x28>
     eea:	66 0f       	add	r22, r22
     eec:	77 1f       	adc	r23, r23
     eee:	88 1f       	adc	r24, r24
     ef0:	91 50       	subi	r25, 0x01	; 1
     ef2:	50 40       	sbci	r21, 0x00	; 0
     ef4:	c1 f7       	brne	.-16     	; 0xee6 <ldexp+0x18>
     ef6:	9e 3f       	cpi	r25, 0xFE	; 254
     ef8:	51 05       	cpc	r21, r1
     efa:	2c f7       	brge	.-54     	; 0xec6 <inverse+0x10>
     efc:	88 0f       	add	r24, r24
     efe:	91 1d       	adc	r25, r1
     f00:	96 95       	lsr	r25
     f02:	87 95       	ror	r24
     f04:	97 f9       	bld	r25, 7
     f06:	08 95       	ret
     f08:	5f 3f       	cpi	r21, 0xFF	; 255
     f0a:	ac f0       	brlt	.+42     	; 0xf36 <ldexp+0x68>
     f0c:	98 3e       	cpi	r25, 0xE8	; 232
     f0e:	9c f0       	brlt	.+38     	; 0xf36 <ldexp+0x68>
     f10:	bb 27       	eor	r27, r27
     f12:	86 95       	lsr	r24
     f14:	77 95       	ror	r23
     f16:	67 95       	ror	r22
     f18:	b7 95       	ror	r27
     f1a:	08 f4       	brcc	.+2      	; 0xf1e <ldexp+0x50>
     f1c:	b1 60       	ori	r27, 0x01	; 1
     f1e:	93 95       	inc	r25
     f20:	c1 f7       	brne	.-16     	; 0xf12 <ldexp+0x44>
     f22:	bb 0f       	add	r27, r27
     f24:	58 f7       	brcc	.-42     	; 0xefc <ldexp+0x2e>
     f26:	11 f4       	brne	.+4      	; 0xf2c <ldexp+0x5e>
     f28:	60 ff       	sbrs	r22, 0
     f2a:	e8 cf       	rjmp	.-48     	; 0xefc <ldexp+0x2e>
     f2c:	6f 5f       	subi	r22, 0xFF	; 255
     f2e:	7f 4f       	sbci	r23, 0xFF	; 255
     f30:	8f 4f       	sbci	r24, 0xFF	; 255
     f32:	9f 4f       	sbci	r25, 0xFF	; 255
     f34:	e3 cf       	rjmp	.-58     	; 0xefc <ldexp+0x2e>
     f36:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
     f3a:	16 f0       	brts	.+4      	; 0xf40 <ldexp+0x72>
     f3c:	0c 94 93 08 	jmp	0x1126	; 0x1126 <__fp_mpack>
     f40:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>
     f44:	68 94       	set
     f46:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>

00000f4a <log>:
     f4a:	0e 94 1c 06 	call	0xc38	; 0xc38 <__fp_splitA>
     f4e:	a8 f3       	brcs	.-22     	; 0xf3a <ldexp+0x6c>
     f50:	99 23       	and	r25, r25
     f52:	c1 f3       	breq	.-16     	; 0xf44 <ldexp+0x76>
     f54:	ae f3       	brts	.-22     	; 0xf40 <ldexp+0x72>
     f56:	df 93       	push	r29
     f58:	cf 93       	push	r28
     f5a:	1f 93       	push	r17
     f5c:	0f 93       	push	r16
     f5e:	ff 92       	push	r15
     f60:	c9 2f       	mov	r28, r25
     f62:	dd 27       	eor	r29, r29
     f64:	88 23       	and	r24, r24
     f66:	2a f0       	brmi	.+10     	; 0xf72 <log+0x28>
     f68:	21 97       	sbiw	r28, 0x01	; 1
     f6a:	66 0f       	add	r22, r22
     f6c:	77 1f       	adc	r23, r23
     f6e:	88 1f       	adc	r24, r24
     f70:	da f7       	brpl	.-10     	; 0xf68 <log+0x1e>
     f72:	20 e0       	ldi	r18, 0x00	; 0
     f74:	30 e0       	ldi	r19, 0x00	; 0
     f76:	40 e8       	ldi	r20, 0x80	; 128
     f78:	5f eb       	ldi	r21, 0xBF	; 191
     f7a:	9f e3       	ldi	r25, 0x3F	; 63
     f7c:	88 39       	cpi	r24, 0x98	; 152
     f7e:	20 f0       	brcs	.+8      	; 0xf88 <log+0x3e>
     f80:	80 3e       	cpi	r24, 0xE0	; 224
     f82:	38 f0       	brcs	.+14     	; 0xf92 <log+0x48>
     f84:	21 96       	adiw	r28, 0x01	; 1
     f86:	8f 77       	andi	r24, 0x7F	; 127
     f88:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__addsf3>
     f8c:	e4 eb       	ldi	r30, 0xB4	; 180
     f8e:	f0 e0       	ldi	r31, 0x00	; 0
     f90:	04 c0       	rjmp	.+8      	; 0xf9a <log+0x50>
     f92:	0e 94 0d 05 	call	0xa1a	; 0xa1a <__addsf3>
     f96:	e1 ee       	ldi	r30, 0xE1	; 225
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_powser>
     f9e:	8b 01       	movw	r16, r22
     fa0:	be 01       	movw	r22, r28
     fa2:	ec 01       	movw	r28, r24
     fa4:	fb 2e       	mov	r15, r27
     fa6:	6f 57       	subi	r22, 0x7F	; 127
     fa8:	71 09       	sbc	r23, r1
     faa:	75 95       	asr	r23
     fac:	77 1f       	adc	r23, r23
     fae:	88 0b       	sbc	r24, r24
     fb0:	99 0b       	sbc	r25, r25
     fb2:	0e 94 b1 05 	call	0xb62	; 0xb62 <__floatsisf>
     fb6:	28 e1       	ldi	r18, 0x18	; 24
     fb8:	32 e7       	ldi	r19, 0x72	; 114
     fba:	41 e3       	ldi	r20, 0x31	; 49
     fbc:	5f e3       	ldi	r21, 0x3F	; 63
     fbe:	0e 94 50 06 	call	0xca0	; 0xca0 <__mulsf3x>
     fc2:	af 2d       	mov	r26, r15
     fc4:	98 01       	movw	r18, r16
     fc6:	ae 01       	movw	r20, r28
     fc8:	ff 90       	pop	r15
     fca:	0f 91       	pop	r16
     fcc:	1f 91       	pop	r17
     fce:	cf 91       	pop	r28
     fd0:	df 91       	pop	r29
     fd2:	0e 94 24 05 	call	0xa48	; 0xa48 <__addsf3x>
     fd6:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>

00000fda <modf>:
     fda:	fa 01       	movw	r30, r20
     fdc:	dc 01       	movw	r26, r24
     fde:	aa 0f       	add	r26, r26
     fe0:	bb 1f       	adc	r27, r27
     fe2:	9b 01       	movw	r18, r22
     fe4:	ac 01       	movw	r20, r24
     fe6:	bf 57       	subi	r27, 0x7F	; 127
     fe8:	28 f4       	brcc	.+10     	; 0xff4 <modf+0x1a>
     fea:	22 27       	eor	r18, r18
     fec:	33 27       	eor	r19, r19
     fee:	44 27       	eor	r20, r20
     ff0:	50 78       	andi	r21, 0x80	; 128
     ff2:	20 c0       	rjmp	.+64     	; 0x1034 <__DATA_REGION_LENGTH__+0x34>
     ff4:	b7 51       	subi	r27, 0x17	; 23
     ff6:	90 f4       	brcc	.+36     	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
     ff8:	ab 2f       	mov	r26, r27
     ffa:	00 24       	eor	r0, r0
     ffc:	46 95       	lsr	r20
     ffe:	37 95       	ror	r19
    1000:	27 95       	ror	r18
    1002:	01 1c       	adc	r0, r1
    1004:	a3 95       	inc	r26
    1006:	d2 f3       	brmi	.-12     	; 0xffc <modf+0x22>
    1008:	00 20       	and	r0, r0
    100a:	71 f0       	breq	.+28     	; 0x1028 <__DATA_REGION_LENGTH__+0x28>
    100c:	22 0f       	add	r18, r18
    100e:	33 1f       	adc	r19, r19
    1010:	44 1f       	adc	r20, r20
    1012:	b3 95       	inc	r27
    1014:	da f3       	brmi	.-10     	; 0x100c <__DATA_REGION_LENGTH__+0xc>
    1016:	0e d0       	rcall	.+28     	; 0x1034 <__DATA_REGION_LENGTH__+0x34>
    1018:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__subsf3>
    101c:	61 30       	cpi	r22, 0x01	; 1
    101e:	71 05       	cpc	r23, r1
    1020:	a0 e8       	ldi	r26, 0x80	; 128
    1022:	8a 07       	cpc	r24, r26
    1024:	b9 46       	sbci	r27, 0x69	; 105
    1026:	30 f4       	brcc	.+12     	; 0x1034 <__DATA_REGION_LENGTH__+0x34>
    1028:	9b 01       	movw	r18, r22
    102a:	ac 01       	movw	r20, r24
    102c:	66 27       	eor	r22, r22
    102e:	77 27       	eor	r23, r23
    1030:	88 27       	eor	r24, r24
    1032:	90 78       	andi	r25, 0x80	; 128
    1034:	30 96       	adiw	r30, 0x00	; 0
    1036:	21 f0       	breq	.+8      	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    1038:	20 83       	st	Z, r18
    103a:	31 83       	std	Z+1, r19	; 0x01
    103c:	42 83       	std	Z+2, r20	; 0x02
    103e:	53 83       	std	Z+3, r21	; 0x03
    1040:	08 95       	ret

00001042 <__divsf3>:
    1042:	0e 94 35 08 	call	0x106a	; 0x106a <__divsf3x>
    1046:	0c 94 03 06 	jmp	0xc06	; 0xc06 <__fp_round>
    104a:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fp_pscB>
    104e:	58 f0       	brcs	.+22     	; 0x1066 <__divsf3+0x24>
    1050:	0e 94 f5 05 	call	0xbea	; 0xbea <__fp_pscA>
    1054:	40 f0       	brcs	.+16     	; 0x1066 <__divsf3+0x24>
    1056:	29 f4       	brne	.+10     	; 0x1062 <__divsf3+0x20>
    1058:	5f 3f       	cpi	r21, 0xFF	; 255
    105a:	29 f0       	breq	.+10     	; 0x1066 <__divsf3+0x24>
    105c:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
    1060:	51 11       	cpse	r21, r1
    1062:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
    1066:	0c 94 f2 05 	jmp	0xbe4	; 0xbe4 <__fp_nan>

0000106a <__divsf3x>:
    106a:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_split3>
    106e:	68 f3       	brcs	.-38     	; 0x104a <__divsf3+0x8>

00001070 <__divsf3_pse>:
    1070:	99 23       	and	r25, r25
    1072:	b1 f3       	breq	.-20     	; 0x1060 <__divsf3+0x1e>
    1074:	55 23       	and	r21, r21
    1076:	91 f3       	breq	.-28     	; 0x105c <__divsf3+0x1a>
    1078:	95 1b       	sub	r25, r21
    107a:	55 0b       	sbc	r21, r21
    107c:	bb 27       	eor	r27, r27
    107e:	aa 27       	eor	r26, r26
    1080:	62 17       	cp	r22, r18
    1082:	73 07       	cpc	r23, r19
    1084:	84 07       	cpc	r24, r20
    1086:	38 f0       	brcs	.+14     	; 0x1096 <__divsf3_pse+0x26>
    1088:	9f 5f       	subi	r25, 0xFF	; 255
    108a:	5f 4f       	sbci	r21, 0xFF	; 255
    108c:	22 0f       	add	r18, r18
    108e:	33 1f       	adc	r19, r19
    1090:	44 1f       	adc	r20, r20
    1092:	aa 1f       	adc	r26, r26
    1094:	a9 f3       	breq	.-22     	; 0x1080 <__divsf3_pse+0x10>
    1096:	35 d0       	rcall	.+106    	; 0x1102 <__stack+0x3>
    1098:	0e 2e       	mov	r0, r30
    109a:	3a f0       	brmi	.+14     	; 0x10aa <__divsf3_pse+0x3a>
    109c:	e0 e8       	ldi	r30, 0x80	; 128
    109e:	32 d0       	rcall	.+100    	; 0x1104 <__stack+0x5>
    10a0:	91 50       	subi	r25, 0x01	; 1
    10a2:	50 40       	sbci	r21, 0x00	; 0
    10a4:	e6 95       	lsr	r30
    10a6:	00 1c       	adc	r0, r0
    10a8:	ca f7       	brpl	.-14     	; 0x109c <__divsf3_pse+0x2c>
    10aa:	2b d0       	rcall	.+86     	; 0x1102 <__stack+0x3>
    10ac:	fe 2f       	mov	r31, r30
    10ae:	29 d0       	rcall	.+82     	; 0x1102 <__stack+0x3>
    10b0:	66 0f       	add	r22, r22
    10b2:	77 1f       	adc	r23, r23
    10b4:	88 1f       	adc	r24, r24
    10b6:	bb 1f       	adc	r27, r27
    10b8:	26 17       	cp	r18, r22
    10ba:	37 07       	cpc	r19, r23
    10bc:	48 07       	cpc	r20, r24
    10be:	ab 07       	cpc	r26, r27
    10c0:	b0 e8       	ldi	r27, 0x80	; 128
    10c2:	09 f0       	breq	.+2      	; 0x10c6 <__divsf3_pse+0x56>
    10c4:	bb 0b       	sbc	r27, r27
    10c6:	80 2d       	mov	r24, r0
    10c8:	bf 01       	movw	r22, r30
    10ca:	ff 27       	eor	r31, r31
    10cc:	93 58       	subi	r25, 0x83	; 131
    10ce:	5f 4f       	sbci	r21, 0xFF	; 255
    10d0:	3a f0       	brmi	.+14     	; 0x10e0 <__divsf3_pse+0x70>
    10d2:	9e 3f       	cpi	r25, 0xFE	; 254
    10d4:	51 05       	cpc	r21, r1
    10d6:	78 f0       	brcs	.+30     	; 0x10f6 <__divsf3_pse+0x86>
    10d8:	0c 94 ec 05 	jmp	0xbd8	; 0xbd8 <__fp_inf>
    10dc:	0c 94 37 06 	jmp	0xc6e	; 0xc6e <__fp_szero>
    10e0:	5f 3f       	cpi	r21, 0xFF	; 255
    10e2:	e4 f3       	brlt	.-8      	; 0x10dc <__divsf3_pse+0x6c>
    10e4:	98 3e       	cpi	r25, 0xE8	; 232
    10e6:	d4 f3       	brlt	.-12     	; 0x10dc <__divsf3_pse+0x6c>
    10e8:	86 95       	lsr	r24
    10ea:	77 95       	ror	r23
    10ec:	67 95       	ror	r22
    10ee:	b7 95       	ror	r27
    10f0:	f7 95       	ror	r31
    10f2:	9f 5f       	subi	r25, 0xFF	; 255
    10f4:	c9 f7       	brne	.-14     	; 0x10e8 <__divsf3_pse+0x78>
    10f6:	88 0f       	add	r24, r24
    10f8:	91 1d       	adc	r25, r1
    10fa:	96 95       	lsr	r25
    10fc:	87 95       	ror	r24
    10fe:	97 f9       	bld	r25, 7
    1100:	08 95       	ret
    1102:	e1 e0       	ldi	r30, 0x01	; 1
    1104:	66 0f       	add	r22, r22
    1106:	77 1f       	adc	r23, r23
    1108:	88 1f       	adc	r24, r24
    110a:	bb 1f       	adc	r27, r27
    110c:	62 17       	cp	r22, r18
    110e:	73 07       	cpc	r23, r19
    1110:	84 07       	cpc	r24, r20
    1112:	ba 07       	cpc	r27, r26
    1114:	20 f0       	brcs	.+8      	; 0x111e <__stack+0x1f>
    1116:	62 1b       	sub	r22, r18
    1118:	73 0b       	sbc	r23, r19
    111a:	84 0b       	sbc	r24, r20
    111c:	ba 0b       	sbc	r27, r26
    111e:	ee 1f       	adc	r30, r30
    1120:	88 f7       	brcc	.-30     	; 0x1104 <__stack+0x5>
    1122:	e0 95       	com	r30
    1124:	08 95       	ret

00001126 <__fp_mpack>:
    1126:	9f 3f       	cpi	r25, 0xFF	; 255
    1128:	31 f0       	breq	.+12     	; 0x1136 <__fp_mpack_finite+0xc>

0000112a <__fp_mpack_finite>:
    112a:	91 50       	subi	r25, 0x01	; 1
    112c:	20 f4       	brcc	.+8      	; 0x1136 <__fp_mpack_finite+0xc>
    112e:	87 95       	ror	r24
    1130:	77 95       	ror	r23
    1132:	67 95       	ror	r22
    1134:	b7 95       	ror	r27
    1136:	88 0f       	add	r24, r24
    1138:	91 1d       	adc	r25, r1
    113a:	96 95       	lsr	r25
    113c:	87 95       	ror	r24
    113e:	97 f9       	bld	r25, 7
    1140:	08 95       	ret

00001142 <__ashrdi3>:
    1142:	97 fb       	bst	r25, 7
    1144:	10 f8       	bld	r1, 0

00001146 <__lshrdi3>:
    1146:	16 94       	lsr	r1
    1148:	00 08       	sbc	r0, r0
    114a:	0f 93       	push	r16
    114c:	08 30       	cpi	r16, 0x08	; 8
    114e:	98 f0       	brcs	.+38     	; 0x1176 <__lshrdi3+0x30>
    1150:	08 50       	subi	r16, 0x08	; 8
    1152:	23 2f       	mov	r18, r19
    1154:	34 2f       	mov	r19, r20
    1156:	45 2f       	mov	r20, r21
    1158:	56 2f       	mov	r21, r22
    115a:	67 2f       	mov	r22, r23
    115c:	78 2f       	mov	r23, r24
    115e:	89 2f       	mov	r24, r25
    1160:	90 2d       	mov	r25, r0
    1162:	f4 cf       	rjmp	.-24     	; 0x114c <__lshrdi3+0x6>
    1164:	05 94       	asr	r0
    1166:	97 95       	ror	r25
    1168:	87 95       	ror	r24
    116a:	77 95       	ror	r23
    116c:	67 95       	ror	r22
    116e:	57 95       	ror	r21
    1170:	47 95       	ror	r20
    1172:	37 95       	ror	r19
    1174:	27 95       	ror	r18
    1176:	0a 95       	dec	r16
    1178:	aa f7       	brpl	.-22     	; 0x1164 <__lshrdi3+0x1e>
    117a:	0f 91       	pop	r16
    117c:	08 95       	ret

0000117e <__adddi3_s8>:
    117e:	00 24       	eor	r0, r0
    1180:	a7 fd       	sbrc	r26, 7
    1182:	00 94       	com	r0
    1184:	2a 0f       	add	r18, r26
    1186:	30 1d       	adc	r19, r0
    1188:	40 1d       	adc	r20, r0
    118a:	50 1d       	adc	r21, r0
    118c:	60 1d       	adc	r22, r0
    118e:	70 1d       	adc	r23, r0
    1190:	80 1d       	adc	r24, r0
    1192:	90 1d       	adc	r25, r0
    1194:	08 95       	ret

00001196 <__itoa_ncheck>:
    1196:	bb 27       	eor	r27, r27
    1198:	4a 30       	cpi	r20, 0x0A	; 10
    119a:	31 f4       	brne	.+12     	; 0x11a8 <__itoa_ncheck+0x12>
    119c:	99 23       	and	r25, r25
    119e:	22 f4       	brpl	.+8      	; 0x11a8 <__itoa_ncheck+0x12>
    11a0:	bd e2       	ldi	r27, 0x2D	; 45
    11a2:	90 95       	com	r25
    11a4:	81 95       	neg	r24
    11a6:	9f 4f       	sbci	r25, 0xFF	; 255
    11a8:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__utoa_common>

000011ac <__utoa_ncheck>:
    11ac:	bb 27       	eor	r27, r27

000011ae <__utoa_common>:
    11ae:	fb 01       	movw	r30, r22
    11b0:	55 27       	eor	r21, r21
    11b2:	aa 27       	eor	r26, r26
    11b4:	88 0f       	add	r24, r24
    11b6:	99 1f       	adc	r25, r25
    11b8:	aa 1f       	adc	r26, r26
    11ba:	a4 17       	cp	r26, r20
    11bc:	10 f0       	brcs	.+4      	; 0x11c2 <__utoa_common+0x14>
    11be:	a4 1b       	sub	r26, r20
    11c0:	83 95       	inc	r24
    11c2:	50 51       	subi	r21, 0x10	; 16
    11c4:	b9 f7       	brne	.-18     	; 0x11b4 <__utoa_common+0x6>
    11c6:	a0 5d       	subi	r26, 0xD0	; 208
    11c8:	aa 33       	cpi	r26, 0x3A	; 58
    11ca:	08 f0       	brcs	.+2      	; 0x11ce <__utoa_common+0x20>
    11cc:	a9 5d       	subi	r26, 0xD9	; 217
    11ce:	a1 93       	st	Z+, r26
    11d0:	00 97       	sbiw	r24, 0x00	; 0
    11d2:	79 f7       	brne	.-34     	; 0x11b2 <__utoa_common+0x4>
    11d4:	b1 11       	cpse	r27, r1
    11d6:	b1 93       	st	Z+, r27
    11d8:	11 92       	st	Z+, r1
    11da:	cb 01       	movw	r24, r22
    11dc:	0c 94 09 0b 	jmp	0x1612	; 0x1612 <strrev>

000011e0 <sprintf>:
    11e0:	ae e0       	ldi	r26, 0x0E	; 14
    11e2:	b0 e0       	ldi	r27, 0x00	; 0
    11e4:	e6 ef       	ldi	r30, 0xF6	; 246
    11e6:	f8 e0       	ldi	r31, 0x08	; 8
    11e8:	0c 94 c1 0b 	jmp	0x1782	; 0x1782 <__prologue_saves__+0x1c>
    11ec:	0d 89       	ldd	r16, Y+21	; 0x15
    11ee:	1e 89       	ldd	r17, Y+22	; 0x16
    11f0:	86 e0       	ldi	r24, 0x06	; 6
    11f2:	8c 83       	std	Y+4, r24	; 0x04
    11f4:	1a 83       	std	Y+2, r17	; 0x02
    11f6:	09 83       	std	Y+1, r16	; 0x01
    11f8:	8f ef       	ldi	r24, 0xFF	; 255
    11fa:	9f e7       	ldi	r25, 0x7F	; 127
    11fc:	9e 83       	std	Y+6, r25	; 0x06
    11fe:	8d 83       	std	Y+5, r24	; 0x05
    1200:	ae 01       	movw	r20, r28
    1202:	47 5e       	subi	r20, 0xE7	; 231
    1204:	5f 4f       	sbci	r21, 0xFF	; 255
    1206:	6f 89       	ldd	r22, Y+23	; 0x17
    1208:	78 8d       	ldd	r23, Y+24	; 0x18
    120a:	ce 01       	movw	r24, r28
    120c:	01 96       	adiw	r24, 0x01	; 1
    120e:	0e 94 12 09 	call	0x1224	; 0x1224 <vfprintf>
    1212:	ef 81       	ldd	r30, Y+7	; 0x07
    1214:	f8 85       	ldd	r31, Y+8	; 0x08
    1216:	e0 0f       	add	r30, r16
    1218:	f1 1f       	adc	r31, r17
    121a:	10 82       	st	Z, r1
    121c:	2e 96       	adiw	r28, 0x0e	; 14
    121e:	e4 e0       	ldi	r30, 0x04	; 4
    1220:	0c 94 dd 0b 	jmp	0x17ba	; 0x17ba <__epilogue_restores__+0x1c>

00001224 <vfprintf>:
    1224:	ab e0       	ldi	r26, 0x0B	; 11
    1226:	b0 e0       	ldi	r27, 0x00	; 0
    1228:	e8 e1       	ldi	r30, 0x18	; 24
    122a:	f9 e0       	ldi	r31, 0x09	; 9
    122c:	0c 94 b3 0b 	jmp	0x1766	; 0x1766 <__prologue_saves__>
    1230:	6c 01       	movw	r12, r24
    1232:	7b 01       	movw	r14, r22
    1234:	8a 01       	movw	r16, r20
    1236:	fc 01       	movw	r30, r24
    1238:	17 82       	std	Z+7, r1	; 0x07
    123a:	16 82       	std	Z+6, r1	; 0x06
    123c:	83 81       	ldd	r24, Z+3	; 0x03
    123e:	81 ff       	sbrs	r24, 1
    1240:	cc c1       	rjmp	.+920    	; 0x15da <vfprintf+0x3b6>
    1242:	ce 01       	movw	r24, r28
    1244:	01 96       	adiw	r24, 0x01	; 1
    1246:	3c 01       	movw	r6, r24
    1248:	f6 01       	movw	r30, r12
    124a:	93 81       	ldd	r25, Z+3	; 0x03
    124c:	f7 01       	movw	r30, r14
    124e:	93 fd       	sbrc	r25, 3
    1250:	85 91       	lpm	r24, Z+
    1252:	93 ff       	sbrs	r25, 3
    1254:	81 91       	ld	r24, Z+
    1256:	7f 01       	movw	r14, r30
    1258:	88 23       	and	r24, r24
    125a:	09 f4       	brne	.+2      	; 0x125e <vfprintf+0x3a>
    125c:	ba c1       	rjmp	.+884    	; 0x15d2 <vfprintf+0x3ae>
    125e:	85 32       	cpi	r24, 0x25	; 37
    1260:	39 f4       	brne	.+14     	; 0x1270 <vfprintf+0x4c>
    1262:	93 fd       	sbrc	r25, 3
    1264:	85 91       	lpm	r24, Z+
    1266:	93 ff       	sbrs	r25, 3
    1268:	81 91       	ld	r24, Z+
    126a:	7f 01       	movw	r14, r30
    126c:	85 32       	cpi	r24, 0x25	; 37
    126e:	29 f4       	brne	.+10     	; 0x127a <vfprintf+0x56>
    1270:	b6 01       	movw	r22, r12
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    1278:	e7 cf       	rjmp	.-50     	; 0x1248 <vfprintf+0x24>
    127a:	91 2c       	mov	r9, r1
    127c:	21 2c       	mov	r2, r1
    127e:	31 2c       	mov	r3, r1
    1280:	ff e1       	ldi	r31, 0x1F	; 31
    1282:	f3 15       	cp	r31, r3
    1284:	d8 f0       	brcs	.+54     	; 0x12bc <vfprintf+0x98>
    1286:	8b 32       	cpi	r24, 0x2B	; 43
    1288:	79 f0       	breq	.+30     	; 0x12a8 <vfprintf+0x84>
    128a:	38 f4       	brcc	.+14     	; 0x129a <vfprintf+0x76>
    128c:	80 32       	cpi	r24, 0x20	; 32
    128e:	79 f0       	breq	.+30     	; 0x12ae <vfprintf+0x8a>
    1290:	83 32       	cpi	r24, 0x23	; 35
    1292:	a1 f4       	brne	.+40     	; 0x12bc <vfprintf+0x98>
    1294:	23 2d       	mov	r18, r3
    1296:	20 61       	ori	r18, 0x10	; 16
    1298:	1d c0       	rjmp	.+58     	; 0x12d4 <vfprintf+0xb0>
    129a:	8d 32       	cpi	r24, 0x2D	; 45
    129c:	61 f0       	breq	.+24     	; 0x12b6 <vfprintf+0x92>
    129e:	80 33       	cpi	r24, 0x30	; 48
    12a0:	69 f4       	brne	.+26     	; 0x12bc <vfprintf+0x98>
    12a2:	23 2d       	mov	r18, r3
    12a4:	21 60       	ori	r18, 0x01	; 1
    12a6:	16 c0       	rjmp	.+44     	; 0x12d4 <vfprintf+0xb0>
    12a8:	83 2d       	mov	r24, r3
    12aa:	82 60       	ori	r24, 0x02	; 2
    12ac:	38 2e       	mov	r3, r24
    12ae:	e3 2d       	mov	r30, r3
    12b0:	e4 60       	ori	r30, 0x04	; 4
    12b2:	3e 2e       	mov	r3, r30
    12b4:	2a c0       	rjmp	.+84     	; 0x130a <vfprintf+0xe6>
    12b6:	f3 2d       	mov	r31, r3
    12b8:	f8 60       	ori	r31, 0x08	; 8
    12ba:	1d c0       	rjmp	.+58     	; 0x12f6 <vfprintf+0xd2>
    12bc:	37 fc       	sbrc	r3, 7
    12be:	2d c0       	rjmp	.+90     	; 0x131a <vfprintf+0xf6>
    12c0:	20 ed       	ldi	r18, 0xD0	; 208
    12c2:	28 0f       	add	r18, r24
    12c4:	2a 30       	cpi	r18, 0x0A	; 10
    12c6:	40 f0       	brcs	.+16     	; 0x12d8 <vfprintf+0xb4>
    12c8:	8e 32       	cpi	r24, 0x2E	; 46
    12ca:	b9 f4       	brne	.+46     	; 0x12fa <vfprintf+0xd6>
    12cc:	36 fc       	sbrc	r3, 6
    12ce:	81 c1       	rjmp	.+770    	; 0x15d2 <vfprintf+0x3ae>
    12d0:	23 2d       	mov	r18, r3
    12d2:	20 64       	ori	r18, 0x40	; 64
    12d4:	32 2e       	mov	r3, r18
    12d6:	19 c0       	rjmp	.+50     	; 0x130a <vfprintf+0xe6>
    12d8:	36 fe       	sbrs	r3, 6
    12da:	06 c0       	rjmp	.+12     	; 0x12e8 <vfprintf+0xc4>
    12dc:	8a e0       	ldi	r24, 0x0A	; 10
    12de:	98 9e       	mul	r9, r24
    12e0:	20 0d       	add	r18, r0
    12e2:	11 24       	eor	r1, r1
    12e4:	92 2e       	mov	r9, r18
    12e6:	11 c0       	rjmp	.+34     	; 0x130a <vfprintf+0xe6>
    12e8:	ea e0       	ldi	r30, 0x0A	; 10
    12ea:	2e 9e       	mul	r2, r30
    12ec:	20 0d       	add	r18, r0
    12ee:	11 24       	eor	r1, r1
    12f0:	22 2e       	mov	r2, r18
    12f2:	f3 2d       	mov	r31, r3
    12f4:	f0 62       	ori	r31, 0x20	; 32
    12f6:	3f 2e       	mov	r3, r31
    12f8:	08 c0       	rjmp	.+16     	; 0x130a <vfprintf+0xe6>
    12fa:	8c 36       	cpi	r24, 0x6C	; 108
    12fc:	21 f4       	brne	.+8      	; 0x1306 <vfprintf+0xe2>
    12fe:	83 2d       	mov	r24, r3
    1300:	80 68       	ori	r24, 0x80	; 128
    1302:	38 2e       	mov	r3, r24
    1304:	02 c0       	rjmp	.+4      	; 0x130a <vfprintf+0xe6>
    1306:	88 36       	cpi	r24, 0x68	; 104
    1308:	41 f4       	brne	.+16     	; 0x131a <vfprintf+0xf6>
    130a:	f7 01       	movw	r30, r14
    130c:	93 fd       	sbrc	r25, 3
    130e:	85 91       	lpm	r24, Z+
    1310:	93 ff       	sbrs	r25, 3
    1312:	81 91       	ld	r24, Z+
    1314:	7f 01       	movw	r14, r30
    1316:	81 11       	cpse	r24, r1
    1318:	b3 cf       	rjmp	.-154    	; 0x1280 <vfprintf+0x5c>
    131a:	98 2f       	mov	r25, r24
    131c:	9f 7d       	andi	r25, 0xDF	; 223
    131e:	95 54       	subi	r25, 0x45	; 69
    1320:	93 30       	cpi	r25, 0x03	; 3
    1322:	28 f4       	brcc	.+10     	; 0x132e <vfprintf+0x10a>
    1324:	0c 5f       	subi	r16, 0xFC	; 252
    1326:	1f 4f       	sbci	r17, 0xFF	; 255
    1328:	9f e3       	ldi	r25, 0x3F	; 63
    132a:	99 83       	std	Y+1, r25	; 0x01
    132c:	0d c0       	rjmp	.+26     	; 0x1348 <vfprintf+0x124>
    132e:	83 36       	cpi	r24, 0x63	; 99
    1330:	31 f0       	breq	.+12     	; 0x133e <vfprintf+0x11a>
    1332:	83 37       	cpi	r24, 0x73	; 115
    1334:	71 f0       	breq	.+28     	; 0x1352 <vfprintf+0x12e>
    1336:	83 35       	cpi	r24, 0x53	; 83
    1338:	09 f0       	breq	.+2      	; 0x133c <vfprintf+0x118>
    133a:	59 c0       	rjmp	.+178    	; 0x13ee <vfprintf+0x1ca>
    133c:	21 c0       	rjmp	.+66     	; 0x1380 <vfprintf+0x15c>
    133e:	f8 01       	movw	r30, r16
    1340:	80 81       	ld	r24, Z
    1342:	89 83       	std	Y+1, r24	; 0x01
    1344:	0e 5f       	subi	r16, 0xFE	; 254
    1346:	1f 4f       	sbci	r17, 0xFF	; 255
    1348:	88 24       	eor	r8, r8
    134a:	83 94       	inc	r8
    134c:	91 2c       	mov	r9, r1
    134e:	53 01       	movw	r10, r6
    1350:	13 c0       	rjmp	.+38     	; 0x1378 <vfprintf+0x154>
    1352:	28 01       	movw	r4, r16
    1354:	f2 e0       	ldi	r31, 0x02	; 2
    1356:	4f 0e       	add	r4, r31
    1358:	51 1c       	adc	r5, r1
    135a:	f8 01       	movw	r30, r16
    135c:	a0 80       	ld	r10, Z
    135e:	b1 80       	ldd	r11, Z+1	; 0x01
    1360:	36 fe       	sbrs	r3, 6
    1362:	03 c0       	rjmp	.+6      	; 0x136a <vfprintf+0x146>
    1364:	69 2d       	mov	r22, r9
    1366:	70 e0       	ldi	r23, 0x00	; 0
    1368:	02 c0       	rjmp	.+4      	; 0x136e <vfprintf+0x14a>
    136a:	6f ef       	ldi	r22, 0xFF	; 255
    136c:	7f ef       	ldi	r23, 0xFF	; 255
    136e:	c5 01       	movw	r24, r10
    1370:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <strnlen>
    1374:	4c 01       	movw	r8, r24
    1376:	82 01       	movw	r16, r4
    1378:	f3 2d       	mov	r31, r3
    137a:	ff 77       	andi	r31, 0x7F	; 127
    137c:	3f 2e       	mov	r3, r31
    137e:	16 c0       	rjmp	.+44     	; 0x13ac <vfprintf+0x188>
    1380:	28 01       	movw	r4, r16
    1382:	22 e0       	ldi	r18, 0x02	; 2
    1384:	42 0e       	add	r4, r18
    1386:	51 1c       	adc	r5, r1
    1388:	f8 01       	movw	r30, r16
    138a:	a0 80       	ld	r10, Z
    138c:	b1 80       	ldd	r11, Z+1	; 0x01
    138e:	36 fe       	sbrs	r3, 6
    1390:	03 c0       	rjmp	.+6      	; 0x1398 <vfprintf+0x174>
    1392:	69 2d       	mov	r22, r9
    1394:	70 e0       	ldi	r23, 0x00	; 0
    1396:	02 c0       	rjmp	.+4      	; 0x139c <vfprintf+0x178>
    1398:	6f ef       	ldi	r22, 0xFF	; 255
    139a:	7f ef       	ldi	r23, 0xFF	; 255
    139c:	c5 01       	movw	r24, r10
    139e:	0e 94 f3 0a 	call	0x15e6	; 0x15e6 <strnlen_P>
    13a2:	4c 01       	movw	r8, r24
    13a4:	f3 2d       	mov	r31, r3
    13a6:	f0 68       	ori	r31, 0x80	; 128
    13a8:	3f 2e       	mov	r3, r31
    13aa:	82 01       	movw	r16, r4
    13ac:	33 fc       	sbrc	r3, 3
    13ae:	1b c0       	rjmp	.+54     	; 0x13e6 <vfprintf+0x1c2>
    13b0:	82 2d       	mov	r24, r2
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	88 16       	cp	r8, r24
    13b6:	99 06       	cpc	r9, r25
    13b8:	b0 f4       	brcc	.+44     	; 0x13e6 <vfprintf+0x1c2>
    13ba:	b6 01       	movw	r22, r12
    13bc:	80 e2       	ldi	r24, 0x20	; 32
    13be:	90 e0       	ldi	r25, 0x00	; 0
    13c0:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    13c4:	2a 94       	dec	r2
    13c6:	f4 cf       	rjmp	.-24     	; 0x13b0 <vfprintf+0x18c>
    13c8:	f5 01       	movw	r30, r10
    13ca:	37 fc       	sbrc	r3, 7
    13cc:	85 91       	lpm	r24, Z+
    13ce:	37 fe       	sbrs	r3, 7
    13d0:	81 91       	ld	r24, Z+
    13d2:	5f 01       	movw	r10, r30
    13d4:	b6 01       	movw	r22, r12
    13d6:	90 e0       	ldi	r25, 0x00	; 0
    13d8:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    13dc:	21 10       	cpse	r2, r1
    13de:	2a 94       	dec	r2
    13e0:	21 e0       	ldi	r18, 0x01	; 1
    13e2:	82 1a       	sub	r8, r18
    13e4:	91 08       	sbc	r9, r1
    13e6:	81 14       	cp	r8, r1
    13e8:	91 04       	cpc	r9, r1
    13ea:	71 f7       	brne	.-36     	; 0x13c8 <vfprintf+0x1a4>
    13ec:	e8 c0       	rjmp	.+464    	; 0x15be <vfprintf+0x39a>
    13ee:	84 36       	cpi	r24, 0x64	; 100
    13f0:	11 f0       	breq	.+4      	; 0x13f6 <vfprintf+0x1d2>
    13f2:	89 36       	cpi	r24, 0x69	; 105
    13f4:	41 f5       	brne	.+80     	; 0x1446 <vfprintf+0x222>
    13f6:	f8 01       	movw	r30, r16
    13f8:	37 fe       	sbrs	r3, 7
    13fa:	07 c0       	rjmp	.+14     	; 0x140a <vfprintf+0x1e6>
    13fc:	60 81       	ld	r22, Z
    13fe:	71 81       	ldd	r23, Z+1	; 0x01
    1400:	82 81       	ldd	r24, Z+2	; 0x02
    1402:	93 81       	ldd	r25, Z+3	; 0x03
    1404:	0c 5f       	subi	r16, 0xFC	; 252
    1406:	1f 4f       	sbci	r17, 0xFF	; 255
    1408:	08 c0       	rjmp	.+16     	; 0x141a <vfprintf+0x1f6>
    140a:	60 81       	ld	r22, Z
    140c:	71 81       	ldd	r23, Z+1	; 0x01
    140e:	07 2e       	mov	r0, r23
    1410:	00 0c       	add	r0, r0
    1412:	88 0b       	sbc	r24, r24
    1414:	99 0b       	sbc	r25, r25
    1416:	0e 5f       	subi	r16, 0xFE	; 254
    1418:	1f 4f       	sbci	r17, 0xFF	; 255
    141a:	f3 2d       	mov	r31, r3
    141c:	ff 76       	andi	r31, 0x6F	; 111
    141e:	3f 2e       	mov	r3, r31
    1420:	97 ff       	sbrs	r25, 7
    1422:	09 c0       	rjmp	.+18     	; 0x1436 <vfprintf+0x212>
    1424:	90 95       	com	r25
    1426:	80 95       	com	r24
    1428:	70 95       	com	r23
    142a:	61 95       	neg	r22
    142c:	7f 4f       	sbci	r23, 0xFF	; 255
    142e:	8f 4f       	sbci	r24, 0xFF	; 255
    1430:	9f 4f       	sbci	r25, 0xFF	; 255
    1432:	f0 68       	ori	r31, 0x80	; 128
    1434:	3f 2e       	mov	r3, r31
    1436:	2a e0       	ldi	r18, 0x0A	; 10
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	a3 01       	movw	r20, r6
    143c:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__ultoa_invert>
    1440:	88 2e       	mov	r8, r24
    1442:	86 18       	sub	r8, r6
    1444:	45 c0       	rjmp	.+138    	; 0x14d0 <vfprintf+0x2ac>
    1446:	85 37       	cpi	r24, 0x75	; 117
    1448:	31 f4       	brne	.+12     	; 0x1456 <vfprintf+0x232>
    144a:	23 2d       	mov	r18, r3
    144c:	2f 7e       	andi	r18, 0xEF	; 239
    144e:	b2 2e       	mov	r11, r18
    1450:	2a e0       	ldi	r18, 0x0A	; 10
    1452:	30 e0       	ldi	r19, 0x00	; 0
    1454:	25 c0       	rjmp	.+74     	; 0x14a0 <vfprintf+0x27c>
    1456:	93 2d       	mov	r25, r3
    1458:	99 7f       	andi	r25, 0xF9	; 249
    145a:	b9 2e       	mov	r11, r25
    145c:	8f 36       	cpi	r24, 0x6F	; 111
    145e:	c1 f0       	breq	.+48     	; 0x1490 <vfprintf+0x26c>
    1460:	18 f4       	brcc	.+6      	; 0x1468 <vfprintf+0x244>
    1462:	88 35       	cpi	r24, 0x58	; 88
    1464:	79 f0       	breq	.+30     	; 0x1484 <vfprintf+0x260>
    1466:	b5 c0       	rjmp	.+362    	; 0x15d2 <vfprintf+0x3ae>
    1468:	80 37       	cpi	r24, 0x70	; 112
    146a:	19 f0       	breq	.+6      	; 0x1472 <vfprintf+0x24e>
    146c:	88 37       	cpi	r24, 0x78	; 120
    146e:	21 f0       	breq	.+8      	; 0x1478 <vfprintf+0x254>
    1470:	b0 c0       	rjmp	.+352    	; 0x15d2 <vfprintf+0x3ae>
    1472:	e9 2f       	mov	r30, r25
    1474:	e0 61       	ori	r30, 0x10	; 16
    1476:	be 2e       	mov	r11, r30
    1478:	b4 fe       	sbrs	r11, 4
    147a:	0d c0       	rjmp	.+26     	; 0x1496 <vfprintf+0x272>
    147c:	fb 2d       	mov	r31, r11
    147e:	f4 60       	ori	r31, 0x04	; 4
    1480:	bf 2e       	mov	r11, r31
    1482:	09 c0       	rjmp	.+18     	; 0x1496 <vfprintf+0x272>
    1484:	34 fe       	sbrs	r3, 4
    1486:	0a c0       	rjmp	.+20     	; 0x149c <vfprintf+0x278>
    1488:	29 2f       	mov	r18, r25
    148a:	26 60       	ori	r18, 0x06	; 6
    148c:	b2 2e       	mov	r11, r18
    148e:	06 c0       	rjmp	.+12     	; 0x149c <vfprintf+0x278>
    1490:	28 e0       	ldi	r18, 0x08	; 8
    1492:	30 e0       	ldi	r19, 0x00	; 0
    1494:	05 c0       	rjmp	.+10     	; 0x14a0 <vfprintf+0x27c>
    1496:	20 e1       	ldi	r18, 0x10	; 16
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	02 c0       	rjmp	.+4      	; 0x14a0 <vfprintf+0x27c>
    149c:	20 e1       	ldi	r18, 0x10	; 16
    149e:	32 e0       	ldi	r19, 0x02	; 2
    14a0:	f8 01       	movw	r30, r16
    14a2:	b7 fe       	sbrs	r11, 7
    14a4:	07 c0       	rjmp	.+14     	; 0x14b4 <vfprintf+0x290>
    14a6:	60 81       	ld	r22, Z
    14a8:	71 81       	ldd	r23, Z+1	; 0x01
    14aa:	82 81       	ldd	r24, Z+2	; 0x02
    14ac:	93 81       	ldd	r25, Z+3	; 0x03
    14ae:	0c 5f       	subi	r16, 0xFC	; 252
    14b0:	1f 4f       	sbci	r17, 0xFF	; 255
    14b2:	06 c0       	rjmp	.+12     	; 0x14c0 <vfprintf+0x29c>
    14b4:	60 81       	ld	r22, Z
    14b6:	71 81       	ldd	r23, Z+1	; 0x01
    14b8:	80 e0       	ldi	r24, 0x00	; 0
    14ba:	90 e0       	ldi	r25, 0x00	; 0
    14bc:	0e 5f       	subi	r16, 0xFE	; 254
    14be:	1f 4f       	sbci	r17, 0xFF	; 255
    14c0:	a3 01       	movw	r20, r6
    14c2:	0e 94 55 0b 	call	0x16aa	; 0x16aa <__ultoa_invert>
    14c6:	88 2e       	mov	r8, r24
    14c8:	86 18       	sub	r8, r6
    14ca:	fb 2d       	mov	r31, r11
    14cc:	ff 77       	andi	r31, 0x7F	; 127
    14ce:	3f 2e       	mov	r3, r31
    14d0:	36 fe       	sbrs	r3, 6
    14d2:	0d c0       	rjmp	.+26     	; 0x14ee <vfprintf+0x2ca>
    14d4:	23 2d       	mov	r18, r3
    14d6:	2e 7f       	andi	r18, 0xFE	; 254
    14d8:	a2 2e       	mov	r10, r18
    14da:	89 14       	cp	r8, r9
    14dc:	58 f4       	brcc	.+22     	; 0x14f4 <vfprintf+0x2d0>
    14de:	34 fe       	sbrs	r3, 4
    14e0:	0b c0       	rjmp	.+22     	; 0x14f8 <vfprintf+0x2d4>
    14e2:	32 fc       	sbrc	r3, 2
    14e4:	09 c0       	rjmp	.+18     	; 0x14f8 <vfprintf+0x2d4>
    14e6:	83 2d       	mov	r24, r3
    14e8:	8e 7e       	andi	r24, 0xEE	; 238
    14ea:	a8 2e       	mov	r10, r24
    14ec:	05 c0       	rjmp	.+10     	; 0x14f8 <vfprintf+0x2d4>
    14ee:	b8 2c       	mov	r11, r8
    14f0:	a3 2c       	mov	r10, r3
    14f2:	03 c0       	rjmp	.+6      	; 0x14fa <vfprintf+0x2d6>
    14f4:	b8 2c       	mov	r11, r8
    14f6:	01 c0       	rjmp	.+2      	; 0x14fa <vfprintf+0x2d6>
    14f8:	b9 2c       	mov	r11, r9
    14fa:	a4 fe       	sbrs	r10, 4
    14fc:	0f c0       	rjmp	.+30     	; 0x151c <vfprintf+0x2f8>
    14fe:	fe 01       	movw	r30, r28
    1500:	e8 0d       	add	r30, r8
    1502:	f1 1d       	adc	r31, r1
    1504:	80 81       	ld	r24, Z
    1506:	80 33       	cpi	r24, 0x30	; 48
    1508:	21 f4       	brne	.+8      	; 0x1512 <vfprintf+0x2ee>
    150a:	9a 2d       	mov	r25, r10
    150c:	99 7e       	andi	r25, 0xE9	; 233
    150e:	a9 2e       	mov	r10, r25
    1510:	09 c0       	rjmp	.+18     	; 0x1524 <vfprintf+0x300>
    1512:	a2 fe       	sbrs	r10, 2
    1514:	06 c0       	rjmp	.+12     	; 0x1522 <vfprintf+0x2fe>
    1516:	b3 94       	inc	r11
    1518:	b3 94       	inc	r11
    151a:	04 c0       	rjmp	.+8      	; 0x1524 <vfprintf+0x300>
    151c:	8a 2d       	mov	r24, r10
    151e:	86 78       	andi	r24, 0x86	; 134
    1520:	09 f0       	breq	.+2      	; 0x1524 <vfprintf+0x300>
    1522:	b3 94       	inc	r11
    1524:	a3 fc       	sbrc	r10, 3
    1526:	11 c0       	rjmp	.+34     	; 0x154a <vfprintf+0x326>
    1528:	a0 fe       	sbrs	r10, 0
    152a:	06 c0       	rjmp	.+12     	; 0x1538 <vfprintf+0x314>
    152c:	b2 14       	cp	r11, r2
    152e:	88 f4       	brcc	.+34     	; 0x1552 <vfprintf+0x32e>
    1530:	28 0c       	add	r2, r8
    1532:	92 2c       	mov	r9, r2
    1534:	9b 18       	sub	r9, r11
    1536:	0e c0       	rjmp	.+28     	; 0x1554 <vfprintf+0x330>
    1538:	b2 14       	cp	r11, r2
    153a:	60 f4       	brcc	.+24     	; 0x1554 <vfprintf+0x330>
    153c:	b6 01       	movw	r22, r12
    153e:	80 e2       	ldi	r24, 0x20	; 32
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    1546:	b3 94       	inc	r11
    1548:	f7 cf       	rjmp	.-18     	; 0x1538 <vfprintf+0x314>
    154a:	b2 14       	cp	r11, r2
    154c:	18 f4       	brcc	.+6      	; 0x1554 <vfprintf+0x330>
    154e:	2b 18       	sub	r2, r11
    1550:	02 c0       	rjmp	.+4      	; 0x1556 <vfprintf+0x332>
    1552:	98 2c       	mov	r9, r8
    1554:	21 2c       	mov	r2, r1
    1556:	a4 fe       	sbrs	r10, 4
    1558:	10 c0       	rjmp	.+32     	; 0x157a <vfprintf+0x356>
    155a:	b6 01       	movw	r22, r12
    155c:	80 e3       	ldi	r24, 0x30	; 48
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    1564:	a2 fe       	sbrs	r10, 2
    1566:	17 c0       	rjmp	.+46     	; 0x1596 <vfprintf+0x372>
    1568:	a1 fc       	sbrc	r10, 1
    156a:	03 c0       	rjmp	.+6      	; 0x1572 <vfprintf+0x34e>
    156c:	88 e7       	ldi	r24, 0x78	; 120
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	02 c0       	rjmp	.+4      	; 0x1576 <vfprintf+0x352>
    1572:	88 e5       	ldi	r24, 0x58	; 88
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	b6 01       	movw	r22, r12
    1578:	0c c0       	rjmp	.+24     	; 0x1592 <vfprintf+0x36e>
    157a:	8a 2d       	mov	r24, r10
    157c:	86 78       	andi	r24, 0x86	; 134
    157e:	59 f0       	breq	.+22     	; 0x1596 <vfprintf+0x372>
    1580:	a1 fe       	sbrs	r10, 1
    1582:	02 c0       	rjmp	.+4      	; 0x1588 <vfprintf+0x364>
    1584:	8b e2       	ldi	r24, 0x2B	; 43
    1586:	01 c0       	rjmp	.+2      	; 0x158a <vfprintf+0x366>
    1588:	80 e2       	ldi	r24, 0x20	; 32
    158a:	a7 fc       	sbrc	r10, 7
    158c:	8d e2       	ldi	r24, 0x2D	; 45
    158e:	b6 01       	movw	r22, r12
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    1596:	89 14       	cp	r8, r9
    1598:	38 f4       	brcc	.+14     	; 0x15a8 <vfprintf+0x384>
    159a:	b6 01       	movw	r22, r12
    159c:	80 e3       	ldi	r24, 0x30	; 48
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    15a4:	9a 94       	dec	r9
    15a6:	f7 cf       	rjmp	.-18     	; 0x1596 <vfprintf+0x372>
    15a8:	8a 94       	dec	r8
    15aa:	f3 01       	movw	r30, r6
    15ac:	e8 0d       	add	r30, r8
    15ae:	f1 1d       	adc	r31, r1
    15b0:	80 81       	ld	r24, Z
    15b2:	b6 01       	movw	r22, r12
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    15ba:	81 10       	cpse	r8, r1
    15bc:	f5 cf       	rjmp	.-22     	; 0x15a8 <vfprintf+0x384>
    15be:	22 20       	and	r2, r2
    15c0:	09 f4       	brne	.+2      	; 0x15c4 <vfprintf+0x3a0>
    15c2:	42 ce       	rjmp	.-892    	; 0x1248 <vfprintf+0x24>
    15c4:	b6 01       	movw	r22, r12
    15c6:	80 e2       	ldi	r24, 0x20	; 32
    15c8:	90 e0       	ldi	r25, 0x00	; 0
    15ca:	0e 94 19 0b 	call	0x1632	; 0x1632 <fputc>
    15ce:	2a 94       	dec	r2
    15d0:	f6 cf       	rjmp	.-20     	; 0x15be <vfprintf+0x39a>
    15d2:	f6 01       	movw	r30, r12
    15d4:	86 81       	ldd	r24, Z+6	; 0x06
    15d6:	97 81       	ldd	r25, Z+7	; 0x07
    15d8:	02 c0       	rjmp	.+4      	; 0x15de <vfprintf+0x3ba>
    15da:	8f ef       	ldi	r24, 0xFF	; 255
    15dc:	9f ef       	ldi	r25, 0xFF	; 255
    15de:	2b 96       	adiw	r28, 0x0b	; 11
    15e0:	e2 e1       	ldi	r30, 0x12	; 18
    15e2:	0c 94 cf 0b 	jmp	0x179e	; 0x179e <__epilogue_restores__>

000015e6 <strnlen_P>:
    15e6:	fc 01       	movw	r30, r24
    15e8:	05 90       	lpm	r0, Z+
    15ea:	61 50       	subi	r22, 0x01	; 1
    15ec:	70 40       	sbci	r23, 0x00	; 0
    15ee:	01 10       	cpse	r0, r1
    15f0:	d8 f7       	brcc	.-10     	; 0x15e8 <strnlen_P+0x2>
    15f2:	80 95       	com	r24
    15f4:	90 95       	com	r25
    15f6:	8e 0f       	add	r24, r30
    15f8:	9f 1f       	adc	r25, r31
    15fa:	08 95       	ret

000015fc <strnlen>:
    15fc:	fc 01       	movw	r30, r24
    15fe:	61 50       	subi	r22, 0x01	; 1
    1600:	70 40       	sbci	r23, 0x00	; 0
    1602:	01 90       	ld	r0, Z+
    1604:	01 10       	cpse	r0, r1
    1606:	d8 f7       	brcc	.-10     	; 0x15fe <strnlen+0x2>
    1608:	80 95       	com	r24
    160a:	90 95       	com	r25
    160c:	8e 0f       	add	r24, r30
    160e:	9f 1f       	adc	r25, r31
    1610:	08 95       	ret

00001612 <strrev>:
    1612:	dc 01       	movw	r26, r24
    1614:	fc 01       	movw	r30, r24
    1616:	67 2f       	mov	r22, r23
    1618:	71 91       	ld	r23, Z+
    161a:	77 23       	and	r23, r23
    161c:	e1 f7       	brne	.-8      	; 0x1616 <strrev+0x4>
    161e:	32 97       	sbiw	r30, 0x02	; 2
    1620:	04 c0       	rjmp	.+8      	; 0x162a <strrev+0x18>
    1622:	7c 91       	ld	r23, X
    1624:	6d 93       	st	X+, r22
    1626:	70 83       	st	Z, r23
    1628:	62 91       	ld	r22, -Z
    162a:	ae 17       	cp	r26, r30
    162c:	bf 07       	cpc	r27, r31
    162e:	c8 f3       	brcs	.-14     	; 0x1622 <strrev+0x10>
    1630:	08 95       	ret

00001632 <fputc>:
    1632:	0f 93       	push	r16
    1634:	1f 93       	push	r17
    1636:	cf 93       	push	r28
    1638:	df 93       	push	r29
    163a:	fb 01       	movw	r30, r22
    163c:	23 81       	ldd	r18, Z+3	; 0x03
    163e:	21 fd       	sbrc	r18, 1
    1640:	03 c0       	rjmp	.+6      	; 0x1648 <fputc+0x16>
    1642:	8f ef       	ldi	r24, 0xFF	; 255
    1644:	9f ef       	ldi	r25, 0xFF	; 255
    1646:	2c c0       	rjmp	.+88     	; 0x16a0 <fputc+0x6e>
    1648:	22 ff       	sbrs	r18, 2
    164a:	16 c0       	rjmp	.+44     	; 0x1678 <fputc+0x46>
    164c:	46 81       	ldd	r20, Z+6	; 0x06
    164e:	57 81       	ldd	r21, Z+7	; 0x07
    1650:	24 81       	ldd	r18, Z+4	; 0x04
    1652:	35 81       	ldd	r19, Z+5	; 0x05
    1654:	42 17       	cp	r20, r18
    1656:	53 07       	cpc	r21, r19
    1658:	44 f4       	brge	.+16     	; 0x166a <fputc+0x38>
    165a:	a0 81       	ld	r26, Z
    165c:	b1 81       	ldd	r27, Z+1	; 0x01
    165e:	9d 01       	movw	r18, r26
    1660:	2f 5f       	subi	r18, 0xFF	; 255
    1662:	3f 4f       	sbci	r19, 0xFF	; 255
    1664:	31 83       	std	Z+1, r19	; 0x01
    1666:	20 83       	st	Z, r18
    1668:	8c 93       	st	X, r24
    166a:	26 81       	ldd	r18, Z+6	; 0x06
    166c:	37 81       	ldd	r19, Z+7	; 0x07
    166e:	2f 5f       	subi	r18, 0xFF	; 255
    1670:	3f 4f       	sbci	r19, 0xFF	; 255
    1672:	37 83       	std	Z+7, r19	; 0x07
    1674:	26 83       	std	Z+6, r18	; 0x06
    1676:	14 c0       	rjmp	.+40     	; 0x16a0 <fputc+0x6e>
    1678:	8b 01       	movw	r16, r22
    167a:	ec 01       	movw	r28, r24
    167c:	fb 01       	movw	r30, r22
    167e:	00 84       	ldd	r0, Z+8	; 0x08
    1680:	f1 85       	ldd	r31, Z+9	; 0x09
    1682:	e0 2d       	mov	r30, r0
    1684:	09 95       	icall
    1686:	89 2b       	or	r24, r25
    1688:	e1 f6       	brne	.-72     	; 0x1642 <fputc+0x10>
    168a:	d8 01       	movw	r26, r16
    168c:	16 96       	adiw	r26, 0x06	; 6
    168e:	8d 91       	ld	r24, X+
    1690:	9c 91       	ld	r25, X
    1692:	17 97       	sbiw	r26, 0x07	; 7
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	17 96       	adiw	r26, 0x07	; 7
    1698:	9c 93       	st	X, r25
    169a:	8e 93       	st	-X, r24
    169c:	16 97       	sbiw	r26, 0x06	; 6
    169e:	ce 01       	movw	r24, r28
    16a0:	df 91       	pop	r29
    16a2:	cf 91       	pop	r28
    16a4:	1f 91       	pop	r17
    16a6:	0f 91       	pop	r16
    16a8:	08 95       	ret

000016aa <__ultoa_invert>:
    16aa:	fa 01       	movw	r30, r20
    16ac:	aa 27       	eor	r26, r26
    16ae:	28 30       	cpi	r18, 0x08	; 8
    16b0:	51 f1       	breq	.+84     	; 0x1706 <__ultoa_invert+0x5c>
    16b2:	20 31       	cpi	r18, 0x10	; 16
    16b4:	81 f1       	breq	.+96     	; 0x1716 <__ultoa_invert+0x6c>
    16b6:	e8 94       	clt
    16b8:	6f 93       	push	r22
    16ba:	6e 7f       	andi	r22, 0xFE	; 254
    16bc:	6e 5f       	subi	r22, 0xFE	; 254
    16be:	7f 4f       	sbci	r23, 0xFF	; 255
    16c0:	8f 4f       	sbci	r24, 0xFF	; 255
    16c2:	9f 4f       	sbci	r25, 0xFF	; 255
    16c4:	af 4f       	sbci	r26, 0xFF	; 255
    16c6:	b1 e0       	ldi	r27, 0x01	; 1
    16c8:	3e d0       	rcall	.+124    	; 0x1746 <__ultoa_invert+0x9c>
    16ca:	b4 e0       	ldi	r27, 0x04	; 4
    16cc:	3c d0       	rcall	.+120    	; 0x1746 <__ultoa_invert+0x9c>
    16ce:	67 0f       	add	r22, r23
    16d0:	78 1f       	adc	r23, r24
    16d2:	89 1f       	adc	r24, r25
    16d4:	9a 1f       	adc	r25, r26
    16d6:	a1 1d       	adc	r26, r1
    16d8:	68 0f       	add	r22, r24
    16da:	79 1f       	adc	r23, r25
    16dc:	8a 1f       	adc	r24, r26
    16de:	91 1d       	adc	r25, r1
    16e0:	a1 1d       	adc	r26, r1
    16e2:	6a 0f       	add	r22, r26
    16e4:	71 1d       	adc	r23, r1
    16e6:	81 1d       	adc	r24, r1
    16e8:	91 1d       	adc	r25, r1
    16ea:	a1 1d       	adc	r26, r1
    16ec:	20 d0       	rcall	.+64     	; 0x172e <__ultoa_invert+0x84>
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <__ultoa_invert+0x48>
    16f0:	68 94       	set
    16f2:	3f 91       	pop	r19
    16f4:	2a e0       	ldi	r18, 0x0A	; 10
    16f6:	26 9f       	mul	r18, r22
    16f8:	11 24       	eor	r1, r1
    16fa:	30 19       	sub	r19, r0
    16fc:	30 5d       	subi	r19, 0xD0	; 208
    16fe:	31 93       	st	Z+, r19
    1700:	de f6       	brtc	.-74     	; 0x16b8 <__ultoa_invert+0xe>
    1702:	cf 01       	movw	r24, r30
    1704:	08 95       	ret
    1706:	46 2f       	mov	r20, r22
    1708:	47 70       	andi	r20, 0x07	; 7
    170a:	40 5d       	subi	r20, 0xD0	; 208
    170c:	41 93       	st	Z+, r20
    170e:	b3 e0       	ldi	r27, 0x03	; 3
    1710:	0f d0       	rcall	.+30     	; 0x1730 <__ultoa_invert+0x86>
    1712:	c9 f7       	brne	.-14     	; 0x1706 <__ultoa_invert+0x5c>
    1714:	f6 cf       	rjmp	.-20     	; 0x1702 <__ultoa_invert+0x58>
    1716:	46 2f       	mov	r20, r22
    1718:	4f 70       	andi	r20, 0x0F	; 15
    171a:	40 5d       	subi	r20, 0xD0	; 208
    171c:	4a 33       	cpi	r20, 0x3A	; 58
    171e:	18 f0       	brcs	.+6      	; 0x1726 <__ultoa_invert+0x7c>
    1720:	49 5d       	subi	r20, 0xD9	; 217
    1722:	31 fd       	sbrc	r19, 1
    1724:	40 52       	subi	r20, 0x20	; 32
    1726:	41 93       	st	Z+, r20
    1728:	02 d0       	rcall	.+4      	; 0x172e <__ultoa_invert+0x84>
    172a:	a9 f7       	brne	.-22     	; 0x1716 <__ultoa_invert+0x6c>
    172c:	ea cf       	rjmp	.-44     	; 0x1702 <__ultoa_invert+0x58>
    172e:	b4 e0       	ldi	r27, 0x04	; 4
    1730:	a6 95       	lsr	r26
    1732:	97 95       	ror	r25
    1734:	87 95       	ror	r24
    1736:	77 95       	ror	r23
    1738:	67 95       	ror	r22
    173a:	ba 95       	dec	r27
    173c:	c9 f7       	brne	.-14     	; 0x1730 <__ultoa_invert+0x86>
    173e:	00 97       	sbiw	r24, 0x00	; 0
    1740:	61 05       	cpc	r22, r1
    1742:	71 05       	cpc	r23, r1
    1744:	08 95       	ret
    1746:	9b 01       	movw	r18, r22
    1748:	ac 01       	movw	r20, r24
    174a:	0a 2e       	mov	r0, r26
    174c:	06 94       	lsr	r0
    174e:	57 95       	ror	r21
    1750:	47 95       	ror	r20
    1752:	37 95       	ror	r19
    1754:	27 95       	ror	r18
    1756:	ba 95       	dec	r27
    1758:	c9 f7       	brne	.-14     	; 0x174c <__ultoa_invert+0xa2>
    175a:	62 0f       	add	r22, r18
    175c:	73 1f       	adc	r23, r19
    175e:	84 1f       	adc	r24, r20
    1760:	95 1f       	adc	r25, r21
    1762:	a0 1d       	adc	r26, r0
    1764:	08 95       	ret

00001766 <__prologue_saves__>:
    1766:	2f 92       	push	r2
    1768:	3f 92       	push	r3
    176a:	4f 92       	push	r4
    176c:	5f 92       	push	r5
    176e:	6f 92       	push	r6
    1770:	7f 92       	push	r7
    1772:	8f 92       	push	r8
    1774:	9f 92       	push	r9
    1776:	af 92       	push	r10
    1778:	bf 92       	push	r11
    177a:	cf 92       	push	r12
    177c:	df 92       	push	r13
    177e:	ef 92       	push	r14
    1780:	ff 92       	push	r15
    1782:	0f 93       	push	r16
    1784:	1f 93       	push	r17
    1786:	cf 93       	push	r28
    1788:	df 93       	push	r29
    178a:	cd b7       	in	r28, 0x3d	; 61
    178c:	de b7       	in	r29, 0x3e	; 62
    178e:	ca 1b       	sub	r28, r26
    1790:	db 0b       	sbc	r29, r27
    1792:	0f b6       	in	r0, 0x3f	; 63
    1794:	f8 94       	cli
    1796:	de bf       	out	0x3e, r29	; 62
    1798:	0f be       	out	0x3f, r0	; 63
    179a:	cd bf       	out	0x3d, r28	; 61
    179c:	09 94       	ijmp

0000179e <__epilogue_restores__>:
    179e:	2a 88       	ldd	r2, Y+18	; 0x12
    17a0:	39 88       	ldd	r3, Y+17	; 0x11
    17a2:	48 88       	ldd	r4, Y+16	; 0x10
    17a4:	5f 84       	ldd	r5, Y+15	; 0x0f
    17a6:	6e 84       	ldd	r6, Y+14	; 0x0e
    17a8:	7d 84       	ldd	r7, Y+13	; 0x0d
    17aa:	8c 84       	ldd	r8, Y+12	; 0x0c
    17ac:	9b 84       	ldd	r9, Y+11	; 0x0b
    17ae:	aa 84       	ldd	r10, Y+10	; 0x0a
    17b0:	b9 84       	ldd	r11, Y+9	; 0x09
    17b2:	c8 84       	ldd	r12, Y+8	; 0x08
    17b4:	df 80       	ldd	r13, Y+7	; 0x07
    17b6:	ee 80       	ldd	r14, Y+6	; 0x06
    17b8:	fd 80       	ldd	r15, Y+5	; 0x05
    17ba:	0c 81       	ldd	r16, Y+4	; 0x04
    17bc:	1b 81       	ldd	r17, Y+3	; 0x03
    17be:	aa 81       	ldd	r26, Y+2	; 0x02
    17c0:	b9 81       	ldd	r27, Y+1	; 0x01
    17c2:	ce 0f       	add	r28, r30
    17c4:	d1 1d       	adc	r29, r1
    17c6:	0f b6       	in	r0, 0x3f	; 63
    17c8:	f8 94       	cli
    17ca:	de bf       	out	0x3e, r29	; 62
    17cc:	0f be       	out	0x3f, r0	; 63
    17ce:	cd bf       	out	0x3d, r28	; 61
    17d0:	ed 01       	movw	r28, r26
    17d2:	08 95       	ret

000017d4 <_exit>:
    17d4:	f8 94       	cli

000017d6 <__stop_program>:
    17d6:	ff cf       	rjmp	.-2      	; 0x17d6 <__stop_program>
