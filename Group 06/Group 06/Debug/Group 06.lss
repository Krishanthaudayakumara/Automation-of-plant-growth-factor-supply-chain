
Group 06.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005e  00800100  00001596  0000162a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001596  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080015e  0080015e  00001688  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001688  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000146e  00000000  00000000  000017b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a57  00000000  00000000  00002c1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000007e9  00000000  00000000  00003675  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00003e60  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055d  00000000  00000000  00004024  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bb7  00000000  00000000  00004581  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00005138  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 00 	jmp	0x10e	; 0x10e <__ctors_end>
       4:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       8:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
       c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      10:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      14:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      18:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      1c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      20:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      24:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      28:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      2c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      30:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      34:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      38:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      3c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      40:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      44:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      4c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      50:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      54:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      58:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      5c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      60:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      64:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      68:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      6c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      70:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      74:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      78:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      7c:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      80:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      84:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      88:	0c 94 a4 00 	jmp	0x148	; 0x148 <__bad_interrupt>
      8c:	07 63       	ori	r16, 0x37	; 55
      8e:	42 36       	cpi	r20, 0x62	; 98
      90:	b7 9b       	sbis	0x16, 7	; 22
      92:	d8 a7       	std	Y+40, r29	; 0x28
      94:	1a 39       	cpi	r17, 0x9A	; 154
      96:	68 56       	subi	r22, 0x68	; 104
      98:	18 ae       	std	Y+56, r1	; 0x38
      9a:	ba ab       	std	Y+50, r27	; 0x32
      9c:	55 8c       	ldd	r5, Z+29	; 0x1d
      9e:	1d 3c       	cpi	r17, 0xCD	; 205
      a0:	b7 cc       	rjmp	.-1682   	; 0xfffffa10 <__eeprom_end+0xff7efa10>
      a2:	57 63       	ori	r21, 0x37	; 55
      a4:	bd 6d       	ori	r27, 0xDD	; 221
      a6:	ed fd       	.word	0xfded	; ????
      a8:	75 3e       	cpi	r23, 0xE5	; 229
      aa:	f6 17       	cp	r31, r22
      ac:	72 31       	cpi	r23, 0x12	; 18
      ae:	bf 00       	.word	0x00bf	; ????
      b0:	00 00       	nop
      b2:	80 3f       	cpi	r24, 0xF0	; 240
      b4:	08 00       	.word	0x0008	; ????
      b6:	00 00       	nop
      b8:	be 92       	st	-X, r11
      ba:	24 49       	sbci	r18, 0x94	; 148
      bc:	12 3e       	cpi	r17, 0xE2	; 226
      be:	ab aa       	std	Y+51, r10	; 0x33
      c0:	aa 2a       	or	r10, r26
      c2:	be cd       	rjmp	.-1156   	; 0xfffffc40 <__eeprom_end+0xff7efc40>
      c4:	cc cc       	rjmp	.-1640   	; 0xfffffa5e <__eeprom_end+0xff7efa5e>
      c6:	4c 3e       	cpi	r20, 0xEC	; 236
      c8:	00 00       	nop
      ca:	00 80       	ld	r0, Z
      cc:	be ab       	std	Y+54, r27	; 0x36
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	aa 3e       	cpi	r26, 0xEA	; 234
      d2:	00 00       	nop
      d4:	00 00       	nop
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	00 00       	nop
      de:	00 00       	nop
      e0:	00 08       	sbc	r0, r0
      e2:	41 78       	andi	r20, 0x81	; 129
      e4:	d3 bb       	out	0x13, r29	; 19
      e6:	43 87       	std	Z+11, r20	; 0x0b
      e8:	d1 13       	cpse	r29, r17
      ea:	3d 19       	sub	r19, r13
      ec:	0e 3c       	cpi	r16, 0xCE	; 206
      ee:	c3 bd       	out	0x23, r28	; 35
      f0:	42 82       	std	Z+2, r4	; 0x02
      f2:	ad 2b       	or	r26, r29
      f4:	3e 68       	ori	r19, 0x8E	; 142
      f6:	ec 82       	std	Y+4, r14	; 0x04
      f8:	76 be       	out	0x36, r7	; 54
      fa:	d9 8f       	std	Y+25, r29	; 0x19
      fc:	e1 a9       	ldd	r30, Z+49	; 0x31
      fe:	3e 4c       	sbci	r19, 0xCE	; 206
     100:	80 ef       	ldi	r24, 0xF0	; 240
     102:	ff be       	out	0x3f, r15	; 63
     104:	01 c4       	rjmp	.+2050   	; 0x908 <__fixunssfsi+0x4a>
     106:	ff 7f       	andi	r31, 0xFF	; 255
     108:	3f 00       	.word	0x003f	; ????
     10a:	00 00       	nop
	...

0000010e <__ctors_end>:
     10e:	11 24       	eor	r1, r1
     110:	1f be       	out	0x3f, r1	; 63
     112:	cf ef       	ldi	r28, 0xFF	; 255
     114:	d0 e1       	ldi	r29, 0x10	; 16
     116:	de bf       	out	0x3e, r29	; 62
     118:	cd bf       	out	0x3d, r28	; 61

0000011a <__do_copy_data>:
     11a:	11 e0       	ldi	r17, 0x01	; 1
     11c:	a0 e0       	ldi	r26, 0x00	; 0
     11e:	b1 e0       	ldi	r27, 0x01	; 1
     120:	e6 e9       	ldi	r30, 0x96	; 150
     122:	f5 e1       	ldi	r31, 0x15	; 21
     124:	02 c0       	rjmp	.+4      	; 0x12a <__do_copy_data+0x10>
     126:	05 90       	lpm	r0, Z+
     128:	0d 92       	st	X+, r0
     12a:	ae 35       	cpi	r26, 0x5E	; 94
     12c:	b1 07       	cpc	r27, r17
     12e:	d9 f7       	brne	.-10     	; 0x126 <__do_copy_data+0xc>

00000130 <__do_clear_bss>:
     130:	21 e0       	ldi	r18, 0x01	; 1
     132:	ae e5       	ldi	r26, 0x5E	; 94
     134:	b1 e0       	ldi	r27, 0x01	; 1
     136:	01 c0       	rjmp	.+2      	; 0x13a <.do_clear_bss_start>

00000138 <.do_clear_bss_loop>:
     138:	1d 92       	st	X+, r1

0000013a <.do_clear_bss_start>:
     13a:	a3 36       	cpi	r26, 0x63	; 99
     13c:	b2 07       	cpc	r27, r18
     13e:	e1 f7       	brne	.-8      	; 0x138 <.do_clear_bss_loop>
     140:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <main>
     144:	0c 94 c9 0a 	jmp	0x1592	; 0x1592 <_exit>

00000148 <__bad_interrupt>:
     148:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014c <lcdcmd>:
}


void lcdcmd(unsigned char x)
{
	lcdport=x;
     14c:	8b bb       	out	0x1b, r24	; 27

	signal=(0<<rs)|(0<<rw)|(1<<en);
     14e:	84 e0       	ldi	r24, 0x04	; 4
     150:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     152:	89 ef       	ldi	r24, 0xF9	; 249
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	01 97       	sbiw	r24, 0x01	; 1
     158:	f1 f7       	brne	.-4      	; 0x156 <lcdcmd+0xa>
     15a:	00 c0       	rjmp	.+0      	; 0x15c <lcdcmd+0x10>
     15c:	00 00       	nop

	_delay_ms(1);

	signal=(0<<rs)|(0<<rw)|(0<<en);
     15e:	18 ba       	out	0x18, r1	; 24
     160:	83 ed       	ldi	r24, 0xD3	; 211
     162:	90 e3       	ldi	r25, 0x30	; 48
     164:	01 97       	sbiw	r24, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcdcmd+0x18>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcdcmd+0x1e>
     16a:	00 00       	nop
     16c:	08 95       	ret

0000016e <lcdint>:



void lcdint()
{
	lcdcmd(0x38);
     16e:	88 e3       	ldi	r24, 0x38	; 56
     170:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     174:	89 ef       	ldi	r24, 0xF9	; 249
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	01 97       	sbiw	r24, 0x01	; 1
     17a:	f1 f7       	brne	.-4      	; 0x178 <lcdint+0xa>
     17c:	00 c0       	rjmp	.+0      	; 0x17e <lcdint+0x10>
     17e:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x01);
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     186:	89 ef       	ldi	r24, 0xF9	; 249
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcdint+0x1c>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcdint+0x22>
     190:	00 00       	nop

	_delay_ms(1);

	lcdcmd(0x0E);
     192:	8e e0       	ldi	r24, 0x0E	; 14
     194:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     198:	89 ef       	ldi	r24, 0xF9	; 249
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	01 97       	sbiw	r24, 0x01	; 1
     19e:	f1 f7       	brne	.-4      	; 0x19c <lcdint+0x2e>
     1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <lcdint+0x34>
     1a2:	00 00       	nop
     1a4:	08 95       	ret

000001a6 <lcddata>:
	_delay_ms(50);
}

void lcddata(unsigned char data)
{
	lcdport= data;
     1a6:	8b bb       	out	0x1b, r24	; 27

	signal= (1<<rs)|(0<<rw)|(1<<en);
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	88 bb       	out	0x18, r24	; 24
     1ac:	89 ef       	ldi	r24, 0xF9	; 249
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	01 97       	sbiw	r24, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcddata+0xa>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <lcddata+0x10>
     1b6:	00 00       	nop

	_delay_ms(1);

	signal= (1<<rs)|(0<<rw)|(0<<en);
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	88 bb       	out	0x18, r24	; 24
     1bc:	83 ed       	ldi	r24, 0xD3	; 211
     1be:	90 e3       	ldi	r25, 0x30	; 48
     1c0:	01 97       	sbiw	r24, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <lcddata+0x1a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <lcddata+0x20>
     1c6:	00 00       	nop
     1c8:	08 95       	ret

000001ca <lcd_string>:
	_delay_ms(50);
}


void lcd_string(const unsigned char *str, unsigned char length)
{
     1ca:	ef 92       	push	r14
     1cc:	ff 92       	push	r15
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	7c 01       	movw	r14, r24
     1d6:	16 2f       	mov	r17, r22
	for(int i=0; i<length; i++)
     1d8:	c0 e0       	ldi	r28, 0x00	; 0
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	07 c0       	rjmp	.+14     	; 0x1ec <lcd_string+0x22>
	{
		lcddata(str[i]);
     1de:	f7 01       	movw	r30, r14
     1e0:	ec 0f       	add	r30, r28
     1e2:	fd 1f       	adc	r31, r29
     1e4:	80 81       	ld	r24, Z
     1e6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
}


void lcd_string(const unsigned char *str, unsigned char length)
{
	for(int i=0; i<length; i++)
     1ea:	21 96       	adiw	r28, 0x01	; 1
     1ec:	81 2f       	mov	r24, r17
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	c8 17       	cp	r28, r24
     1f2:	d9 07       	cpc	r29, r25
     1f4:	a4 f3       	brlt	.-24     	; 0x1de <lcd_string+0x14>
	{
		lcddata(str[i]);
	}
}
     1f6:	df 91       	pop	r29
     1f8:	cf 91       	pop	r28
     1fa:	1f 91       	pop	r17
     1fc:	ff 90       	pop	r15
     1fe:	ef 90       	pop	r14
     200:	08 95       	ret

00000202 <charToInt>:

int charToInt(char c){
	int num = 0;
	num = c - '0';
     202:	90 e0       	ldi	r25, 0x00	; 0

	return num;
}
     204:	c0 97       	sbiw	r24, 0x30	; 48
     206:	08 95       	ret

00000208 <keycheck>:
//scankey

char keycheck()

{
	PORTD=0b11101111;
     208:	8f ee       	ldi	r24, 0xEF	; 239
     20a:	82 bb       	out	0x12, r24	; 18
     20c:	83 ec       	ldi	r24, 0xC3	; 195
     20e:	99 e0       	ldi	r25, 0x09	; 9
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	f1 f7       	brne	.-4      	; 0x210 <keycheck+0x8>
     214:	00 c0       	rjmp	.+0      	; 0x216 <keycheck+0xe>
     216:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     218:	80 9b       	sbis	0x10, 0	; 16
     21a:	30 c0       	rjmp	.+96     	; 0x27c <keycheck+0x74>
	{
		return '1';
	}
	if((PIND&0b00000010)==0)
     21c:	81 9b       	sbis	0x10, 1	; 16
     21e:	30 c0       	rjmp	.+96     	; 0x280 <keycheck+0x78>
	{
		return '2';
	}
	if((PIND&0b00000100)==0)
     220:	82 9b       	sbis	0x10, 2	; 16
     222:	30 c0       	rjmp	.+96     	; 0x284 <keycheck+0x7c>
	{
		return '3';
	}

	PORTD=0b11011111;
     224:	8f ed       	ldi	r24, 0xDF	; 223
     226:	82 bb       	out	0x12, r24	; 18
     228:	83 ec       	ldi	r24, 0xC3	; 195
     22a:	99 e0       	ldi	r25, 0x09	; 9
     22c:	01 97       	sbiw	r24, 0x01	; 1
     22e:	f1 f7       	brne	.-4      	; 0x22c <keycheck+0x24>
     230:	00 c0       	rjmp	.+0      	; 0x232 <keycheck+0x2a>
     232:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     234:	80 9b       	sbis	0x10, 0	; 16
     236:	28 c0       	rjmp	.+80     	; 0x288 <keycheck+0x80>
	{
		return '4';
	}

	if((PIND&0b00000010)==0)
     238:	81 9b       	sbis	0x10, 1	; 16
     23a:	28 c0       	rjmp	.+80     	; 0x28c <keycheck+0x84>
	{
		return '5';
	}

	if((PIND&0b00000100)==0)
     23c:	82 9b       	sbis	0x10, 2	; 16
     23e:	28 c0       	rjmp	.+80     	; 0x290 <keycheck+0x88>
	{
		return '6';
	}

	PORTD=0b10111111;
     240:	8f eb       	ldi	r24, 0xBF	; 191
     242:	82 bb       	out	0x12, r24	; 18
     244:	83 ec       	ldi	r24, 0xC3	; 195
     246:	99 e0       	ldi	r25, 0x09	; 9
     248:	01 97       	sbiw	r24, 0x01	; 1
     24a:	f1 f7       	brne	.-4      	; 0x248 <keycheck+0x40>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <keycheck+0x46>
     24e:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     250:	80 9b       	sbis	0x10, 0	; 16
     252:	20 c0       	rjmp	.+64     	; 0x294 <keycheck+0x8c>
	{
		return '7';
	}

	if((PIND&0b00000010)==0)
     254:	81 9b       	sbis	0x10, 1	; 16
     256:	20 c0       	rjmp	.+64     	; 0x298 <keycheck+0x90>
	{
		return '8';
	}

	if((PIND&0b00000100)==0)
     258:	82 9b       	sbis	0x10, 2	; 16
     25a:	20 c0       	rjmp	.+64     	; 0x29c <keycheck+0x94>
	{
		return '9';
	}

	PORTD=0b01111111;
     25c:	8f e7       	ldi	r24, 0x7F	; 127
     25e:	82 bb       	out	0x12, r24	; 18
     260:	83 ec       	ldi	r24, 0xC3	; 195
     262:	99 e0       	ldi	r25, 0x09	; 9
     264:	01 97       	sbiw	r24, 0x01	; 1
     266:	f1 f7       	brne	.-4      	; 0x264 <keycheck+0x5c>
     268:	00 c0       	rjmp	.+0      	; 0x26a <keycheck+0x62>
     26a:	00 00       	nop

	_delay_ms(10);

	if((PIND&0b00000001)==0)
     26c:	80 9b       	sbis	0x10, 0	; 16
     26e:	18 c0       	rjmp	.+48     	; 0x2a0 <keycheck+0x98>
	{
		return '*';
	}

	if((PIND&0b00000010)==0)
     270:	81 9b       	sbis	0x10, 1	; 16
     272:	18 c0       	rjmp	.+48     	; 0x2a4 <keycheck+0x9c>
	{
		return '0';
	}

	if((PIND&0b00000100)==0)
     274:	82 99       	sbic	0x10, 2	; 16
     276:	18 c0       	rjmp	.+48     	; 0x2a8 <keycheck+0xa0>
	{
		return '#';
     278:	83 e2       	ldi	r24, 0x23	; 35
     27a:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '1';
     27c:	81 e3       	ldi	r24, 0x31	; 49
     27e:	08 95       	ret
	}
	if((PIND&0b00000010)==0)
	{
		return '2';
     280:	82 e3       	ldi	r24, 0x32	; 50
     282:	08 95       	ret
	}
	if((PIND&0b00000100)==0)
	{
		return '3';
     284:	83 e3       	ldi	r24, 0x33	; 51
     286:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '4';
     288:	84 e3       	ldi	r24, 0x34	; 52
     28a:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '5';
     28c:	85 e3       	ldi	r24, 0x35	; 53
     28e:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '6';
     290:	86 e3       	ldi	r24, 0x36	; 54
     292:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '7';
     294:	87 e3       	ldi	r24, 0x37	; 55
     296:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '8';
     298:	88 e3       	ldi	r24, 0x38	; 56
     29a:	08 95       	ret
	}

	if((PIND&0b00000100)==0)
	{
		return '9';
     29c:	89 e3       	ldi	r24, 0x39	; 57
     29e:	08 95       	ret

	_delay_ms(10);

	if((PIND&0b00000001)==0)
	{
		return '*';
     2a0:	8a e2       	ldi	r24, 0x2A	; 42
     2a2:	08 95       	ret
	}

	if((PIND&0b00000010)==0)
	{
		return '0';
     2a4:	80 e3       	ldi	r24, 0x30	; 48
     2a6:	08 95       	ret
	if((PIND&0b00000100)==0)
	{
		return '#';
	}

	return 'a';
     2a8:	81 e6       	ldi	r24, 0x61	; 97

}
     2aa:	08 95       	ret

000002ac <scankey>:

char scankey()
{
	char key='a';
     2ac:	81 e6       	ldi	r24, 0x61	; 97

	while(key=='a')
     2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <scankey+0x8>
	{
		key=keycheck();
     2b0:	0e 94 04 01 	call	0x208	; 0x208 <keycheck>

char scankey()
{
	char key='a';

	while(key=='a')
     2b4:	81 36       	cpi	r24, 0x61	; 97
     2b6:	e1 f3       	breq	.-8      	; 0x2b0 <scankey+0x4>
	{
		key=keycheck();
	}
	return key;
}
     2b8:	08 95       	ret

000002ba <HCSR04Init>:

void HCSR04Init()
{
	
	
	US_DDR|=(1<<US_TRIG_POS);
     2ba:	84 b3       	in	r24, 0x14	; 20
     2bc:	81 60       	ori	r24, 0x01	; 1
     2be:	84 bb       	out	0x14, r24	; 20
     2c0:	08 95       	ret

000002c2 <HCSR04Trigger>:
}

void HCSR04Trigger()
{
	
	US_PORT|=(1<<US_TRIG_POS);	//high
     2c2:	85 b3       	in	r24, 0x15	; 21
     2c4:	81 60       	ori	r24, 0x01	; 1
     2c6:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2c8:	85 e0       	ldi	r24, 0x05	; 5
     2ca:	8a 95       	dec	r24
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <HCSR04Trigger+0x8>
	
	_delay_us(15);				//wait 15uS
	
	US_PORT&=~(1<<US_TRIG_POS);	//low
     2ce:	85 b3       	in	r24, 0x15	; 21
     2d0:	8e 7f       	andi	r24, 0xFE	; 254
     2d2:	85 bb       	out	0x15, r24	; 21
     2d4:	08 95       	ret

000002d6 <GetPulseWidth>:
}

uint32_t GetPulseWidth()
{
     2d6:	8f 92       	push	r8
     2d8:	9f 92       	push	r9
     2da:	af 92       	push	r10
     2dc:	bf 92       	push	r11
     2de:	cf 92       	push	r12
     2e0:	df 92       	push	r13
     2e2:	ef 92       	push	r14
     2e4:	ff 92       	push	r15
     2e6:	0f 93       	push	r16
     2e8:	1f 93       	push	r17
     2ea:	cf 93       	push	r28
     2ec:	df 93       	push	r29
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     2ee:	d0 e0       	ldi	r29, 0x00	; 0
     2f0:	c0 e0       	ldi	r28, 0x00	; 0
     2f2:	b0 e0       	ldi	r27, 0x00	; 0
     2f4:	a0 e0       	ldi	r26, 0x00	; 0
     2f6:	f0 e0       	ldi	r31, 0x00	; 0
     2f8:	f1 2c       	mov	r15, r1
     2fa:	00 e0       	ldi	r16, 0x00	; 0
     2fc:	10 e0       	ldi	r17, 0x00	; 0
     2fe:	15 c0       	rjmp	.+42     	; 0x32a <GetPulseWidth+0x54>
	{
		if(!(US_PIN & (1<<US_ECHO_POS)))
     300:	99 99       	sbic	0x13, 1	; 19
     302:	25 c0       	rjmp	.+74     	; 0x34e <GetPulseWidth+0x78>
uint32_t GetPulseWidth()
{
	
	uint64_t i,result;

	for(i=0;i<600000;i++)
     304:	2d 2f       	mov	r18, r29
     306:	3c 2f       	mov	r19, r28
     308:	4b 2f       	mov	r20, r27
     30a:	5a 2f       	mov	r21, r26
     30c:	6f 2f       	mov	r22, r31
     30e:	7f 2d       	mov	r23, r15
     310:	80 2f       	mov	r24, r16
     312:	91 2f       	mov	r25, r17
     314:	a1 e0       	ldi	r26, 0x01	; 1
     316:	0e 94 9e 07 	call	0xf3c	; 0xf3c <__adddi3_s8>
     31a:	d2 2f       	mov	r29, r18
     31c:	c3 2f       	mov	r28, r19
     31e:	b4 2f       	mov	r27, r20
     320:	a5 2f       	mov	r26, r21
     322:	f6 2f       	mov	r31, r22
     324:	f7 2e       	mov	r15, r23
     326:	08 2f       	mov	r16, r24
     328:	19 2f       	mov	r17, r25
     32a:	2d 2f       	mov	r18, r29
     32c:	3c 2f       	mov	r19, r28
     32e:	4b 2f       	mov	r20, r27
     330:	5a 2f       	mov	r21, r26
     332:	6f 2f       	mov	r22, r31
     334:	7f 2d       	mov	r23, r15
     336:	80 2f       	mov	r24, r16
     338:	91 2f       	mov	r25, r17
     33a:	2f 3b       	cpi	r18, 0xBF	; 191
     33c:	37 42       	sbci	r19, 0x27	; 39
     33e:	49 40       	sbci	r20, 0x09	; 9
     340:	51 05       	cpc	r21, r1
     342:	61 05       	cpc	r22, r1
     344:	71 05       	cpc	r23, r1
     346:	81 05       	cpc	r24, r1
     348:	91 05       	cpc	r25, r1
     34a:	d1 f2       	breq	.-76     	; 0x300 <GetPulseWidth+0x2a>
     34c:	c8 f2       	brcs	.-78     	; 0x300 <GetPulseWidth+0x2a>
		continue;
		else
		break;
	}

	if(i==600000)
     34e:	2d 2f       	mov	r18, r29
     350:	3c 2f       	mov	r19, r28
     352:	4b 2f       	mov	r20, r27
     354:	5a 2f       	mov	r21, r26
     356:	6f 2f       	mov	r22, r31
     358:	7f 2d       	mov	r23, r15
     35a:	80 2f       	mov	r24, r16
     35c:	91 2f       	mov	r25, r17
     35e:	20 3c       	cpi	r18, 0xC0	; 192
     360:	37 42       	sbci	r19, 0x27	; 39
     362:	49 40       	sbci	r20, 0x09	; 9
     364:	51 05       	cpc	r21, r1
     366:	61 05       	cpc	r22, r1
     368:	71 05       	cpc	r23, r1
     36a:	81 05       	cpc	r24, r1
     36c:	91 05       	cpc	r25, r1
     36e:	09 f4       	brne	.+2      	; 0x372 <GetPulseWidth+0x9c>
     370:	69 c0       	rjmp	.+210    	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
	return US_ERROR;
	
	TCCR1A=0X00;
     372:	1f bc       	out	0x2f, r1	; 47
	TCCR1B=(1<<CS11);
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	8e bd       	out	0x2e, r24	; 46
	TCNT1=0x00;
     378:	1d bc       	out	0x2d, r1	; 45
     37a:	1c bc       	out	0x2c, r1	; 44

	
	for(i=0;i<600000;i++)
     37c:	d0 e0       	ldi	r29, 0x00	; 0
     37e:	c0 e0       	ldi	r28, 0x00	; 0
     380:	b0 e0       	ldi	r27, 0x00	; 0
     382:	a0 e0       	ldi	r26, 0x00	; 0
     384:	f0 e0       	ldi	r31, 0x00	; 0
     386:	f1 2c       	mov	r15, r1
     388:	00 e0       	ldi	r16, 0x00	; 0
     38a:	10 e0       	ldi	r17, 0x00	; 0
     38c:	1a c0       	rjmp	.+52     	; 0x3c2 <GetPulseWidth+0xec>
	{
		if(US_PIN & (1<<US_ECHO_POS))
     38e:	99 9b       	sbis	0x13, 1	; 19
     390:	2a c0       	rjmp	.+84     	; 0x3e6 <GetPulseWidth+0x110>
		{
			if(TCNT1 > 60000) break; else continue;
     392:	8c b5       	in	r24, 0x2c	; 44
     394:	9d b5       	in	r25, 0x2d	; 45
     396:	81 36       	cpi	r24, 0x61	; 97
     398:	9a 4e       	sbci	r25, 0xEA	; 234
     39a:	28 f5       	brcc	.+74     	; 0x3e6 <GetPulseWidth+0x110>
	TCCR1A=0X00;
	TCCR1B=(1<<CS11);
	TCNT1=0x00;

	
	for(i=0;i<600000;i++)
     39c:	2d 2f       	mov	r18, r29
     39e:	3c 2f       	mov	r19, r28
     3a0:	4b 2f       	mov	r20, r27
     3a2:	5a 2f       	mov	r21, r26
     3a4:	6f 2f       	mov	r22, r31
     3a6:	7f 2d       	mov	r23, r15
     3a8:	80 2f       	mov	r24, r16
     3aa:	91 2f       	mov	r25, r17
     3ac:	a1 e0       	ldi	r26, 0x01	; 1
     3ae:	0e 94 9e 07 	call	0xf3c	; 0xf3c <__adddi3_s8>
     3b2:	d2 2f       	mov	r29, r18
     3b4:	c3 2f       	mov	r28, r19
     3b6:	b4 2f       	mov	r27, r20
     3b8:	a5 2f       	mov	r26, r21
     3ba:	f6 2f       	mov	r31, r22
     3bc:	f7 2e       	mov	r15, r23
     3be:	08 2f       	mov	r16, r24
     3c0:	19 2f       	mov	r17, r25
     3c2:	2d 2f       	mov	r18, r29
     3c4:	3c 2f       	mov	r19, r28
     3c6:	4b 2f       	mov	r20, r27
     3c8:	5a 2f       	mov	r21, r26
     3ca:	6f 2f       	mov	r22, r31
     3cc:	7f 2d       	mov	r23, r15
     3ce:	80 2f       	mov	r24, r16
     3d0:	91 2f       	mov	r25, r17
     3d2:	2f 3b       	cpi	r18, 0xBF	; 191
     3d4:	37 42       	sbci	r19, 0x27	; 39
     3d6:	49 40       	sbci	r20, 0x09	; 9
     3d8:	51 05       	cpc	r21, r1
     3da:	61 05       	cpc	r22, r1
     3dc:	71 05       	cpc	r23, r1
     3de:	81 05       	cpc	r24, r1
     3e0:	91 05       	cpc	r25, r1
     3e2:	a9 f2       	breq	.-86     	; 0x38e <GetPulseWidth+0xb8>
     3e4:	a0 f2       	brcs	.-88     	; 0x38e <GetPulseWidth+0xb8>
		}
		else
		break;
	}

	if(i==600000)
     3e6:	2d 2f       	mov	r18, r29
     3e8:	3c 2f       	mov	r19, r28
     3ea:	4b 2f       	mov	r20, r27
     3ec:	5a 2f       	mov	r21, r26
     3ee:	6f 2f       	mov	r22, r31
     3f0:	7f 2d       	mov	r23, r15
     3f2:	80 2f       	mov	r24, r16
     3f4:	91 2f       	mov	r25, r17
     3f6:	20 3c       	cpi	r18, 0xC0	; 192
     3f8:	37 42       	sbci	r19, 0x27	; 39
     3fa:	49 40       	sbci	r20, 0x09	; 9
     3fc:	51 05       	cpc	r21, r1
     3fe:	61 05       	cpc	r22, r1
     400:	71 05       	cpc	r23, r1
     402:	81 05       	cpc	r24, r1
     404:	91 05       	cpc	r25, r1
     406:	19 f1       	breq	.+70     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
	return US_NO_OBSTACLE;

	result=TCNT1;
     408:	8c b4       	in	r8, 0x2c	; 44
     40a:	9d b4       	in	r9, 0x2d	; 45
	TCCR1B=0x00;
     40c:	1e bc       	out	0x2e, r1	; 46

	if(result > 60000)
     40e:	28 2d       	mov	r18, r8
     410:	39 2d       	mov	r19, r9
     412:	40 e0       	ldi	r20, 0x00	; 0
     414:	50 e0       	ldi	r21, 0x00	; 0
     416:	60 e0       	ldi	r22, 0x00	; 0
     418:	70 e0       	ldi	r23, 0x00	; 0
     41a:	80 e0       	ldi	r24, 0x00	; 0
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	20 36       	cpi	r18, 0x60	; 96
     420:	ea ee       	ldi	r30, 0xEA	; 234
     422:	3e 07       	cpc	r19, r30
     424:	41 05       	cpc	r20, r1
     426:	51 05       	cpc	r21, r1
     428:	61 05       	cpc	r22, r1
     42a:	71 05       	cpc	r23, r1
     42c:	81 05       	cpc	r24, r1
     42e:	91 05       	cpc	r25, r1
     430:	09 f0       	breq	.+2      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     432:	90 f4       	brcc	.+36     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
	return US_NO_OBSTACLE;
	else
	return (result>>1);
     434:	01 e0       	ldi	r16, 0x01	; 1
     436:	0e 94 82 07 	call	0xf04	; 0xf04 <__lshrdi3>
     43a:	62 2f       	mov	r22, r18
     43c:	73 2f       	mov	r23, r19
     43e:	84 2f       	mov	r24, r20
     440:	95 2f       	mov	r25, r21
     442:	0e c0       	rjmp	.+28     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
		else
		break;
	}

	if(i==600000)
	return US_ERROR;
     444:	6f ef       	ldi	r22, 0xFF	; 255
     446:	7f ef       	ldi	r23, 0xFF	; 255
     448:	8f ef       	ldi	r24, 0xFF	; 255
     44a:	9f ef       	ldi	r25, 0xFF	; 255
     44c:	09 c0       	rjmp	.+18     	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
		else
		break;
	}

	if(i==600000)
	return US_NO_OBSTACLE;
     44e:	6e ef       	ldi	r22, 0xFE	; 254
     450:	7f ef       	ldi	r23, 0xFF	; 255
     452:	8f ef       	ldi	r24, 0xFF	; 255
     454:	9f ef       	ldi	r25, 0xFF	; 255
     456:	04 c0       	rjmp	.+8      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>

	result=TCNT1;
	TCCR1B=0x00;

	if(result > 60000)
	return US_NO_OBSTACLE;
     458:	6e ef       	ldi	r22, 0xFE	; 254
     45a:	7f ef       	ldi	r23, 0xFF	; 255
     45c:	8f ef       	ldi	r24, 0xFF	; 255
     45e:	9f ef       	ldi	r25, 0xFF	; 255
	else
	return (result>>1);
}
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	1f 91       	pop	r17
     466:	0f 91       	pop	r16
     468:	ff 90       	pop	r15
     46a:	ef 90       	pop	r14
     46c:	df 90       	pop	r13
     46e:	cf 90       	pop	r12
     470:	bf 90       	pop	r11
     472:	af 90       	pop	r10
     474:	9f 90       	pop	r9
     476:	8f 90       	pop	r8
     478:	08 95       	ret

0000047a <displayKey>:

}


int displayKey()
{
     47a:	4f 92       	push	r4
     47c:	5f 92       	push	r5
     47e:	6f 92       	push	r6
     480:	7f 92       	push	r7
     482:	8f 92       	push	r8
     484:	9f 92       	push	r9
     486:	af 92       	push	r10
     488:	bf 92       	push	r11
     48a:	cf 92       	push	r12
     48c:	df 92       	push	r13
     48e:	ef 92       	push	r14
     490:	ff 92       	push	r15
     492:	0f 93       	push	r16
     494:	1f 93       	push	r17
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	64 97       	sbiw	r28, 0x14	; 20
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
	int tmpNum;
	int data[10];
	int i = 0;
     4aa:	00 e0       	ldi	r16, 0x00	; 0
     4ac:	10 e0       	ldi	r17, 0x00	; 0
	int num = 0;
	while(1)
	{
		key=scankey();
     4ae:	0e 94 56 01 	call	0x2ac	; 0x2ac <scankey>
     4b2:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <key>
		lcddata(key);
     4b6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <lcddata>
		if(key == '#') break;
     4ba:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <key>
     4be:	83 32       	cpi	r24, 0x23	; 35
     4c0:	c9 f0       	breq	.+50     	; 0x4f4 <displayKey+0x7a>
		tmpNum = charToInt(key);
     4c2:	0e 94 01 01 	call	0x202	; 0x202 <charToInt>
		data[i] = tmpNum;
     4c6:	f8 01       	movw	r30, r16
     4c8:	ee 0f       	add	r30, r30
     4ca:	ff 1f       	adc	r31, r31
     4cc:	21 e0       	ldi	r18, 0x01	; 1
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	2c 0f       	add	r18, r28
     4d2:	3d 1f       	adc	r19, r29
     4d4:	e2 0f       	add	r30, r18
     4d6:	f3 1f       	adc	r31, r19
     4d8:	91 83       	std	Z+1, r25	; 0x01
     4da:	80 83       	st	Z, r24
		i++;
     4dc:	0f 5f       	subi	r16, 0xFF	; 255
     4de:	1f 4f       	sbci	r17, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4e0:	3f e5       	ldi	r19, 0x5F	; 95
     4e2:	8a ee       	ldi	r24, 0xEA	; 234
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	31 50       	subi	r19, 0x01	; 1
     4e8:	80 40       	sbci	r24, 0x00	; 0
     4ea:	90 40       	sbci	r25, 0x00	; 0
     4ec:	e1 f7       	brne	.-8      	; 0x4e6 <displayKey+0x6c>
     4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <displayKey+0x76>
     4f0:	00 00       	nop
     4f2:	dd cf       	rjmp	.-70     	; 0x4ae <displayKey+0x34>
		_delay_ms(300);
	}
	int k = i-1;
     4f4:	58 01       	movw	r10, r16
     4f6:	21 e0       	ldi	r18, 0x01	; 1
     4f8:	a2 1a       	sub	r10, r18
     4fa:	b1 08       	sbc	r11, r1
	
	for(int j=0;i>j;j++){
     4fc:	e1 2c       	mov	r14, r1
     4fe:	f1 2c       	mov	r15, r1
int displayKey()
{
	int tmpNum;
	int data[10];
	int i = 0;
	int num = 0;
     500:	81 2c       	mov	r8, r1
     502:	91 2c       	mov	r9, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     504:	3b c0       	rjmp	.+118    	; 0x57c <displayKey+0x102>
		num += data[j]*pow(10,k);
     506:	f7 01       	movw	r30, r14
     508:	ee 0f       	add	r30, r30
     50a:	ff 1f       	adc	r31, r31
     50c:	81 e0       	ldi	r24, 0x01	; 1
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	8c 0f       	add	r24, r28
     512:	9d 1f       	adc	r25, r29
     514:	e8 0f       	add	r30, r24
     516:	f9 1f       	adc	r31, r25
     518:	c0 80       	ld	r12, Z
     51a:	d1 80       	ldd	r13, Z+1	; 0x01
     51c:	b5 01       	movw	r22, r10
     51e:	0b 2c       	mov	r0, r11
     520:	00 0c       	add	r0, r0
     522:	88 0b       	sbc	r24, r24
     524:	99 0b       	sbc	r25, r25
     526:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     52a:	9b 01       	movw	r18, r22
     52c:	ac 01       	movw	r20, r24
     52e:	60 e0       	ldi	r22, 0x00	; 0
     530:	70 e0       	ldi	r23, 0x00	; 0
     532:	80 e2       	ldi	r24, 0x20	; 32
     534:	91 e4       	ldi	r25, 0x41	; 65
     536:	0e 94 89 05 	call	0xb12	; 0xb12 <pow>
     53a:	2b 01       	movw	r4, r22
     53c:	3c 01       	movw	r6, r24
     53e:	b6 01       	movw	r22, r12
     540:	dd 0c       	add	r13, r13
     542:	88 0b       	sbc	r24, r24
     544:	99 0b       	sbc	r25, r25
     546:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     54a:	a3 01       	movw	r20, r6
     54c:	92 01       	movw	r18, r4
     54e:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
     552:	2b 01       	movw	r4, r22
     554:	3c 01       	movw	r6, r24
     556:	b4 01       	movw	r22, r8
     558:	99 0c       	add	r9, r9
     55a:	88 0b       	sbc	r24, r24
     55c:	99 0b       	sbc	r25, r25
     55e:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     562:	a3 01       	movw	r20, r6
     564:	92 01       	movw	r18, r4
     566:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__addsf3>
     56a:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fixsfsi>
     56e:	4b 01       	movw	r8, r22
		k--;
     570:	91 e0       	ldi	r25, 0x01	; 1
     572:	a9 1a       	sub	r10, r25
     574:	b1 08       	sbc	r11, r1
		i++;
		_delay_ms(300);
	}
	int k = i-1;
	
	for(int j=0;i>j;j++){
     576:	2f ef       	ldi	r18, 0xFF	; 255
     578:	e2 1a       	sub	r14, r18
     57a:	f2 0a       	sbc	r15, r18
     57c:	e0 16       	cp	r14, r16
     57e:	f1 06       	cpc	r15, r17
     580:	14 f2       	brlt	.-124    	; 0x506 <displayKey+0x8c>
		num += data[j]*pow(10,k);
		k--;
	}
	
	lcdcmd(0x01);
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	
	return num;
}
     588:	c4 01       	movw	r24, r8
     58a:	64 96       	adiw	r28, 0x14	; 20
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	1f 91       	pop	r17
     59c:	0f 91       	pop	r16
     59e:	ff 90       	pop	r15
     5a0:	ef 90       	pop	r14
     5a2:	df 90       	pop	r13
     5a4:	cf 90       	pop	r12
     5a6:	bf 90       	pop	r11
     5a8:	af 90       	pop	r10
     5aa:	9f 90       	pop	r9
     5ac:	8f 90       	pop	r8
     5ae:	7f 90       	pop	r7
     5b0:	6f 90       	pop	r6
     5b2:	5f 90       	pop	r5
     5b4:	4f 90       	pop	r4
     5b6:	08 95       	ret

000005b8 <lcd_clear>:

void lcd_clear()
{
	lcdcmd(0x01);
     5b8:	81 e0       	ldi	r24, 0x01	; 1
     5ba:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     5be:	08 95       	ret

000005c0 <lcd_line_one>:
}

void lcd_line_one()
{
	lcdcmd(0x80);
     5c0:	80 e8       	ldi	r24, 0x80	; 128
     5c2:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     5c6:	08 95       	ret

000005c8 <lcd_line_two>:
}

void lcd_line_two()
{
	lcdcmd(0xC0);
     5c8:	80 ec       	ldi	r24, 0xC0	; 192
     5ca:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     5ce:	08 95       	ret

000005d0 <main>:



int main(void)

{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62
     5d8:	2e 97       	sbiw	r28, 0x0e	; 14
     5da:	0f b6       	in	r0, 0x3f	; 63
     5dc:	f8 94       	cli
     5de:	de bf       	out	0x3e, r29	; 62
     5e0:	0f be       	out	0x3f, r0	; 63
     5e2:	cd bf       	out	0x3d, r28	; 61

	DDRA=0xff;
     5e4:	8f ef       	ldi	r24, 0xFF	; 255
     5e6:	8a bb       	out	0x1a, r24	; 26

	DDRB=0x07;
     5e8:	87 e0       	ldi	r24, 0x07	; 7
     5ea:	87 bb       	out	0x17, r24	; 23

	DDRD=0xf0;
     5ec:	80 ef       	ldi	r24, 0xF0	; 240
     5ee:	81 bb       	out	0x11, r24	; 17

	char key;

	lcdint();
     5f0:	0e 94 b7 00 	call	0x16e	; 0x16e <lcdint>
	
	lcd_string("HELLO! WELCOME!",14);
     5f4:	6e e0       	ldi	r22, 0x0E	; 14
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	91 e0       	ldi	r25, 0x01	; 1
     5fa:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     5fe:	2f e7       	ldi	r18, 0x7F	; 127
     600:	89 ea       	ldi	r24, 0xA9	; 169
     602:	93 e0       	ldi	r25, 0x03	; 3
     604:	21 50       	subi	r18, 0x01	; 1
     606:	80 40       	sbci	r24, 0x00	; 0
     608:	90 40       	sbci	r25, 0x00	; 0
     60a:	e1 f7       	brne	.-8      	; 0x604 <main+0x34>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <main+0x3e>
     60e:	00 00       	nop
	_delay_ms(1200);
	
	lcd_clear();
     610:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <lcd_clear>
	lcd_line_one();	
     614:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <lcd_line_one>
	lcd_string("ENTER PLANT",11);
     618:	6b e0       	ldi	r22, 0x0B	; 11
     61a:	80 e1       	ldi	r24, 0x10	; 16
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcd_line_two();
     622:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <lcd_line_two>
	lcd_string("COUNT: ",7);
     626:	67 e0       	ldi	r22, 0x07	; 7
     628:	8c e1       	ldi	r24, 0x1C	; 28
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	
	int plantCount = displayKey();
     630:	0e 94 3d 02 	call	0x47a	; 0x47a <displayKey>
	
	char text[10];
	sprintf(text, "%d", plantCount);
     634:	9f 93       	push	r25
     636:	8f 93       	push	r24
     638:	84 e2       	ldi	r24, 0x24	; 36
     63a:	91 e0       	ldi	r25, 0x01	; 1
     63c:	9f 93       	push	r25
     63e:	8f 93       	push	r24
     640:	8e 01       	movw	r16, r28
     642:	0f 5f       	subi	r16, 0xFF	; 255
     644:	1f 4f       	sbci	r17, 0xFF	; 255
     646:	1f 93       	push	r17
     648:	0f 93       	push	r16
     64a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <sprintf>
	
	lcdcmd(0x01);
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	lcd_string("PLANT COUNT IS",15);
     654:	6f e0       	ldi	r22, 0x0F	; 15
     656:	87 e2       	ldi	r24, 0x27	; 39
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
	lcdcmd(0xC0);
     65e:	80 ec       	ldi	r24, 0xC0	; 192
     660:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
	lcd_string(text,10);
     664:	6a e0       	ldi	r22, 0x0A	; 10
     666:	c8 01       	movw	r24, r16
     668:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     66c:	2f e3       	ldi	r18, 0x3F	; 63
     66e:	8d e0       	ldi	r24, 0x0D	; 13
     670:	93 e0       	ldi	r25, 0x03	; 3
     672:	21 50       	subi	r18, 0x01	; 1
     674:	80 40       	sbci	r24, 0x00	; 0
     676:	90 40       	sbci	r25, 0x00	; 0
     678:	e1 f7       	brne	.-8      	; 0x672 <main+0xa2>
     67a:	00 c0       	rjmp	.+0      	; 0x67c <main+0xac>
     67c:	00 00       	nop
     67e:	87 ea       	ldi	r24, 0xA7	; 167
     680:	91 e6       	ldi	r25, 0x61	; 97
     682:	01 97       	sbiw	r24, 0x01	; 1
     684:	f1 f7       	brne	.-4      	; 0x682 <main+0xb2>
     686:	00 c0       	rjmp	.+0      	; 0x688 <main+0xb8>
     688:	00 00       	nop
		
		uint16_t r;
		
		_delay_ms(100);

		lcdcmd(0x01);
     68a:	81 e0       	ldi	r24, 0x01	; 1
     68c:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
		
		//Set io port direction of sensor
		HCSR04Init();
     690:	0e 94 5d 01 	call	0x2ba	; 0x2ba <HCSR04Init>
     694:	0f 90       	pop	r0
     696:	0f 90       	pop	r0
     698:	0f 90       	pop	r0
     69a:	0f 90       	pop	r0
     69c:	0f 90       	pop	r0
     69e:	0f 90       	pop	r0

		while(1)
		{
			
			//Send a trigger pulse
			HCSR04Trigger();               // calling the ultrasonic sound wave generator function
     6a0:	0e 94 61 01 	call	0x2c2	; 0x2c2 <HCSR04Trigger>
			
			//Measure the width of pulse
			r=GetPulseWidth();             // getting the duration of the ultrasound took to echo back after hitting the object
     6a4:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <GetPulseWidth>
			
			//Handle Errors
			if(r==US_ERROR)                // if microcontroller doesn't get any pulse then it will set the US_ERROR variable to -1
     6a8:	6f 3f       	cpi	r22, 0xFF	; 255
     6aa:	2f ef       	ldi	r18, 0xFF	; 255
     6ac:	72 07       	cpc	r23, r18
     6ae:	c1 f4       	brne	.+48     	; 0x6e0 <main+0x110>
			// the following code will check if there is error then it will be displayed on the LCD screen
			{
				lcdcmd(0x01);
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcdcmd(0x80);
     6b6:	80 e8       	ldi	r24, 0x80	; 128
     6b8:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("E!",2);
     6bc:	62 e0       	ldi	r22, 0x02	; 2
     6be:	8d e0       	ldi	r24, 0x0D	; 13
     6c0:	91 e0       	ldi	r25, 0x01	; 1
     6c2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     6c6:	8f e3       	ldi	r24, 0x3F	; 63
     6c8:	9d e0       	ldi	r25, 0x0D	; 13
     6ca:	23 e0       	ldi	r18, 0x03	; 3
     6cc:	81 50       	subi	r24, 0x01	; 1
     6ce:	90 40       	sbci	r25, 0x00	; 0
     6d0:	20 40       	sbci	r18, 0x00	; 0
     6d2:	e1 f7       	brne	.-8      	; 0x6cc <main+0xfc>
     6d4:	00 c0       	rjmp	.+0      	; 0x6d6 <main+0x106>
     6d6:	00 00       	nop
				_delay_ms(1000);
				lcdcmd(0x01);
     6d8:	81 e0       	ldi	r24, 0x01	; 1
     6da:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
     6de:	e0 cf       	rjmp	.-64     	; 0x6a0 <main+0xd0>
			}
			else
			{
				
				distance=50-(r*0.034/2.0);	// This will give the distance in centimeters
     6e0:	80 e0       	ldi	r24, 0x00	; 0
     6e2:	90 e0       	ldi	r25, 0x00	; 0
     6e4:	0e 94 8e 04 	call	0x91c	; 0x91c <__floatunsisf>
     6e8:	26 e9       	ldi	r18, 0x96	; 150
     6ea:	33 e4       	ldi	r19, 0x43	; 67
     6ec:	4b e0       	ldi	r20, 0x0B	; 11
     6ee:	5d e3       	ldi	r21, 0x3D	; 61
     6f0:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	5f e3       	ldi	r21, 0x3F	; 63
     6fc:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
     700:	9b 01       	movw	r18, r22
     702:	ac 01       	movw	r20, r24
     704:	60 e0       	ldi	r22, 0x00	; 0
     706:	70 e0       	ldi	r23, 0x00	; 0
     708:	88 e4       	ldi	r24, 0x48	; 72
     70a:	92 e4       	ldi	r25, 0x42	; 66
     70c:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__subsf3>
     710:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__fixsfsi>
     714:	70 93 61 01 	sts	0x0161, r23	; 0x800161 <distance+0x1>
     718:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <distance>
				
				
				
				if (distance != previous_distance)    // the LCD screen only need to be cleared if the distance is changed otherwise it is not required
     71c:	20 91 5e 01 	lds	r18, 0x015E	; 0x80015e <__data_end>
     720:	30 91 5f 01 	lds	r19, 0x015F	; 0x80015f <__data_end+0x1>
     724:	26 17       	cp	r18, r22
     726:	37 07       	cpc	r19, r23
     728:	19 f0       	breq	.+6      	; 0x730 <main+0x160>
				{
					lcdcmd(0x01);
     72a:	81 e0       	ldi	r24, 0x01	; 1
     72c:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				}
				
				lcdcmd(0x01);
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				
				lcdcmd(0x80);
     736:	80 e8       	ldi	r24, 0x80	; 128
     738:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
				lcd_string("WATER LV =",11);
     73c:	6b e0       	ldi	r22, 0x0B	; 11
     73e:	86 e3       	ldi	r24, 0x36	; 54
     740:	91 e0       	ldi	r25, 0x01	; 1
     742:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     746:	4a e0       	ldi	r20, 0x0A	; 10
     748:	be 01       	movw	r22, r28
     74a:	65 5f       	subi	r22, 0xF5	; 245
     74c:	7f 4f       	sbci	r23, 0xFF	; 255
     74e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <distance>
     752:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <distance+0x1>
     756:	0e 94 aa 07 	call	0xf54	; 0xf54 <__itoa_ncheck>
				
				itoa(distance, numberString, 10);    // distance is an integer number, we can not display integer directly on the LCD. this line converts integer into array of character
				lcd_string(numberString,3);
     75a:	63 e0       	ldi	r22, 0x03	; 3
     75c:	ce 01       	movw	r24, r28
     75e:	0b 96       	adiw	r24, 0x0b	; 11
     760:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>

				lcd_string("cm",2);
     764:	62 e0       	ldi	r22, 0x02	; 2
     766:	81 e4       	ldi	r24, 0x41	; 65
     768:	91 e0       	ldi	r25, 0x01	; 1
     76a:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
				
				
				
				
				previous_distance = distance;
     76e:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <distance>
     772:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <distance+0x1>
     776:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <__data_end+0x1>
     77a:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <__data_end>
     77e:	8b e4       	ldi	r24, 0x4B	; 75
     780:	9d e1       	ldi	r25, 0x1D	; 29
     782:	01 97       	sbiw	r24, 0x01	; 1
     784:	f1 f7       	brne	.-4      	; 0x782 <main+0x1b2>
     786:	00 c0       	rjmp	.+0      	; 0x788 <main+0x1b8>
     788:	00 00       	nop
				_delay_ms(30);
				
				if(distance<10)
     78a:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <distance>
     78e:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <distance+0x1>
     792:	0a 97       	sbiw	r24, 0x0a	; 10
     794:	44 f4       	brge	.+16     	; 0x7a6 <main+0x1d6>
				{
					lcdcmd(0xC0);
     796:	80 ec       	ldi	r24, 0xC0	; 192
     798:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
					lcd_string("WATER LOW!!!",13);
     79c:	6d e0       	ldi	r22, 0x0D	; 13
     79e:	84 e4       	ldi	r24, 0x44	; 68
     7a0:	91 e0       	ldi	r25, 0x01	; 1
     7a2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
					// PORTA=(1<<PINA0);
					
				}
				if(distance>=10)
     7a6:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <distance>
     7aa:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <distance+0x1>
     7ae:	0a 97       	sbiw	r24, 0x0a	; 10
     7b0:	44 f0       	brlt	.+16     	; 0x7c2 <main+0x1f2>
				{
					lcdcmd(0xC0);
     7b2:	80 ec       	ldi	r24, 0xC0	; 192
     7b4:	0e 94 a6 00 	call	0x14c	; 0x14c <lcdcmd>
					lcd_string("ENOUGH WATER",12);
     7b8:	6c e0       	ldi	r22, 0x0C	; 12
     7ba:	81 e5       	ldi	r24, 0x51	; 81
     7bc:	91 e0       	ldi	r25, 0x01	; 1
     7be:	0e 94 e5 00 	call	0x1ca	; 0x1ca <lcd_string>
     7c2:	9f e7       	ldi	r25, 0x7F	; 127
     7c4:	29 ea       	ldi	r18, 0xA9	; 169
     7c6:	83 e0       	ldi	r24, 0x03	; 3
     7c8:	91 50       	subi	r25, 0x01	; 1
     7ca:	20 40       	sbci	r18, 0x00	; 0
     7cc:	80 40       	sbci	r24, 0x00	; 0
     7ce:	e1 f7       	brne	.-8      	; 0x7c8 <main+0x1f8>
     7d0:	00 c0       	rjmp	.+0      	; 0x7d2 <main+0x202>
     7d2:	00 00       	nop
     7d4:	65 cf       	rjmp	.-310    	; 0x6a0 <main+0xd0>

000007d6 <__subsf3>:
     7d6:	50 58       	subi	r21, 0x80	; 128

000007d8 <__addsf3>:
     7d8:	bb 27       	eor	r27, r27
     7da:	aa 27       	eor	r26, r26
     7dc:	0e 94 03 04 	call	0x806	; 0x806 <__addsf3x>
     7e0:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_round>
     7e4:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__fp_pscA>
     7e8:	38 f0       	brcs	.+14     	; 0x7f8 <__addsf3+0x20>
     7ea:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_pscB>
     7ee:	20 f0       	brcs	.+8      	; 0x7f8 <__addsf3+0x20>
     7f0:	39 f4       	brne	.+14     	; 0x800 <__EEPROM_REGION_LENGTH__>
     7f2:	9f 3f       	cpi	r25, 0xFF	; 255
     7f4:	19 f4       	brne	.+6      	; 0x7fc <__addsf3+0x24>
     7f6:	26 f4       	brtc	.+8      	; 0x800 <__EEPROM_REGION_LENGTH__>
     7f8:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>
     7fc:	0e f4       	brtc	.+2      	; 0x800 <__EEPROM_REGION_LENGTH__>
     7fe:	e0 95       	com	r30
     800:	e7 fb       	bst	r30, 7
     802:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>

00000806 <__addsf3x>:
     806:	e9 2f       	mov	r30, r25
     808:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_split3>
     80c:	58 f3       	brcs	.-42     	; 0x7e4 <__addsf3+0xc>
     80e:	ba 17       	cp	r27, r26
     810:	62 07       	cpc	r22, r18
     812:	73 07       	cpc	r23, r19
     814:	84 07       	cpc	r24, r20
     816:	95 07       	cpc	r25, r21
     818:	20 f0       	brcs	.+8      	; 0x822 <__addsf3x+0x1c>
     81a:	79 f4       	brne	.+30     	; 0x83a <__addsf3x+0x34>
     81c:	a6 f5       	brtc	.+104    	; 0x886 <__addsf3x+0x80>
     81e:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__fp_zero>
     822:	0e f4       	brtc	.+2      	; 0x826 <__addsf3x+0x20>
     824:	e0 95       	com	r30
     826:	0b 2e       	mov	r0, r27
     828:	ba 2f       	mov	r27, r26
     82a:	a0 2d       	mov	r26, r0
     82c:	0b 01       	movw	r0, r22
     82e:	b9 01       	movw	r22, r18
     830:	90 01       	movw	r18, r0
     832:	0c 01       	movw	r0, r24
     834:	ca 01       	movw	r24, r20
     836:	a0 01       	movw	r20, r0
     838:	11 24       	eor	r1, r1
     83a:	ff 27       	eor	r31, r31
     83c:	59 1b       	sub	r21, r25
     83e:	99 f0       	breq	.+38     	; 0x866 <__addsf3x+0x60>
     840:	59 3f       	cpi	r21, 0xF9	; 249
     842:	50 f4       	brcc	.+20     	; 0x858 <__addsf3x+0x52>
     844:	50 3e       	cpi	r21, 0xE0	; 224
     846:	68 f1       	brcs	.+90     	; 0x8a2 <__addsf3x+0x9c>
     848:	1a 16       	cp	r1, r26
     84a:	f0 40       	sbci	r31, 0x00	; 0
     84c:	a2 2f       	mov	r26, r18
     84e:	23 2f       	mov	r18, r19
     850:	34 2f       	mov	r19, r20
     852:	44 27       	eor	r20, r20
     854:	58 5f       	subi	r21, 0xF8	; 248
     856:	f3 cf       	rjmp	.-26     	; 0x83e <__addsf3x+0x38>
     858:	46 95       	lsr	r20
     85a:	37 95       	ror	r19
     85c:	27 95       	ror	r18
     85e:	a7 95       	ror	r26
     860:	f0 40       	sbci	r31, 0x00	; 0
     862:	53 95       	inc	r21
     864:	c9 f7       	brne	.-14     	; 0x858 <__addsf3x+0x52>
     866:	7e f4       	brtc	.+30     	; 0x886 <__addsf3x+0x80>
     868:	1f 16       	cp	r1, r31
     86a:	ba 0b       	sbc	r27, r26
     86c:	62 0b       	sbc	r22, r18
     86e:	73 0b       	sbc	r23, r19
     870:	84 0b       	sbc	r24, r20
     872:	ba f0       	brmi	.+46     	; 0x8a2 <__addsf3x+0x9c>
     874:	91 50       	subi	r25, 0x01	; 1
     876:	a1 f0       	breq	.+40     	; 0x8a0 <__addsf3x+0x9a>
     878:	ff 0f       	add	r31, r31
     87a:	bb 1f       	adc	r27, r27
     87c:	66 1f       	adc	r22, r22
     87e:	77 1f       	adc	r23, r23
     880:	88 1f       	adc	r24, r24
     882:	c2 f7       	brpl	.-16     	; 0x874 <__addsf3x+0x6e>
     884:	0e c0       	rjmp	.+28     	; 0x8a2 <__addsf3x+0x9c>
     886:	ba 0f       	add	r27, r26
     888:	62 1f       	adc	r22, r18
     88a:	73 1f       	adc	r23, r19
     88c:	84 1f       	adc	r24, r20
     88e:	48 f4       	brcc	.+18     	; 0x8a2 <__addsf3x+0x9c>
     890:	87 95       	ror	r24
     892:	77 95       	ror	r23
     894:	67 95       	ror	r22
     896:	b7 95       	ror	r27
     898:	f7 95       	ror	r31
     89a:	9e 3f       	cpi	r25, 0xFE	; 254
     89c:	08 f0       	brcs	.+2      	; 0x8a0 <__addsf3x+0x9a>
     89e:	b0 cf       	rjmp	.-160    	; 0x800 <__EEPROM_REGION_LENGTH__>
     8a0:	93 95       	inc	r25
     8a2:	88 0f       	add	r24, r24
     8a4:	08 f0       	brcs	.+2      	; 0x8a8 <__addsf3x+0xa2>
     8a6:	99 27       	eor	r25, r25
     8a8:	ee 0f       	add	r30, r30
     8aa:	97 95       	ror	r25
     8ac:	87 95       	ror	r24
     8ae:	08 95       	ret

000008b0 <__fixsfsi>:
     8b0:	0e 94 5f 04 	call	0x8be	; 0x8be <__fixunssfsi>
     8b4:	68 94       	set
     8b6:	b1 11       	cpse	r27, r1
     8b8:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>
     8bc:	08 95       	ret

000008be <__fixunssfsi>:
     8be:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__fp_splitA>
     8c2:	88 f0       	brcs	.+34     	; 0x8e6 <__fixunssfsi+0x28>
     8c4:	9f 57       	subi	r25, 0x7F	; 127
     8c6:	98 f0       	brcs	.+38     	; 0x8ee <__fixunssfsi+0x30>
     8c8:	b9 2f       	mov	r27, r25
     8ca:	99 27       	eor	r25, r25
     8cc:	b7 51       	subi	r27, 0x17	; 23
     8ce:	b0 f0       	brcs	.+44     	; 0x8fc <__fixunssfsi+0x3e>
     8d0:	e1 f0       	breq	.+56     	; 0x90a <__fixunssfsi+0x4c>
     8d2:	66 0f       	add	r22, r22
     8d4:	77 1f       	adc	r23, r23
     8d6:	88 1f       	adc	r24, r24
     8d8:	99 1f       	adc	r25, r25
     8da:	1a f0       	brmi	.+6      	; 0x8e2 <__fixunssfsi+0x24>
     8dc:	ba 95       	dec	r27
     8de:	c9 f7       	brne	.-14     	; 0x8d2 <__fixunssfsi+0x14>
     8e0:	14 c0       	rjmp	.+40     	; 0x90a <__fixunssfsi+0x4c>
     8e2:	b1 30       	cpi	r27, 0x01	; 1
     8e4:	91 f0       	breq	.+36     	; 0x90a <__fixunssfsi+0x4c>
     8e6:	0e 94 15 05 	call	0xa2a	; 0xa2a <__fp_zero>
     8ea:	b1 e0       	ldi	r27, 0x01	; 1
     8ec:	08 95       	ret
     8ee:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__fp_zero>
     8f2:	67 2f       	mov	r22, r23
     8f4:	78 2f       	mov	r23, r24
     8f6:	88 27       	eor	r24, r24
     8f8:	b8 5f       	subi	r27, 0xF8	; 248
     8fa:	39 f0       	breq	.+14     	; 0x90a <__fixunssfsi+0x4c>
     8fc:	b9 3f       	cpi	r27, 0xF9	; 249
     8fe:	cc f3       	brlt	.-14     	; 0x8f2 <__fixunssfsi+0x34>
     900:	86 95       	lsr	r24
     902:	77 95       	ror	r23
     904:	67 95       	ror	r22
     906:	b3 95       	inc	r27
     908:	d9 f7       	brne	.-10     	; 0x900 <__fixunssfsi+0x42>
     90a:	3e f4       	brtc	.+14     	; 0x91a <__fixunssfsi+0x5c>
     90c:	90 95       	com	r25
     90e:	80 95       	com	r24
     910:	70 95       	com	r23
     912:	61 95       	neg	r22
     914:	7f 4f       	sbci	r23, 0xFF	; 255
     916:	8f 4f       	sbci	r24, 0xFF	; 255
     918:	9f 4f       	sbci	r25, 0xFF	; 255
     91a:	08 95       	ret

0000091c <__floatunsisf>:
     91c:	e8 94       	clt
     91e:	09 c0       	rjmp	.+18     	; 0x932 <__floatsisf+0x12>

00000920 <__floatsisf>:
     920:	97 fb       	bst	r25, 7
     922:	3e f4       	brtc	.+14     	; 0x932 <__floatsisf+0x12>
     924:	90 95       	com	r25
     926:	80 95       	com	r24
     928:	70 95       	com	r23
     92a:	61 95       	neg	r22
     92c:	7f 4f       	sbci	r23, 0xFF	; 255
     92e:	8f 4f       	sbci	r24, 0xFF	; 255
     930:	9f 4f       	sbci	r25, 0xFF	; 255
     932:	99 23       	and	r25, r25
     934:	a9 f0       	breq	.+42     	; 0x960 <__floatsisf+0x40>
     936:	f9 2f       	mov	r31, r25
     938:	96 e9       	ldi	r25, 0x96	; 150
     93a:	bb 27       	eor	r27, r27
     93c:	93 95       	inc	r25
     93e:	f6 95       	lsr	r31
     940:	87 95       	ror	r24
     942:	77 95       	ror	r23
     944:	67 95       	ror	r22
     946:	b7 95       	ror	r27
     948:	f1 11       	cpse	r31, r1
     94a:	f8 cf       	rjmp	.-16     	; 0x93c <__floatsisf+0x1c>
     94c:	fa f4       	brpl	.+62     	; 0x98c <__floatsisf+0x6c>
     94e:	bb 0f       	add	r27, r27
     950:	11 f4       	brne	.+4      	; 0x956 <__floatsisf+0x36>
     952:	60 ff       	sbrs	r22, 0
     954:	1b c0       	rjmp	.+54     	; 0x98c <__floatsisf+0x6c>
     956:	6f 5f       	subi	r22, 0xFF	; 255
     958:	7f 4f       	sbci	r23, 0xFF	; 255
     95a:	8f 4f       	sbci	r24, 0xFF	; 255
     95c:	9f 4f       	sbci	r25, 0xFF	; 255
     95e:	16 c0       	rjmp	.+44     	; 0x98c <__floatsisf+0x6c>
     960:	88 23       	and	r24, r24
     962:	11 f0       	breq	.+4      	; 0x968 <__floatsisf+0x48>
     964:	96 e9       	ldi	r25, 0x96	; 150
     966:	11 c0       	rjmp	.+34     	; 0x98a <__floatsisf+0x6a>
     968:	77 23       	and	r23, r23
     96a:	21 f0       	breq	.+8      	; 0x974 <__floatsisf+0x54>
     96c:	9e e8       	ldi	r25, 0x8E	; 142
     96e:	87 2f       	mov	r24, r23
     970:	76 2f       	mov	r23, r22
     972:	05 c0       	rjmp	.+10     	; 0x97e <__floatsisf+0x5e>
     974:	66 23       	and	r22, r22
     976:	71 f0       	breq	.+28     	; 0x994 <__floatsisf+0x74>
     978:	96 e8       	ldi	r25, 0x86	; 134
     97a:	86 2f       	mov	r24, r22
     97c:	70 e0       	ldi	r23, 0x00	; 0
     97e:	60 e0       	ldi	r22, 0x00	; 0
     980:	2a f0       	brmi	.+10     	; 0x98c <__floatsisf+0x6c>
     982:	9a 95       	dec	r25
     984:	66 0f       	add	r22, r22
     986:	77 1f       	adc	r23, r23
     988:	88 1f       	adc	r24, r24
     98a:	da f7       	brpl	.-10     	; 0x982 <__floatsisf+0x62>
     98c:	88 0f       	add	r24, r24
     98e:	96 95       	lsr	r25
     990:	87 95       	ror	r24
     992:	97 f9       	bld	r25, 7
     994:	08 95       	ret

00000996 <__fp_inf>:
     996:	97 f9       	bld	r25, 7
     998:	9f 67       	ori	r25, 0x7F	; 127
     99a:	80 e8       	ldi	r24, 0x80	; 128
     99c:	70 e0       	ldi	r23, 0x00	; 0
     99e:	60 e0       	ldi	r22, 0x00	; 0
     9a0:	08 95       	ret

000009a2 <__fp_nan>:
     9a2:	9f ef       	ldi	r25, 0xFF	; 255
     9a4:	80 ec       	ldi	r24, 0xC0	; 192
     9a6:	08 95       	ret

000009a8 <__fp_pscA>:
     9a8:	00 24       	eor	r0, r0
     9aa:	0a 94       	dec	r0
     9ac:	16 16       	cp	r1, r22
     9ae:	17 06       	cpc	r1, r23
     9b0:	18 06       	cpc	r1, r24
     9b2:	09 06       	cpc	r0, r25
     9b4:	08 95       	ret

000009b6 <__fp_pscB>:
     9b6:	00 24       	eor	r0, r0
     9b8:	0a 94       	dec	r0
     9ba:	12 16       	cp	r1, r18
     9bc:	13 06       	cpc	r1, r19
     9be:	14 06       	cpc	r1, r20
     9c0:	05 06       	cpc	r0, r21
     9c2:	08 95       	ret

000009c4 <__fp_round>:
     9c4:	09 2e       	mov	r0, r25
     9c6:	03 94       	inc	r0
     9c8:	00 0c       	add	r0, r0
     9ca:	11 f4       	brne	.+4      	; 0x9d0 <__fp_round+0xc>
     9cc:	88 23       	and	r24, r24
     9ce:	52 f0       	brmi	.+20     	; 0x9e4 <__fp_round+0x20>
     9d0:	bb 0f       	add	r27, r27
     9d2:	40 f4       	brcc	.+16     	; 0x9e4 <__fp_round+0x20>
     9d4:	bf 2b       	or	r27, r31
     9d6:	11 f4       	brne	.+4      	; 0x9dc <__fp_round+0x18>
     9d8:	60 ff       	sbrs	r22, 0
     9da:	04 c0       	rjmp	.+8      	; 0x9e4 <__fp_round+0x20>
     9dc:	6f 5f       	subi	r22, 0xFF	; 255
     9de:	7f 4f       	sbci	r23, 0xFF	; 255
     9e0:	8f 4f       	sbci	r24, 0xFF	; 255
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	08 95       	ret

000009e6 <__fp_split3>:
     9e6:	57 fd       	sbrc	r21, 7
     9e8:	90 58       	subi	r25, 0x80	; 128
     9ea:	44 0f       	add	r20, r20
     9ec:	55 1f       	adc	r21, r21
     9ee:	59 f0       	breq	.+22     	; 0xa06 <__fp_splitA+0x10>
     9f0:	5f 3f       	cpi	r21, 0xFF	; 255
     9f2:	71 f0       	breq	.+28     	; 0xa10 <__fp_splitA+0x1a>
     9f4:	47 95       	ror	r20

000009f6 <__fp_splitA>:
     9f6:	88 0f       	add	r24, r24
     9f8:	97 fb       	bst	r25, 7
     9fa:	99 1f       	adc	r25, r25
     9fc:	61 f0       	breq	.+24     	; 0xa16 <__fp_splitA+0x20>
     9fe:	9f 3f       	cpi	r25, 0xFF	; 255
     a00:	79 f0       	breq	.+30     	; 0xa20 <__fp_splitA+0x2a>
     a02:	87 95       	ror	r24
     a04:	08 95       	ret
     a06:	12 16       	cp	r1, r18
     a08:	13 06       	cpc	r1, r19
     a0a:	14 06       	cpc	r1, r20
     a0c:	55 1f       	adc	r21, r21
     a0e:	f2 cf       	rjmp	.-28     	; 0x9f4 <__fp_split3+0xe>
     a10:	46 95       	lsr	r20
     a12:	f1 df       	rcall	.-30     	; 0x9f6 <__fp_splitA>
     a14:	08 c0       	rjmp	.+16     	; 0xa26 <__fp_splitA+0x30>
     a16:	16 16       	cp	r1, r22
     a18:	17 06       	cpc	r1, r23
     a1a:	18 06       	cpc	r1, r24
     a1c:	99 1f       	adc	r25, r25
     a1e:	f1 cf       	rjmp	.-30     	; 0xa02 <__fp_splitA+0xc>
     a20:	86 95       	lsr	r24
     a22:	71 05       	cpc	r23, r1
     a24:	61 05       	cpc	r22, r1
     a26:	08 94       	sec
     a28:	08 95       	ret

00000a2a <__fp_zero>:
     a2a:	e8 94       	clt

00000a2c <__fp_szero>:
     a2c:	bb 27       	eor	r27, r27
     a2e:	66 27       	eor	r22, r22
     a30:	77 27       	eor	r23, r23
     a32:	cb 01       	movw	r24, r22
     a34:	97 f9       	bld	r25, 7
     a36:	08 95       	ret

00000a38 <__mulsf3>:
     a38:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__mulsf3x>
     a3c:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_round>
     a40:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__fp_pscA>
     a44:	38 f0       	brcs	.+14     	; 0xa54 <__mulsf3+0x1c>
     a46:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_pscB>
     a4a:	20 f0       	brcs	.+8      	; 0xa54 <__mulsf3+0x1c>
     a4c:	95 23       	and	r25, r21
     a4e:	11 f0       	breq	.+4      	; 0xa54 <__mulsf3+0x1c>
     a50:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     a54:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>
     a58:	11 24       	eor	r1, r1
     a5a:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>

00000a5e <__mulsf3x>:
     a5e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_split3>
     a62:	70 f3       	brcs	.-36     	; 0xa40 <__mulsf3+0x8>

00000a64 <__mulsf3_pse>:
     a64:	95 9f       	mul	r25, r21
     a66:	c1 f3       	breq	.-16     	; 0xa58 <__mulsf3+0x20>
     a68:	95 0f       	add	r25, r21
     a6a:	50 e0       	ldi	r21, 0x00	; 0
     a6c:	55 1f       	adc	r21, r21
     a6e:	62 9f       	mul	r22, r18
     a70:	f0 01       	movw	r30, r0
     a72:	72 9f       	mul	r23, r18
     a74:	bb 27       	eor	r27, r27
     a76:	f0 0d       	add	r31, r0
     a78:	b1 1d       	adc	r27, r1
     a7a:	63 9f       	mul	r22, r19
     a7c:	aa 27       	eor	r26, r26
     a7e:	f0 0d       	add	r31, r0
     a80:	b1 1d       	adc	r27, r1
     a82:	aa 1f       	adc	r26, r26
     a84:	64 9f       	mul	r22, r20
     a86:	66 27       	eor	r22, r22
     a88:	b0 0d       	add	r27, r0
     a8a:	a1 1d       	adc	r26, r1
     a8c:	66 1f       	adc	r22, r22
     a8e:	82 9f       	mul	r24, r18
     a90:	22 27       	eor	r18, r18
     a92:	b0 0d       	add	r27, r0
     a94:	a1 1d       	adc	r26, r1
     a96:	62 1f       	adc	r22, r18
     a98:	73 9f       	mul	r23, r19
     a9a:	b0 0d       	add	r27, r0
     a9c:	a1 1d       	adc	r26, r1
     a9e:	62 1f       	adc	r22, r18
     aa0:	83 9f       	mul	r24, r19
     aa2:	a0 0d       	add	r26, r0
     aa4:	61 1d       	adc	r22, r1
     aa6:	22 1f       	adc	r18, r18
     aa8:	74 9f       	mul	r23, r20
     aaa:	33 27       	eor	r19, r19
     aac:	a0 0d       	add	r26, r0
     aae:	61 1d       	adc	r22, r1
     ab0:	23 1f       	adc	r18, r19
     ab2:	84 9f       	mul	r24, r20
     ab4:	60 0d       	add	r22, r0
     ab6:	21 1d       	adc	r18, r1
     ab8:	82 2f       	mov	r24, r18
     aba:	76 2f       	mov	r23, r22
     abc:	6a 2f       	mov	r22, r26
     abe:	11 24       	eor	r1, r1
     ac0:	9f 57       	subi	r25, 0x7F	; 127
     ac2:	50 40       	sbci	r21, 0x00	; 0
     ac4:	9a f0       	brmi	.+38     	; 0xaec <__mulsf3_pse+0x88>
     ac6:	f1 f0       	breq	.+60     	; 0xb04 <__mulsf3_pse+0xa0>
     ac8:	88 23       	and	r24, r24
     aca:	4a f0       	brmi	.+18     	; 0xade <__mulsf3_pse+0x7a>
     acc:	ee 0f       	add	r30, r30
     ace:	ff 1f       	adc	r31, r31
     ad0:	bb 1f       	adc	r27, r27
     ad2:	66 1f       	adc	r22, r22
     ad4:	77 1f       	adc	r23, r23
     ad6:	88 1f       	adc	r24, r24
     ad8:	91 50       	subi	r25, 0x01	; 1
     ada:	50 40       	sbci	r21, 0x00	; 0
     adc:	a9 f7       	brne	.-22     	; 0xac8 <__mulsf3_pse+0x64>
     ade:	9e 3f       	cpi	r25, 0xFE	; 254
     ae0:	51 05       	cpc	r21, r1
     ae2:	80 f0       	brcs	.+32     	; 0xb04 <__mulsf3_pse+0xa0>
     ae4:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     ae8:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>
     aec:	5f 3f       	cpi	r21, 0xFF	; 255
     aee:	e4 f3       	brlt	.-8      	; 0xae8 <__mulsf3_pse+0x84>
     af0:	98 3e       	cpi	r25, 0xE8	; 232
     af2:	d4 f3       	brlt	.-12     	; 0xae8 <__mulsf3_pse+0x84>
     af4:	86 95       	lsr	r24
     af6:	77 95       	ror	r23
     af8:	67 95       	ror	r22
     afa:	b7 95       	ror	r27
     afc:	f7 95       	ror	r31
     afe:	e7 95       	ror	r30
     b00:	9f 5f       	subi	r25, 0xFF	; 255
     b02:	c1 f7       	brne	.-16     	; 0xaf4 <__mulsf3_pse+0x90>
     b04:	fe 2b       	or	r31, r30
     b06:	88 0f       	add	r24, r24
     b08:	91 1d       	adc	r25, r1
     b0a:	96 95       	lsr	r25
     b0c:	87 95       	ror	r24
     b0e:	97 f9       	bld	r25, 7
     b10:	08 95       	ret

00000b12 <pow>:
     b12:	fa 01       	movw	r30, r20
     b14:	ee 0f       	add	r30, r30
     b16:	ff 1f       	adc	r31, r31
     b18:	30 96       	adiw	r30, 0x00	; 0
     b1a:	21 05       	cpc	r18, r1
     b1c:	31 05       	cpc	r19, r1
     b1e:	a1 f1       	breq	.+104    	; 0xb88 <pow+0x76>
     b20:	61 15       	cp	r22, r1
     b22:	71 05       	cpc	r23, r1
     b24:	61 f4       	brne	.+24     	; 0xb3e <pow+0x2c>
     b26:	80 38       	cpi	r24, 0x80	; 128
     b28:	bf e3       	ldi	r27, 0x3F	; 63
     b2a:	9b 07       	cpc	r25, r27
     b2c:	49 f1       	breq	.+82     	; 0xb80 <pow+0x6e>
     b2e:	68 94       	set
     b30:	90 38       	cpi	r25, 0x80	; 128
     b32:	81 05       	cpc	r24, r1
     b34:	61 f0       	breq	.+24     	; 0xb4e <pow+0x3c>
     b36:	80 38       	cpi	r24, 0x80	; 128
     b38:	bf ef       	ldi	r27, 0xFF	; 255
     b3a:	9b 07       	cpc	r25, r27
     b3c:	41 f0       	breq	.+16     	; 0xb4e <pow+0x3c>
     b3e:	99 23       	and	r25, r25
     b40:	4a f5       	brpl	.+82     	; 0xb94 <pow+0x82>
     b42:	ff 3f       	cpi	r31, 0xFF	; 255
     b44:	e1 05       	cpc	r30, r1
     b46:	31 05       	cpc	r19, r1
     b48:	21 05       	cpc	r18, r1
     b4a:	19 f1       	breq	.+70     	; 0xb92 <pow+0x80>
     b4c:	e8 94       	clt
     b4e:	08 94       	sec
     b50:	e7 95       	ror	r30
     b52:	d9 01       	movw	r26, r18
     b54:	aa 23       	and	r26, r26
     b56:	29 f4       	brne	.+10     	; 0xb62 <pow+0x50>
     b58:	ab 2f       	mov	r26, r27
     b5a:	be 2f       	mov	r27, r30
     b5c:	f8 5f       	subi	r31, 0xF8	; 248
     b5e:	d0 f3       	brcs	.-12     	; 0xb54 <pow+0x42>
     b60:	10 c0       	rjmp	.+32     	; 0xb82 <pow+0x70>
     b62:	ff 5f       	subi	r31, 0xFF	; 255
     b64:	70 f4       	brcc	.+28     	; 0xb82 <pow+0x70>
     b66:	a6 95       	lsr	r26
     b68:	e0 f7       	brcc	.-8      	; 0xb62 <pow+0x50>
     b6a:	f7 39       	cpi	r31, 0x97	; 151
     b6c:	50 f0       	brcs	.+20     	; 0xb82 <pow+0x70>
     b6e:	19 f0       	breq	.+6      	; 0xb76 <pow+0x64>
     b70:	ff 3a       	cpi	r31, 0xAF	; 175
     b72:	38 f4       	brcc	.+14     	; 0xb82 <pow+0x70>
     b74:	9f 77       	andi	r25, 0x7F	; 127
     b76:	9f 93       	push	r25
     b78:	0d d0       	rcall	.+26     	; 0xb94 <pow+0x82>
     b7a:	0f 90       	pop	r0
     b7c:	07 fc       	sbrc	r0, 7
     b7e:	90 58       	subi	r25, 0x80	; 128
     b80:	08 95       	ret
     b82:	46 f0       	brts	.+16     	; 0xb94 <pow+0x82>
     b84:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>
     b88:	60 e0       	ldi	r22, 0x00	; 0
     b8a:	70 e0       	ldi	r23, 0x00	; 0
     b8c:	80 e8       	ldi	r24, 0x80	; 128
     b8e:	9f e3       	ldi	r25, 0x3F	; 63
     b90:	08 95       	ret
     b92:	4f e7       	ldi	r20, 0x7F	; 127
     b94:	9f 77       	andi	r25, 0x7F	; 127
     b96:	5f 93       	push	r21
     b98:	4f 93       	push	r20
     b9a:	3f 93       	push	r19
     b9c:	2f 93       	push	r18
     b9e:	0e 94 84 06 	call	0xd08	; 0xd08 <log>
     ba2:	2f 91       	pop	r18
     ba4:	3f 91       	pop	r19
     ba6:	4f 91       	pop	r20
     ba8:	5f 91       	pop	r21
     baa:	0e 94 1c 05 	call	0xa38	; 0xa38 <__mulsf3>
     bae:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <exp>
     bb2:	29 f4       	brne	.+10     	; 0xbbe <pow+0xac>
     bb4:	16 f0       	brts	.+4      	; 0xbba <pow+0xa8>
     bb6:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     bba:	0c 94 15 05 	jmp	0xa2a	; 0xa2a <__fp_zero>
     bbe:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>

00000bc2 <exp>:
     bc2:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__fp_splitA>
     bc6:	a8 f3       	brcs	.-22     	; 0xbb2 <pow+0xa0>
     bc8:	96 38       	cpi	r25, 0x86	; 134
     bca:	a0 f7       	brcc	.-24     	; 0xbb4 <pow+0xa2>
     bcc:	07 f8       	bld	r0, 7
     bce:	0f 92       	push	r0
     bd0:	e8 94       	clt
     bd2:	2b e3       	ldi	r18, 0x3B	; 59
     bd4:	3a ea       	ldi	r19, 0xAA	; 170
     bd6:	48 eb       	ldi	r20, 0xB8	; 184
     bd8:	5f e7       	ldi	r21, 0x7F	; 127
     bda:	0e 94 32 05 	call	0xa64	; 0xa64 <__mulsf3_pse>
     bde:	0f 92       	push	r0
     be0:	0f 92       	push	r0
     be2:	0f 92       	push	r0
     be4:	4d b7       	in	r20, 0x3d	; 61
     be6:	5e b7       	in	r21, 0x3e	; 62
     be8:	0f 92       	push	r0
     bea:	0e 94 cc 06 	call	0xd98	; 0xd98 <modf>
     bee:	ec e8       	ldi	r30, 0x8C	; 140
     bf0:	f0 e0       	ldi	r31, 0x00	; 0
     bf2:	0e 94 13 06 	call	0xc26	; 0xc26 <__fp_powser>
     bf6:	4f 91       	pop	r20
     bf8:	5f 91       	pop	r21
     bfa:	ef 91       	pop	r30
     bfc:	ff 91       	pop	r31
     bfe:	e5 95       	asr	r30
     c00:	ee 1f       	adc	r30, r30
     c02:	ff 1f       	adc	r31, r31
     c04:	49 f0       	breq	.+18     	; 0xc18 <exp+0x56>
     c06:	fe 57       	subi	r31, 0x7E	; 126
     c08:	e0 68       	ori	r30, 0x80	; 128
     c0a:	44 27       	eor	r20, r20
     c0c:	ee 0f       	add	r30, r30
     c0e:	44 1f       	adc	r20, r20
     c10:	fa 95       	dec	r31
     c12:	e1 f7       	brne	.-8      	; 0xc0c <exp+0x4a>
     c14:	41 95       	neg	r20
     c16:	55 0b       	sbc	r21, r21
     c18:	0e 94 46 06 	call	0xc8c	; 0xc8c <ldexp>
     c1c:	0f 90       	pop	r0
     c1e:	07 fe       	sbrs	r0, 7
     c20:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <inverse>
     c24:	08 95       	ret

00000c26 <__fp_powser>:
     c26:	df 93       	push	r29
     c28:	cf 93       	push	r28
     c2a:	1f 93       	push	r17
     c2c:	0f 93       	push	r16
     c2e:	ff 92       	push	r15
     c30:	ef 92       	push	r14
     c32:	df 92       	push	r13
     c34:	7b 01       	movw	r14, r22
     c36:	8c 01       	movw	r16, r24
     c38:	68 94       	set
     c3a:	06 c0       	rjmp	.+12     	; 0xc48 <__fp_powser+0x22>
     c3c:	da 2e       	mov	r13, r26
     c3e:	ef 01       	movw	r28, r30
     c40:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__mulsf3x>
     c44:	fe 01       	movw	r30, r28
     c46:	e8 94       	clt
     c48:	a5 91       	lpm	r26, Z+
     c4a:	25 91       	lpm	r18, Z+
     c4c:	35 91       	lpm	r19, Z+
     c4e:	45 91       	lpm	r20, Z+
     c50:	55 91       	lpm	r21, Z+
     c52:	a6 f3       	brts	.-24     	; 0xc3c <__fp_powser+0x16>
     c54:	ef 01       	movw	r28, r30
     c56:	0e 94 03 04 	call	0x806	; 0x806 <__addsf3x>
     c5a:	fe 01       	movw	r30, r28
     c5c:	97 01       	movw	r18, r14
     c5e:	a8 01       	movw	r20, r16
     c60:	da 94       	dec	r13
     c62:	69 f7       	brne	.-38     	; 0xc3e <__fp_powser+0x18>
     c64:	df 90       	pop	r13
     c66:	ef 90       	pop	r14
     c68:	ff 90       	pop	r15
     c6a:	0f 91       	pop	r16
     c6c:	1f 91       	pop	r17
     c6e:	cf 91       	pop	r28
     c70:	df 91       	pop	r29
     c72:	08 95       	ret

00000c74 <inverse>:
     c74:	9b 01       	movw	r18, r22
     c76:	ac 01       	movw	r20, r24
     c78:	60 e0       	ldi	r22, 0x00	; 0
     c7a:	70 e0       	ldi	r23, 0x00	; 0
     c7c:	80 e8       	ldi	r24, 0x80	; 128
     c7e:	9f e3       	ldi	r25, 0x3F	; 63
     c80:	0c 94 00 07 	jmp	0xe00	; 0xe00 <__divsf3>
     c84:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     c88:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_mpack>

00000c8c <ldexp>:
     c8c:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__fp_splitA>
     c90:	d8 f3       	brcs	.-10     	; 0xc88 <inverse+0x14>
     c92:	99 23       	and	r25, r25
     c94:	c9 f3       	breq	.-14     	; 0xc88 <inverse+0x14>
     c96:	94 0f       	add	r25, r20
     c98:	51 1d       	adc	r21, r1
     c9a:	a3 f3       	brvs	.-24     	; 0xc84 <inverse+0x10>
     c9c:	91 50       	subi	r25, 0x01	; 1
     c9e:	50 40       	sbci	r21, 0x00	; 0
     ca0:	94 f0       	brlt	.+36     	; 0xcc6 <ldexp+0x3a>
     ca2:	59 f0       	breq	.+22     	; 0xcba <ldexp+0x2e>
     ca4:	88 23       	and	r24, r24
     ca6:	32 f0       	brmi	.+12     	; 0xcb4 <ldexp+0x28>
     ca8:	66 0f       	add	r22, r22
     caa:	77 1f       	adc	r23, r23
     cac:	88 1f       	adc	r24, r24
     cae:	91 50       	subi	r25, 0x01	; 1
     cb0:	50 40       	sbci	r21, 0x00	; 0
     cb2:	c1 f7       	brne	.-16     	; 0xca4 <ldexp+0x18>
     cb4:	9e 3f       	cpi	r25, 0xFE	; 254
     cb6:	51 05       	cpc	r21, r1
     cb8:	2c f7       	brge	.-54     	; 0xc84 <inverse+0x10>
     cba:	88 0f       	add	r24, r24
     cbc:	91 1d       	adc	r25, r1
     cbe:	96 95       	lsr	r25
     cc0:	87 95       	ror	r24
     cc2:	97 f9       	bld	r25, 7
     cc4:	08 95       	ret
     cc6:	5f 3f       	cpi	r21, 0xFF	; 255
     cc8:	ac f0       	brlt	.+42     	; 0xcf4 <ldexp+0x68>
     cca:	98 3e       	cpi	r25, 0xE8	; 232
     ccc:	9c f0       	brlt	.+38     	; 0xcf4 <ldexp+0x68>
     cce:	bb 27       	eor	r27, r27
     cd0:	86 95       	lsr	r24
     cd2:	77 95       	ror	r23
     cd4:	67 95       	ror	r22
     cd6:	b7 95       	ror	r27
     cd8:	08 f4       	brcc	.+2      	; 0xcdc <ldexp+0x50>
     cda:	b1 60       	ori	r27, 0x01	; 1
     cdc:	93 95       	inc	r25
     cde:	c1 f7       	brne	.-16     	; 0xcd0 <ldexp+0x44>
     ce0:	bb 0f       	add	r27, r27
     ce2:	58 f7       	brcc	.-42     	; 0xcba <ldexp+0x2e>
     ce4:	11 f4       	brne	.+4      	; 0xcea <ldexp+0x5e>
     ce6:	60 ff       	sbrs	r22, 0
     ce8:	e8 cf       	rjmp	.-48     	; 0xcba <ldexp+0x2e>
     cea:	6f 5f       	subi	r22, 0xFF	; 255
     cec:	7f 4f       	sbci	r23, 0xFF	; 255
     cee:	8f 4f       	sbci	r24, 0xFF	; 255
     cf0:	9f 4f       	sbci	r25, 0xFF	; 255
     cf2:	e3 cf       	rjmp	.-58     	; 0xcba <ldexp+0x2e>
     cf4:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>
     cf8:	16 f0       	brts	.+4      	; 0xcfe <ldexp+0x72>
     cfa:	0c 94 72 07 	jmp	0xee4	; 0xee4 <__fp_mpack>
     cfe:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>
     d02:	68 94       	set
     d04:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>

00000d08 <log>:
     d08:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__fp_splitA>
     d0c:	a8 f3       	brcs	.-22     	; 0xcf8 <ldexp+0x6c>
     d0e:	99 23       	and	r25, r25
     d10:	c1 f3       	breq	.-16     	; 0xd02 <ldexp+0x76>
     d12:	ae f3       	brts	.-22     	; 0xcfe <ldexp+0x72>
     d14:	df 93       	push	r29
     d16:	cf 93       	push	r28
     d18:	1f 93       	push	r17
     d1a:	0f 93       	push	r16
     d1c:	ff 92       	push	r15
     d1e:	c9 2f       	mov	r28, r25
     d20:	dd 27       	eor	r29, r29
     d22:	88 23       	and	r24, r24
     d24:	2a f0       	brmi	.+10     	; 0xd30 <log+0x28>
     d26:	21 97       	sbiw	r28, 0x01	; 1
     d28:	66 0f       	add	r22, r22
     d2a:	77 1f       	adc	r23, r23
     d2c:	88 1f       	adc	r24, r24
     d2e:	da f7       	brpl	.-10     	; 0xd26 <log+0x1e>
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	40 e8       	ldi	r20, 0x80	; 128
     d36:	5f eb       	ldi	r21, 0xBF	; 191
     d38:	9f e3       	ldi	r25, 0x3F	; 63
     d3a:	88 39       	cpi	r24, 0x98	; 152
     d3c:	20 f0       	brcs	.+8      	; 0xd46 <log+0x3e>
     d3e:	80 3e       	cpi	r24, 0xE0	; 224
     d40:	38 f0       	brcs	.+14     	; 0xd50 <log+0x48>
     d42:	21 96       	adiw	r28, 0x01	; 1
     d44:	8f 77       	andi	r24, 0x7F	; 127
     d46:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__addsf3>
     d4a:	e4 eb       	ldi	r30, 0xB4	; 180
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <log+0x50>
     d50:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__addsf3>
     d54:	e1 ee       	ldi	r30, 0xE1	; 225
     d56:	f0 e0       	ldi	r31, 0x00	; 0
     d58:	0e 94 13 06 	call	0xc26	; 0xc26 <__fp_powser>
     d5c:	8b 01       	movw	r16, r22
     d5e:	be 01       	movw	r22, r28
     d60:	ec 01       	movw	r28, r24
     d62:	fb 2e       	mov	r15, r27
     d64:	6f 57       	subi	r22, 0x7F	; 127
     d66:	71 09       	sbc	r23, r1
     d68:	75 95       	asr	r23
     d6a:	77 1f       	adc	r23, r23
     d6c:	88 0b       	sbc	r24, r24
     d6e:	99 0b       	sbc	r25, r25
     d70:	0e 94 90 04 	call	0x920	; 0x920 <__floatsisf>
     d74:	28 e1       	ldi	r18, 0x18	; 24
     d76:	32 e7       	ldi	r19, 0x72	; 114
     d78:	41 e3       	ldi	r20, 0x31	; 49
     d7a:	5f e3       	ldi	r21, 0x3F	; 63
     d7c:	0e 94 2f 05 	call	0xa5e	; 0xa5e <__mulsf3x>
     d80:	af 2d       	mov	r26, r15
     d82:	98 01       	movw	r18, r16
     d84:	ae 01       	movw	r20, r28
     d86:	ff 90       	pop	r15
     d88:	0f 91       	pop	r16
     d8a:	1f 91       	pop	r17
     d8c:	cf 91       	pop	r28
     d8e:	df 91       	pop	r29
     d90:	0e 94 03 04 	call	0x806	; 0x806 <__addsf3x>
     d94:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_round>

00000d98 <modf>:
     d98:	fa 01       	movw	r30, r20
     d9a:	dc 01       	movw	r26, r24
     d9c:	aa 0f       	add	r26, r26
     d9e:	bb 1f       	adc	r27, r27
     da0:	9b 01       	movw	r18, r22
     da2:	ac 01       	movw	r20, r24
     da4:	bf 57       	subi	r27, 0x7F	; 127
     da6:	28 f4       	brcc	.+10     	; 0xdb2 <modf+0x1a>
     da8:	22 27       	eor	r18, r18
     daa:	33 27       	eor	r19, r19
     dac:	44 27       	eor	r20, r20
     dae:	50 78       	andi	r21, 0x80	; 128
     db0:	20 c0       	rjmp	.+64     	; 0xdf2 <modf+0x5a>
     db2:	b7 51       	subi	r27, 0x17	; 23
     db4:	90 f4       	brcc	.+36     	; 0xdda <modf+0x42>
     db6:	ab 2f       	mov	r26, r27
     db8:	00 24       	eor	r0, r0
     dba:	46 95       	lsr	r20
     dbc:	37 95       	ror	r19
     dbe:	27 95       	ror	r18
     dc0:	01 1c       	adc	r0, r1
     dc2:	a3 95       	inc	r26
     dc4:	d2 f3       	brmi	.-12     	; 0xdba <modf+0x22>
     dc6:	00 20       	and	r0, r0
     dc8:	71 f0       	breq	.+28     	; 0xde6 <modf+0x4e>
     dca:	22 0f       	add	r18, r18
     dcc:	33 1f       	adc	r19, r19
     dce:	44 1f       	adc	r20, r20
     dd0:	b3 95       	inc	r27
     dd2:	da f3       	brmi	.-10     	; 0xdca <modf+0x32>
     dd4:	0e d0       	rcall	.+28     	; 0xdf2 <modf+0x5a>
     dd6:	0c 94 eb 03 	jmp	0x7d6	; 0x7d6 <__subsf3>
     dda:	61 30       	cpi	r22, 0x01	; 1
     ddc:	71 05       	cpc	r23, r1
     dde:	a0 e8       	ldi	r26, 0x80	; 128
     de0:	8a 07       	cpc	r24, r26
     de2:	b9 46       	sbci	r27, 0x69	; 105
     de4:	30 f4       	brcc	.+12     	; 0xdf2 <modf+0x5a>
     de6:	9b 01       	movw	r18, r22
     de8:	ac 01       	movw	r20, r24
     dea:	66 27       	eor	r22, r22
     dec:	77 27       	eor	r23, r23
     dee:	88 27       	eor	r24, r24
     df0:	90 78       	andi	r25, 0x80	; 128
     df2:	30 96       	adiw	r30, 0x00	; 0
     df4:	21 f0       	breq	.+8      	; 0xdfe <modf+0x66>
     df6:	20 83       	st	Z, r18
     df8:	31 83       	std	Z+1, r19	; 0x01
     dfa:	42 83       	std	Z+2, r20	; 0x02
     dfc:	53 83       	std	Z+3, r21	; 0x03
     dfe:	08 95       	ret

00000e00 <__divsf3>:
     e00:	0e 94 14 07 	call	0xe28	; 0xe28 <__divsf3x>
     e04:	0c 94 e2 04 	jmp	0x9c4	; 0x9c4 <__fp_round>
     e08:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__fp_pscB>
     e0c:	58 f0       	brcs	.+22     	; 0xe24 <__divsf3+0x24>
     e0e:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <__fp_pscA>
     e12:	40 f0       	brcs	.+16     	; 0xe24 <__divsf3+0x24>
     e14:	29 f4       	brne	.+10     	; 0xe20 <__divsf3+0x20>
     e16:	5f 3f       	cpi	r21, 0xFF	; 255
     e18:	29 f0       	breq	.+10     	; 0xe24 <__divsf3+0x24>
     e1a:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     e1e:	51 11       	cpse	r21, r1
     e20:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>
     e24:	0c 94 d1 04 	jmp	0x9a2	; 0x9a2 <__fp_nan>

00000e28 <__divsf3x>:
     e28:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fp_split3>
     e2c:	68 f3       	brcs	.-38     	; 0xe08 <__divsf3+0x8>

00000e2e <__divsf3_pse>:
     e2e:	99 23       	and	r25, r25
     e30:	b1 f3       	breq	.-20     	; 0xe1e <__divsf3+0x1e>
     e32:	55 23       	and	r21, r21
     e34:	91 f3       	breq	.-28     	; 0xe1a <__divsf3+0x1a>
     e36:	95 1b       	sub	r25, r21
     e38:	55 0b       	sbc	r21, r21
     e3a:	bb 27       	eor	r27, r27
     e3c:	aa 27       	eor	r26, r26
     e3e:	62 17       	cp	r22, r18
     e40:	73 07       	cpc	r23, r19
     e42:	84 07       	cpc	r24, r20
     e44:	38 f0       	brcs	.+14     	; 0xe54 <__divsf3_pse+0x26>
     e46:	9f 5f       	subi	r25, 0xFF	; 255
     e48:	5f 4f       	sbci	r21, 0xFF	; 255
     e4a:	22 0f       	add	r18, r18
     e4c:	33 1f       	adc	r19, r19
     e4e:	44 1f       	adc	r20, r20
     e50:	aa 1f       	adc	r26, r26
     e52:	a9 f3       	breq	.-22     	; 0xe3e <__divsf3_pse+0x10>
     e54:	35 d0       	rcall	.+106    	; 0xec0 <__divsf3_pse+0x92>
     e56:	0e 2e       	mov	r0, r30
     e58:	3a f0       	brmi	.+14     	; 0xe68 <__divsf3_pse+0x3a>
     e5a:	e0 e8       	ldi	r30, 0x80	; 128
     e5c:	32 d0       	rcall	.+100    	; 0xec2 <__divsf3_pse+0x94>
     e5e:	91 50       	subi	r25, 0x01	; 1
     e60:	50 40       	sbci	r21, 0x00	; 0
     e62:	e6 95       	lsr	r30
     e64:	00 1c       	adc	r0, r0
     e66:	ca f7       	brpl	.-14     	; 0xe5a <__divsf3_pse+0x2c>
     e68:	2b d0       	rcall	.+86     	; 0xec0 <__divsf3_pse+0x92>
     e6a:	fe 2f       	mov	r31, r30
     e6c:	29 d0       	rcall	.+82     	; 0xec0 <__divsf3_pse+0x92>
     e6e:	66 0f       	add	r22, r22
     e70:	77 1f       	adc	r23, r23
     e72:	88 1f       	adc	r24, r24
     e74:	bb 1f       	adc	r27, r27
     e76:	26 17       	cp	r18, r22
     e78:	37 07       	cpc	r19, r23
     e7a:	48 07       	cpc	r20, r24
     e7c:	ab 07       	cpc	r26, r27
     e7e:	b0 e8       	ldi	r27, 0x80	; 128
     e80:	09 f0       	breq	.+2      	; 0xe84 <__divsf3_pse+0x56>
     e82:	bb 0b       	sbc	r27, r27
     e84:	80 2d       	mov	r24, r0
     e86:	bf 01       	movw	r22, r30
     e88:	ff 27       	eor	r31, r31
     e8a:	93 58       	subi	r25, 0x83	; 131
     e8c:	5f 4f       	sbci	r21, 0xFF	; 255
     e8e:	3a f0       	brmi	.+14     	; 0xe9e <__divsf3_pse+0x70>
     e90:	9e 3f       	cpi	r25, 0xFE	; 254
     e92:	51 05       	cpc	r21, r1
     e94:	78 f0       	brcs	.+30     	; 0xeb4 <__divsf3_pse+0x86>
     e96:	0c 94 cb 04 	jmp	0x996	; 0x996 <__fp_inf>
     e9a:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__fp_szero>
     e9e:	5f 3f       	cpi	r21, 0xFF	; 255
     ea0:	e4 f3       	brlt	.-8      	; 0xe9a <__divsf3_pse+0x6c>
     ea2:	98 3e       	cpi	r25, 0xE8	; 232
     ea4:	d4 f3       	brlt	.-12     	; 0xe9a <__divsf3_pse+0x6c>
     ea6:	86 95       	lsr	r24
     ea8:	77 95       	ror	r23
     eaa:	67 95       	ror	r22
     eac:	b7 95       	ror	r27
     eae:	f7 95       	ror	r31
     eb0:	9f 5f       	subi	r25, 0xFF	; 255
     eb2:	c9 f7       	brne	.-14     	; 0xea6 <__divsf3_pse+0x78>
     eb4:	88 0f       	add	r24, r24
     eb6:	91 1d       	adc	r25, r1
     eb8:	96 95       	lsr	r25
     eba:	87 95       	ror	r24
     ebc:	97 f9       	bld	r25, 7
     ebe:	08 95       	ret
     ec0:	e1 e0       	ldi	r30, 0x01	; 1
     ec2:	66 0f       	add	r22, r22
     ec4:	77 1f       	adc	r23, r23
     ec6:	88 1f       	adc	r24, r24
     ec8:	bb 1f       	adc	r27, r27
     eca:	62 17       	cp	r22, r18
     ecc:	73 07       	cpc	r23, r19
     ece:	84 07       	cpc	r24, r20
     ed0:	ba 07       	cpc	r27, r26
     ed2:	20 f0       	brcs	.+8      	; 0xedc <__divsf3_pse+0xae>
     ed4:	62 1b       	sub	r22, r18
     ed6:	73 0b       	sbc	r23, r19
     ed8:	84 0b       	sbc	r24, r20
     eda:	ba 0b       	sbc	r27, r26
     edc:	ee 1f       	adc	r30, r30
     ede:	88 f7       	brcc	.-30     	; 0xec2 <__divsf3_pse+0x94>
     ee0:	e0 95       	com	r30
     ee2:	08 95       	ret

00000ee4 <__fp_mpack>:
     ee4:	9f 3f       	cpi	r25, 0xFF	; 255
     ee6:	31 f0       	breq	.+12     	; 0xef4 <__fp_mpack_finite+0xc>

00000ee8 <__fp_mpack_finite>:
     ee8:	91 50       	subi	r25, 0x01	; 1
     eea:	20 f4       	brcc	.+8      	; 0xef4 <__fp_mpack_finite+0xc>
     eec:	87 95       	ror	r24
     eee:	77 95       	ror	r23
     ef0:	67 95       	ror	r22
     ef2:	b7 95       	ror	r27
     ef4:	88 0f       	add	r24, r24
     ef6:	91 1d       	adc	r25, r1
     ef8:	96 95       	lsr	r25
     efa:	87 95       	ror	r24
     efc:	97 f9       	bld	r25, 7
     efe:	08 95       	ret

00000f00 <__ashrdi3>:
     f00:	97 fb       	bst	r25, 7
     f02:	10 f8       	bld	r1, 0

00000f04 <__lshrdi3>:
     f04:	16 94       	lsr	r1
     f06:	00 08       	sbc	r0, r0
     f08:	0f 93       	push	r16
     f0a:	08 30       	cpi	r16, 0x08	; 8
     f0c:	98 f0       	brcs	.+38     	; 0xf34 <__lshrdi3+0x30>
     f0e:	08 50       	subi	r16, 0x08	; 8
     f10:	23 2f       	mov	r18, r19
     f12:	34 2f       	mov	r19, r20
     f14:	45 2f       	mov	r20, r21
     f16:	56 2f       	mov	r21, r22
     f18:	67 2f       	mov	r22, r23
     f1a:	78 2f       	mov	r23, r24
     f1c:	89 2f       	mov	r24, r25
     f1e:	90 2d       	mov	r25, r0
     f20:	f4 cf       	rjmp	.-24     	; 0xf0a <__lshrdi3+0x6>
     f22:	05 94       	asr	r0
     f24:	97 95       	ror	r25
     f26:	87 95       	ror	r24
     f28:	77 95       	ror	r23
     f2a:	67 95       	ror	r22
     f2c:	57 95       	ror	r21
     f2e:	47 95       	ror	r20
     f30:	37 95       	ror	r19
     f32:	27 95       	ror	r18
     f34:	0a 95       	dec	r16
     f36:	aa f7       	brpl	.-22     	; 0xf22 <__lshrdi3+0x1e>
     f38:	0f 91       	pop	r16
     f3a:	08 95       	ret

00000f3c <__adddi3_s8>:
     f3c:	00 24       	eor	r0, r0
     f3e:	a7 fd       	sbrc	r26, 7
     f40:	00 94       	com	r0
     f42:	2a 0f       	add	r18, r26
     f44:	30 1d       	adc	r19, r0
     f46:	40 1d       	adc	r20, r0
     f48:	50 1d       	adc	r21, r0
     f4a:	60 1d       	adc	r22, r0
     f4c:	70 1d       	adc	r23, r0
     f4e:	80 1d       	adc	r24, r0
     f50:	90 1d       	adc	r25, r0
     f52:	08 95       	ret

00000f54 <__itoa_ncheck>:
     f54:	bb 27       	eor	r27, r27
     f56:	4a 30       	cpi	r20, 0x0A	; 10
     f58:	31 f4       	brne	.+12     	; 0xf66 <__itoa_ncheck+0x12>
     f5a:	99 23       	and	r25, r25
     f5c:	22 f4       	brpl	.+8      	; 0xf66 <__itoa_ncheck+0x12>
     f5e:	bd e2       	ldi	r27, 0x2D	; 45
     f60:	90 95       	com	r25
     f62:	81 95       	neg	r24
     f64:	9f 4f       	sbci	r25, 0xFF	; 255
     f66:	0c 94 b6 07 	jmp	0xf6c	; 0xf6c <__utoa_common>

00000f6a <__utoa_ncheck>:
     f6a:	bb 27       	eor	r27, r27

00000f6c <__utoa_common>:
     f6c:	fb 01       	movw	r30, r22
     f6e:	55 27       	eor	r21, r21
     f70:	aa 27       	eor	r26, r26
     f72:	88 0f       	add	r24, r24
     f74:	99 1f       	adc	r25, r25
     f76:	aa 1f       	adc	r26, r26
     f78:	a4 17       	cp	r26, r20
     f7a:	10 f0       	brcs	.+4      	; 0xf80 <__utoa_common+0x14>
     f7c:	a4 1b       	sub	r26, r20
     f7e:	83 95       	inc	r24
     f80:	50 51       	subi	r21, 0x10	; 16
     f82:	b9 f7       	brne	.-18     	; 0xf72 <__utoa_common+0x6>
     f84:	a0 5d       	subi	r26, 0xD0	; 208
     f86:	aa 33       	cpi	r26, 0x3A	; 58
     f88:	08 f0       	brcs	.+2      	; 0xf8c <__utoa_common+0x20>
     f8a:	a9 5d       	subi	r26, 0xD9	; 217
     f8c:	a1 93       	st	Z+, r26
     f8e:	00 97       	sbiw	r24, 0x00	; 0
     f90:	79 f7       	brne	.-34     	; 0xf70 <__utoa_common+0x4>
     f92:	b1 11       	cpse	r27, r1
     f94:	b1 93       	st	Z+, r27
     f96:	11 92       	st	Z+, r1
     f98:	cb 01       	movw	r24, r22
     f9a:	0c 94 e8 09 	jmp	0x13d0	; 0x13d0 <strrev>

00000f9e <sprintf>:
     f9e:	ae e0       	ldi	r26, 0x0E	; 14
     fa0:	b0 e0       	ldi	r27, 0x00	; 0
     fa2:	e5 ed       	ldi	r30, 0xD5	; 213
     fa4:	f7 e0       	ldi	r31, 0x07	; 7
     fa6:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <__prologue_saves__+0x1c>
     faa:	0d 89       	ldd	r16, Y+21	; 0x15
     fac:	1e 89       	ldd	r17, Y+22	; 0x16
     fae:	86 e0       	ldi	r24, 0x06	; 6
     fb0:	8c 83       	std	Y+4, r24	; 0x04
     fb2:	1a 83       	std	Y+2, r17	; 0x02
     fb4:	09 83       	std	Y+1, r16	; 0x01
     fb6:	8f ef       	ldi	r24, 0xFF	; 255
     fb8:	9f e7       	ldi	r25, 0x7F	; 127
     fba:	9e 83       	std	Y+6, r25	; 0x06
     fbc:	8d 83       	std	Y+5, r24	; 0x05
     fbe:	ae 01       	movw	r20, r28
     fc0:	47 5e       	subi	r20, 0xE7	; 231
     fc2:	5f 4f       	sbci	r21, 0xFF	; 255
     fc4:	6f 89       	ldd	r22, Y+23	; 0x17
     fc6:	78 8d       	ldd	r23, Y+24	; 0x18
     fc8:	ce 01       	movw	r24, r28
     fca:	01 96       	adiw	r24, 0x01	; 1
     fcc:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <vfprintf>
     fd0:	ef 81       	ldd	r30, Y+7	; 0x07
     fd2:	f8 85       	ldd	r31, Y+8	; 0x08
     fd4:	e0 0f       	add	r30, r16
     fd6:	f1 1f       	adc	r31, r17
     fd8:	10 82       	st	Z, r1
     fda:	2e 96       	adiw	r28, 0x0e	; 14
     fdc:	e4 e0       	ldi	r30, 0x04	; 4
     fde:	0c 94 bc 0a 	jmp	0x1578	; 0x1578 <__epilogue_restores__+0x1c>

00000fe2 <vfprintf>:
     fe2:	ab e0       	ldi	r26, 0x0B	; 11
     fe4:	b0 e0       	ldi	r27, 0x00	; 0
     fe6:	e7 ef       	ldi	r30, 0xF7	; 247
     fe8:	f7 e0       	ldi	r31, 0x07	; 7
     fea:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__prologue_saves__>
     fee:	6c 01       	movw	r12, r24
     ff0:	7b 01       	movw	r14, r22
     ff2:	8a 01       	movw	r16, r20
     ff4:	fc 01       	movw	r30, r24
     ff6:	17 82       	std	Z+7, r1	; 0x07
     ff8:	16 82       	std	Z+6, r1	; 0x06
     ffa:	83 81       	ldd	r24, Z+3	; 0x03
     ffc:	81 ff       	sbrs	r24, 1
     ffe:	cc c1       	rjmp	.+920    	; 0x1398 <__stack+0x299>
    1000:	ce 01       	movw	r24, r28
    1002:	01 96       	adiw	r24, 0x01	; 1
    1004:	3c 01       	movw	r6, r24
    1006:	f6 01       	movw	r30, r12
    1008:	93 81       	ldd	r25, Z+3	; 0x03
    100a:	f7 01       	movw	r30, r14
    100c:	93 fd       	sbrc	r25, 3
    100e:	85 91       	lpm	r24, Z+
    1010:	93 ff       	sbrs	r25, 3
    1012:	81 91       	ld	r24, Z+
    1014:	7f 01       	movw	r14, r30
    1016:	88 23       	and	r24, r24
    1018:	09 f4       	brne	.+2      	; 0x101c <__DATA_REGION_LENGTH__+0x1c>
    101a:	ba c1       	rjmp	.+884    	; 0x1390 <__stack+0x291>
    101c:	85 32       	cpi	r24, 0x25	; 37
    101e:	39 f4       	brne	.+14     	; 0x102e <__DATA_REGION_LENGTH__+0x2e>
    1020:	93 fd       	sbrc	r25, 3
    1022:	85 91       	lpm	r24, Z+
    1024:	93 ff       	sbrs	r25, 3
    1026:	81 91       	ld	r24, Z+
    1028:	7f 01       	movw	r14, r30
    102a:	85 32       	cpi	r24, 0x25	; 37
    102c:	29 f4       	brne	.+10     	; 0x1038 <__DATA_REGION_LENGTH__+0x38>
    102e:	b6 01       	movw	r22, r12
    1030:	90 e0       	ldi	r25, 0x00	; 0
    1032:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1036:	e7 cf       	rjmp	.-50     	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
    1038:	91 2c       	mov	r9, r1
    103a:	21 2c       	mov	r2, r1
    103c:	31 2c       	mov	r3, r1
    103e:	ff e1       	ldi	r31, 0x1F	; 31
    1040:	f3 15       	cp	r31, r3
    1042:	d8 f0       	brcs	.+54     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1044:	8b 32       	cpi	r24, 0x2B	; 43
    1046:	79 f0       	breq	.+30     	; 0x1066 <__DATA_REGION_LENGTH__+0x66>
    1048:	38 f4       	brcc	.+14     	; 0x1058 <__DATA_REGION_LENGTH__+0x58>
    104a:	80 32       	cpi	r24, 0x20	; 32
    104c:	79 f0       	breq	.+30     	; 0x106c <__DATA_REGION_LENGTH__+0x6c>
    104e:	83 32       	cpi	r24, 0x23	; 35
    1050:	a1 f4       	brne	.+40     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1052:	23 2d       	mov	r18, r3
    1054:	20 61       	ori	r18, 0x10	; 16
    1056:	1d c0       	rjmp	.+58     	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    1058:	8d 32       	cpi	r24, 0x2D	; 45
    105a:	61 f0       	breq	.+24     	; 0x1074 <__DATA_REGION_LENGTH__+0x74>
    105c:	80 33       	cpi	r24, 0x30	; 48
    105e:	69 f4       	brne	.+26     	; 0x107a <__DATA_REGION_LENGTH__+0x7a>
    1060:	23 2d       	mov	r18, r3
    1062:	21 60       	ori	r18, 0x01	; 1
    1064:	16 c0       	rjmp	.+44     	; 0x1092 <__DATA_REGION_LENGTH__+0x92>
    1066:	83 2d       	mov	r24, r3
    1068:	82 60       	ori	r24, 0x02	; 2
    106a:	38 2e       	mov	r3, r24
    106c:	e3 2d       	mov	r30, r3
    106e:	e4 60       	ori	r30, 0x04	; 4
    1070:	3e 2e       	mov	r3, r30
    1072:	2a c0       	rjmp	.+84     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    1074:	f3 2d       	mov	r31, r3
    1076:	f8 60       	ori	r31, 0x08	; 8
    1078:	1d c0       	rjmp	.+58     	; 0x10b4 <__DATA_REGION_LENGTH__+0xb4>
    107a:	37 fc       	sbrc	r3, 7
    107c:	2d c0       	rjmp	.+90     	; 0x10d8 <__DATA_REGION_LENGTH__+0xd8>
    107e:	20 ed       	ldi	r18, 0xD0	; 208
    1080:	28 0f       	add	r18, r24
    1082:	2a 30       	cpi	r18, 0x0A	; 10
    1084:	40 f0       	brcs	.+16     	; 0x1096 <__DATA_REGION_LENGTH__+0x96>
    1086:	8e 32       	cpi	r24, 0x2E	; 46
    1088:	b9 f4       	brne	.+46     	; 0x10b8 <__DATA_REGION_LENGTH__+0xb8>
    108a:	36 fc       	sbrc	r3, 6
    108c:	81 c1       	rjmp	.+770    	; 0x1390 <__stack+0x291>
    108e:	23 2d       	mov	r18, r3
    1090:	20 64       	ori	r18, 0x40	; 64
    1092:	32 2e       	mov	r3, r18
    1094:	19 c0       	rjmp	.+50     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    1096:	36 fe       	sbrs	r3, 6
    1098:	06 c0       	rjmp	.+12     	; 0x10a6 <__DATA_REGION_LENGTH__+0xa6>
    109a:	8a e0       	ldi	r24, 0x0A	; 10
    109c:	98 9e       	mul	r9, r24
    109e:	20 0d       	add	r18, r0
    10a0:	11 24       	eor	r1, r1
    10a2:	92 2e       	mov	r9, r18
    10a4:	11 c0       	rjmp	.+34     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10a6:	ea e0       	ldi	r30, 0x0A	; 10
    10a8:	2e 9e       	mul	r2, r30
    10aa:	20 0d       	add	r18, r0
    10ac:	11 24       	eor	r1, r1
    10ae:	22 2e       	mov	r2, r18
    10b0:	f3 2d       	mov	r31, r3
    10b2:	f0 62       	ori	r31, 0x20	; 32
    10b4:	3f 2e       	mov	r3, r31
    10b6:	08 c0       	rjmp	.+16     	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10b8:	8c 36       	cpi	r24, 0x6C	; 108
    10ba:	21 f4       	brne	.+8      	; 0x10c4 <__DATA_REGION_LENGTH__+0xc4>
    10bc:	83 2d       	mov	r24, r3
    10be:	80 68       	ori	r24, 0x80	; 128
    10c0:	38 2e       	mov	r3, r24
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <__DATA_REGION_LENGTH__+0xc8>
    10c4:	88 36       	cpi	r24, 0x68	; 104
    10c6:	41 f4       	brne	.+16     	; 0x10d8 <__DATA_REGION_LENGTH__+0xd8>
    10c8:	f7 01       	movw	r30, r14
    10ca:	93 fd       	sbrc	r25, 3
    10cc:	85 91       	lpm	r24, Z+
    10ce:	93 ff       	sbrs	r25, 3
    10d0:	81 91       	ld	r24, Z+
    10d2:	7f 01       	movw	r14, r30
    10d4:	81 11       	cpse	r24, r1
    10d6:	b3 cf       	rjmp	.-154    	; 0x103e <__DATA_REGION_LENGTH__+0x3e>
    10d8:	98 2f       	mov	r25, r24
    10da:	9f 7d       	andi	r25, 0xDF	; 223
    10dc:	95 54       	subi	r25, 0x45	; 69
    10de:	93 30       	cpi	r25, 0x03	; 3
    10e0:	28 f4       	brcc	.+10     	; 0x10ec <__DATA_REGION_LENGTH__+0xec>
    10e2:	0c 5f       	subi	r16, 0xFC	; 252
    10e4:	1f 4f       	sbci	r17, 0xFF	; 255
    10e6:	9f e3       	ldi	r25, 0x3F	; 63
    10e8:	99 83       	std	Y+1, r25	; 0x01
    10ea:	0d c0       	rjmp	.+26     	; 0x1106 <__stack+0x7>
    10ec:	83 36       	cpi	r24, 0x63	; 99
    10ee:	31 f0       	breq	.+12     	; 0x10fc <__DATA_REGION_LENGTH__+0xfc>
    10f0:	83 37       	cpi	r24, 0x73	; 115
    10f2:	71 f0       	breq	.+28     	; 0x1110 <__stack+0x11>
    10f4:	83 35       	cpi	r24, 0x53	; 83
    10f6:	09 f0       	breq	.+2      	; 0x10fa <__DATA_REGION_LENGTH__+0xfa>
    10f8:	59 c0       	rjmp	.+178    	; 0x11ac <__stack+0xad>
    10fa:	21 c0       	rjmp	.+66     	; 0x113e <__stack+0x3f>
    10fc:	f8 01       	movw	r30, r16
    10fe:	80 81       	ld	r24, Z
    1100:	89 83       	std	Y+1, r24	; 0x01
    1102:	0e 5f       	subi	r16, 0xFE	; 254
    1104:	1f 4f       	sbci	r17, 0xFF	; 255
    1106:	88 24       	eor	r8, r8
    1108:	83 94       	inc	r8
    110a:	91 2c       	mov	r9, r1
    110c:	53 01       	movw	r10, r6
    110e:	13 c0       	rjmp	.+38     	; 0x1136 <__stack+0x37>
    1110:	28 01       	movw	r4, r16
    1112:	f2 e0       	ldi	r31, 0x02	; 2
    1114:	4f 0e       	add	r4, r31
    1116:	51 1c       	adc	r5, r1
    1118:	f8 01       	movw	r30, r16
    111a:	a0 80       	ld	r10, Z
    111c:	b1 80       	ldd	r11, Z+1	; 0x01
    111e:	36 fe       	sbrs	r3, 6
    1120:	03 c0       	rjmp	.+6      	; 0x1128 <__stack+0x29>
    1122:	69 2d       	mov	r22, r9
    1124:	70 e0       	ldi	r23, 0x00	; 0
    1126:	02 c0       	rjmp	.+4      	; 0x112c <__stack+0x2d>
    1128:	6f ef       	ldi	r22, 0xFF	; 255
    112a:	7f ef       	ldi	r23, 0xFF	; 255
    112c:	c5 01       	movw	r24, r10
    112e:	0e 94 dd 09 	call	0x13ba	; 0x13ba <strnlen>
    1132:	4c 01       	movw	r8, r24
    1134:	82 01       	movw	r16, r4
    1136:	f3 2d       	mov	r31, r3
    1138:	ff 77       	andi	r31, 0x7F	; 127
    113a:	3f 2e       	mov	r3, r31
    113c:	16 c0       	rjmp	.+44     	; 0x116a <__stack+0x6b>
    113e:	28 01       	movw	r4, r16
    1140:	22 e0       	ldi	r18, 0x02	; 2
    1142:	42 0e       	add	r4, r18
    1144:	51 1c       	adc	r5, r1
    1146:	f8 01       	movw	r30, r16
    1148:	a0 80       	ld	r10, Z
    114a:	b1 80       	ldd	r11, Z+1	; 0x01
    114c:	36 fe       	sbrs	r3, 6
    114e:	03 c0       	rjmp	.+6      	; 0x1156 <__stack+0x57>
    1150:	69 2d       	mov	r22, r9
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	02 c0       	rjmp	.+4      	; 0x115a <__stack+0x5b>
    1156:	6f ef       	ldi	r22, 0xFF	; 255
    1158:	7f ef       	ldi	r23, 0xFF	; 255
    115a:	c5 01       	movw	r24, r10
    115c:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <strnlen_P>
    1160:	4c 01       	movw	r8, r24
    1162:	f3 2d       	mov	r31, r3
    1164:	f0 68       	ori	r31, 0x80	; 128
    1166:	3f 2e       	mov	r3, r31
    1168:	82 01       	movw	r16, r4
    116a:	33 fc       	sbrc	r3, 3
    116c:	1b c0       	rjmp	.+54     	; 0x11a4 <__stack+0xa5>
    116e:	82 2d       	mov	r24, r2
    1170:	90 e0       	ldi	r25, 0x00	; 0
    1172:	88 16       	cp	r8, r24
    1174:	99 06       	cpc	r9, r25
    1176:	b0 f4       	brcc	.+44     	; 0x11a4 <__stack+0xa5>
    1178:	b6 01       	movw	r22, r12
    117a:	80 e2       	ldi	r24, 0x20	; 32
    117c:	90 e0       	ldi	r25, 0x00	; 0
    117e:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1182:	2a 94       	dec	r2
    1184:	f4 cf       	rjmp	.-24     	; 0x116e <__stack+0x6f>
    1186:	f5 01       	movw	r30, r10
    1188:	37 fc       	sbrc	r3, 7
    118a:	85 91       	lpm	r24, Z+
    118c:	37 fe       	sbrs	r3, 7
    118e:	81 91       	ld	r24, Z+
    1190:	5f 01       	movw	r10, r30
    1192:	b6 01       	movw	r22, r12
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    119a:	21 10       	cpse	r2, r1
    119c:	2a 94       	dec	r2
    119e:	21 e0       	ldi	r18, 0x01	; 1
    11a0:	82 1a       	sub	r8, r18
    11a2:	91 08       	sbc	r9, r1
    11a4:	81 14       	cp	r8, r1
    11a6:	91 04       	cpc	r9, r1
    11a8:	71 f7       	brne	.-36     	; 0x1186 <__stack+0x87>
    11aa:	e8 c0       	rjmp	.+464    	; 0x137c <__stack+0x27d>
    11ac:	84 36       	cpi	r24, 0x64	; 100
    11ae:	11 f0       	breq	.+4      	; 0x11b4 <__stack+0xb5>
    11b0:	89 36       	cpi	r24, 0x69	; 105
    11b2:	41 f5       	brne	.+80     	; 0x1204 <__stack+0x105>
    11b4:	f8 01       	movw	r30, r16
    11b6:	37 fe       	sbrs	r3, 7
    11b8:	07 c0       	rjmp	.+14     	; 0x11c8 <__stack+0xc9>
    11ba:	60 81       	ld	r22, Z
    11bc:	71 81       	ldd	r23, Z+1	; 0x01
    11be:	82 81       	ldd	r24, Z+2	; 0x02
    11c0:	93 81       	ldd	r25, Z+3	; 0x03
    11c2:	0c 5f       	subi	r16, 0xFC	; 252
    11c4:	1f 4f       	sbci	r17, 0xFF	; 255
    11c6:	08 c0       	rjmp	.+16     	; 0x11d8 <__stack+0xd9>
    11c8:	60 81       	ld	r22, Z
    11ca:	71 81       	ldd	r23, Z+1	; 0x01
    11cc:	07 2e       	mov	r0, r23
    11ce:	00 0c       	add	r0, r0
    11d0:	88 0b       	sbc	r24, r24
    11d2:	99 0b       	sbc	r25, r25
    11d4:	0e 5f       	subi	r16, 0xFE	; 254
    11d6:	1f 4f       	sbci	r17, 0xFF	; 255
    11d8:	f3 2d       	mov	r31, r3
    11da:	ff 76       	andi	r31, 0x6F	; 111
    11dc:	3f 2e       	mov	r3, r31
    11de:	97 ff       	sbrs	r25, 7
    11e0:	09 c0       	rjmp	.+18     	; 0x11f4 <__stack+0xf5>
    11e2:	90 95       	com	r25
    11e4:	80 95       	com	r24
    11e6:	70 95       	com	r23
    11e8:	61 95       	neg	r22
    11ea:	7f 4f       	sbci	r23, 0xFF	; 255
    11ec:	8f 4f       	sbci	r24, 0xFF	; 255
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	f0 68       	ori	r31, 0x80	; 128
    11f2:	3f 2e       	mov	r3, r31
    11f4:	2a e0       	ldi	r18, 0x0A	; 10
    11f6:	30 e0       	ldi	r19, 0x00	; 0
    11f8:	a3 01       	movw	r20, r6
    11fa:	0e 94 34 0a 	call	0x1468	; 0x1468 <__ultoa_invert>
    11fe:	88 2e       	mov	r8, r24
    1200:	86 18       	sub	r8, r6
    1202:	45 c0       	rjmp	.+138    	; 0x128e <__stack+0x18f>
    1204:	85 37       	cpi	r24, 0x75	; 117
    1206:	31 f4       	brne	.+12     	; 0x1214 <__stack+0x115>
    1208:	23 2d       	mov	r18, r3
    120a:	2f 7e       	andi	r18, 0xEF	; 239
    120c:	b2 2e       	mov	r11, r18
    120e:	2a e0       	ldi	r18, 0x0A	; 10
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	25 c0       	rjmp	.+74     	; 0x125e <__stack+0x15f>
    1214:	93 2d       	mov	r25, r3
    1216:	99 7f       	andi	r25, 0xF9	; 249
    1218:	b9 2e       	mov	r11, r25
    121a:	8f 36       	cpi	r24, 0x6F	; 111
    121c:	c1 f0       	breq	.+48     	; 0x124e <__stack+0x14f>
    121e:	18 f4       	brcc	.+6      	; 0x1226 <__stack+0x127>
    1220:	88 35       	cpi	r24, 0x58	; 88
    1222:	79 f0       	breq	.+30     	; 0x1242 <__stack+0x143>
    1224:	b5 c0       	rjmp	.+362    	; 0x1390 <__stack+0x291>
    1226:	80 37       	cpi	r24, 0x70	; 112
    1228:	19 f0       	breq	.+6      	; 0x1230 <__stack+0x131>
    122a:	88 37       	cpi	r24, 0x78	; 120
    122c:	21 f0       	breq	.+8      	; 0x1236 <__stack+0x137>
    122e:	b0 c0       	rjmp	.+352    	; 0x1390 <__stack+0x291>
    1230:	e9 2f       	mov	r30, r25
    1232:	e0 61       	ori	r30, 0x10	; 16
    1234:	be 2e       	mov	r11, r30
    1236:	b4 fe       	sbrs	r11, 4
    1238:	0d c0       	rjmp	.+26     	; 0x1254 <__stack+0x155>
    123a:	fb 2d       	mov	r31, r11
    123c:	f4 60       	ori	r31, 0x04	; 4
    123e:	bf 2e       	mov	r11, r31
    1240:	09 c0       	rjmp	.+18     	; 0x1254 <__stack+0x155>
    1242:	34 fe       	sbrs	r3, 4
    1244:	0a c0       	rjmp	.+20     	; 0x125a <__stack+0x15b>
    1246:	29 2f       	mov	r18, r25
    1248:	26 60       	ori	r18, 0x06	; 6
    124a:	b2 2e       	mov	r11, r18
    124c:	06 c0       	rjmp	.+12     	; 0x125a <__stack+0x15b>
    124e:	28 e0       	ldi	r18, 0x08	; 8
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	05 c0       	rjmp	.+10     	; 0x125e <__stack+0x15f>
    1254:	20 e1       	ldi	r18, 0x10	; 16
    1256:	30 e0       	ldi	r19, 0x00	; 0
    1258:	02 c0       	rjmp	.+4      	; 0x125e <__stack+0x15f>
    125a:	20 e1       	ldi	r18, 0x10	; 16
    125c:	32 e0       	ldi	r19, 0x02	; 2
    125e:	f8 01       	movw	r30, r16
    1260:	b7 fe       	sbrs	r11, 7
    1262:	07 c0       	rjmp	.+14     	; 0x1272 <__stack+0x173>
    1264:	60 81       	ld	r22, Z
    1266:	71 81       	ldd	r23, Z+1	; 0x01
    1268:	82 81       	ldd	r24, Z+2	; 0x02
    126a:	93 81       	ldd	r25, Z+3	; 0x03
    126c:	0c 5f       	subi	r16, 0xFC	; 252
    126e:	1f 4f       	sbci	r17, 0xFF	; 255
    1270:	06 c0       	rjmp	.+12     	; 0x127e <__stack+0x17f>
    1272:	60 81       	ld	r22, Z
    1274:	71 81       	ldd	r23, Z+1	; 0x01
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	90 e0       	ldi	r25, 0x00	; 0
    127a:	0e 5f       	subi	r16, 0xFE	; 254
    127c:	1f 4f       	sbci	r17, 0xFF	; 255
    127e:	a3 01       	movw	r20, r6
    1280:	0e 94 34 0a 	call	0x1468	; 0x1468 <__ultoa_invert>
    1284:	88 2e       	mov	r8, r24
    1286:	86 18       	sub	r8, r6
    1288:	fb 2d       	mov	r31, r11
    128a:	ff 77       	andi	r31, 0x7F	; 127
    128c:	3f 2e       	mov	r3, r31
    128e:	36 fe       	sbrs	r3, 6
    1290:	0d c0       	rjmp	.+26     	; 0x12ac <__stack+0x1ad>
    1292:	23 2d       	mov	r18, r3
    1294:	2e 7f       	andi	r18, 0xFE	; 254
    1296:	a2 2e       	mov	r10, r18
    1298:	89 14       	cp	r8, r9
    129a:	58 f4       	brcc	.+22     	; 0x12b2 <__stack+0x1b3>
    129c:	34 fe       	sbrs	r3, 4
    129e:	0b c0       	rjmp	.+22     	; 0x12b6 <__stack+0x1b7>
    12a0:	32 fc       	sbrc	r3, 2
    12a2:	09 c0       	rjmp	.+18     	; 0x12b6 <__stack+0x1b7>
    12a4:	83 2d       	mov	r24, r3
    12a6:	8e 7e       	andi	r24, 0xEE	; 238
    12a8:	a8 2e       	mov	r10, r24
    12aa:	05 c0       	rjmp	.+10     	; 0x12b6 <__stack+0x1b7>
    12ac:	b8 2c       	mov	r11, r8
    12ae:	a3 2c       	mov	r10, r3
    12b0:	03 c0       	rjmp	.+6      	; 0x12b8 <__stack+0x1b9>
    12b2:	b8 2c       	mov	r11, r8
    12b4:	01 c0       	rjmp	.+2      	; 0x12b8 <__stack+0x1b9>
    12b6:	b9 2c       	mov	r11, r9
    12b8:	a4 fe       	sbrs	r10, 4
    12ba:	0f c0       	rjmp	.+30     	; 0x12da <__stack+0x1db>
    12bc:	fe 01       	movw	r30, r28
    12be:	e8 0d       	add	r30, r8
    12c0:	f1 1d       	adc	r31, r1
    12c2:	80 81       	ld	r24, Z
    12c4:	80 33       	cpi	r24, 0x30	; 48
    12c6:	21 f4       	brne	.+8      	; 0x12d0 <__stack+0x1d1>
    12c8:	9a 2d       	mov	r25, r10
    12ca:	99 7e       	andi	r25, 0xE9	; 233
    12cc:	a9 2e       	mov	r10, r25
    12ce:	09 c0       	rjmp	.+18     	; 0x12e2 <__stack+0x1e3>
    12d0:	a2 fe       	sbrs	r10, 2
    12d2:	06 c0       	rjmp	.+12     	; 0x12e0 <__stack+0x1e1>
    12d4:	b3 94       	inc	r11
    12d6:	b3 94       	inc	r11
    12d8:	04 c0       	rjmp	.+8      	; 0x12e2 <__stack+0x1e3>
    12da:	8a 2d       	mov	r24, r10
    12dc:	86 78       	andi	r24, 0x86	; 134
    12de:	09 f0       	breq	.+2      	; 0x12e2 <__stack+0x1e3>
    12e0:	b3 94       	inc	r11
    12e2:	a3 fc       	sbrc	r10, 3
    12e4:	11 c0       	rjmp	.+34     	; 0x1308 <__stack+0x209>
    12e6:	a0 fe       	sbrs	r10, 0
    12e8:	06 c0       	rjmp	.+12     	; 0x12f6 <__stack+0x1f7>
    12ea:	b2 14       	cp	r11, r2
    12ec:	88 f4       	brcc	.+34     	; 0x1310 <__stack+0x211>
    12ee:	28 0c       	add	r2, r8
    12f0:	92 2c       	mov	r9, r2
    12f2:	9b 18       	sub	r9, r11
    12f4:	0e c0       	rjmp	.+28     	; 0x1312 <__stack+0x213>
    12f6:	b2 14       	cp	r11, r2
    12f8:	60 f4       	brcc	.+24     	; 0x1312 <__stack+0x213>
    12fa:	b6 01       	movw	r22, r12
    12fc:	80 e2       	ldi	r24, 0x20	; 32
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1304:	b3 94       	inc	r11
    1306:	f7 cf       	rjmp	.-18     	; 0x12f6 <__stack+0x1f7>
    1308:	b2 14       	cp	r11, r2
    130a:	18 f4       	brcc	.+6      	; 0x1312 <__stack+0x213>
    130c:	2b 18       	sub	r2, r11
    130e:	02 c0       	rjmp	.+4      	; 0x1314 <__stack+0x215>
    1310:	98 2c       	mov	r9, r8
    1312:	21 2c       	mov	r2, r1
    1314:	a4 fe       	sbrs	r10, 4
    1316:	10 c0       	rjmp	.+32     	; 0x1338 <__stack+0x239>
    1318:	b6 01       	movw	r22, r12
    131a:	80 e3       	ldi	r24, 0x30	; 48
    131c:	90 e0       	ldi	r25, 0x00	; 0
    131e:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1322:	a2 fe       	sbrs	r10, 2
    1324:	17 c0       	rjmp	.+46     	; 0x1354 <__stack+0x255>
    1326:	a1 fc       	sbrc	r10, 1
    1328:	03 c0       	rjmp	.+6      	; 0x1330 <__stack+0x231>
    132a:	88 e7       	ldi	r24, 0x78	; 120
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	02 c0       	rjmp	.+4      	; 0x1334 <__stack+0x235>
    1330:	88 e5       	ldi	r24, 0x58	; 88
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	b6 01       	movw	r22, r12
    1336:	0c c0       	rjmp	.+24     	; 0x1350 <__stack+0x251>
    1338:	8a 2d       	mov	r24, r10
    133a:	86 78       	andi	r24, 0x86	; 134
    133c:	59 f0       	breq	.+22     	; 0x1354 <__stack+0x255>
    133e:	a1 fe       	sbrs	r10, 1
    1340:	02 c0       	rjmp	.+4      	; 0x1346 <__stack+0x247>
    1342:	8b e2       	ldi	r24, 0x2B	; 43
    1344:	01 c0       	rjmp	.+2      	; 0x1348 <__stack+0x249>
    1346:	80 e2       	ldi	r24, 0x20	; 32
    1348:	a7 fc       	sbrc	r10, 7
    134a:	8d e2       	ldi	r24, 0x2D	; 45
    134c:	b6 01       	movw	r22, r12
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1354:	89 14       	cp	r8, r9
    1356:	38 f4       	brcc	.+14     	; 0x1366 <__stack+0x267>
    1358:	b6 01       	movw	r22, r12
    135a:	80 e3       	ldi	r24, 0x30	; 48
    135c:	90 e0       	ldi	r25, 0x00	; 0
    135e:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1362:	9a 94       	dec	r9
    1364:	f7 cf       	rjmp	.-18     	; 0x1354 <__stack+0x255>
    1366:	8a 94       	dec	r8
    1368:	f3 01       	movw	r30, r6
    136a:	e8 0d       	add	r30, r8
    136c:	f1 1d       	adc	r31, r1
    136e:	80 81       	ld	r24, Z
    1370:	b6 01       	movw	r22, r12
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    1378:	81 10       	cpse	r8, r1
    137a:	f5 cf       	rjmp	.-22     	; 0x1366 <__stack+0x267>
    137c:	22 20       	and	r2, r2
    137e:	09 f4       	brne	.+2      	; 0x1382 <__stack+0x283>
    1380:	42 ce       	rjmp	.-892    	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
    1382:	b6 01       	movw	r22, r12
    1384:	80 e2       	ldi	r24, 0x20	; 32
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	0e 94 f8 09 	call	0x13f0	; 0x13f0 <fputc>
    138c:	2a 94       	dec	r2
    138e:	f6 cf       	rjmp	.-20     	; 0x137c <__stack+0x27d>
    1390:	f6 01       	movw	r30, r12
    1392:	86 81       	ldd	r24, Z+6	; 0x06
    1394:	97 81       	ldd	r25, Z+7	; 0x07
    1396:	02 c0       	rjmp	.+4      	; 0x139c <__stack+0x29d>
    1398:	8f ef       	ldi	r24, 0xFF	; 255
    139a:	9f ef       	ldi	r25, 0xFF	; 255
    139c:	2b 96       	adiw	r28, 0x0b	; 11
    139e:	e2 e1       	ldi	r30, 0x12	; 18
    13a0:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__epilogue_restores__>

000013a4 <strnlen_P>:
    13a4:	fc 01       	movw	r30, r24
    13a6:	05 90       	lpm	r0, Z+
    13a8:	61 50       	subi	r22, 0x01	; 1
    13aa:	70 40       	sbci	r23, 0x00	; 0
    13ac:	01 10       	cpse	r0, r1
    13ae:	d8 f7       	brcc	.-10     	; 0x13a6 <strnlen_P+0x2>
    13b0:	80 95       	com	r24
    13b2:	90 95       	com	r25
    13b4:	8e 0f       	add	r24, r30
    13b6:	9f 1f       	adc	r25, r31
    13b8:	08 95       	ret

000013ba <strnlen>:
    13ba:	fc 01       	movw	r30, r24
    13bc:	61 50       	subi	r22, 0x01	; 1
    13be:	70 40       	sbci	r23, 0x00	; 0
    13c0:	01 90       	ld	r0, Z+
    13c2:	01 10       	cpse	r0, r1
    13c4:	d8 f7       	brcc	.-10     	; 0x13bc <strnlen+0x2>
    13c6:	80 95       	com	r24
    13c8:	90 95       	com	r25
    13ca:	8e 0f       	add	r24, r30
    13cc:	9f 1f       	adc	r25, r31
    13ce:	08 95       	ret

000013d0 <strrev>:
    13d0:	dc 01       	movw	r26, r24
    13d2:	fc 01       	movw	r30, r24
    13d4:	67 2f       	mov	r22, r23
    13d6:	71 91       	ld	r23, Z+
    13d8:	77 23       	and	r23, r23
    13da:	e1 f7       	brne	.-8      	; 0x13d4 <strrev+0x4>
    13dc:	32 97       	sbiw	r30, 0x02	; 2
    13de:	04 c0       	rjmp	.+8      	; 0x13e8 <strrev+0x18>
    13e0:	7c 91       	ld	r23, X
    13e2:	6d 93       	st	X+, r22
    13e4:	70 83       	st	Z, r23
    13e6:	62 91       	ld	r22, -Z
    13e8:	ae 17       	cp	r26, r30
    13ea:	bf 07       	cpc	r27, r31
    13ec:	c8 f3       	brcs	.-14     	; 0x13e0 <strrev+0x10>
    13ee:	08 95       	ret

000013f0 <fputc>:
    13f0:	0f 93       	push	r16
    13f2:	1f 93       	push	r17
    13f4:	cf 93       	push	r28
    13f6:	df 93       	push	r29
    13f8:	fb 01       	movw	r30, r22
    13fa:	23 81       	ldd	r18, Z+3	; 0x03
    13fc:	21 fd       	sbrc	r18, 1
    13fe:	03 c0       	rjmp	.+6      	; 0x1406 <fputc+0x16>
    1400:	8f ef       	ldi	r24, 0xFF	; 255
    1402:	9f ef       	ldi	r25, 0xFF	; 255
    1404:	2c c0       	rjmp	.+88     	; 0x145e <fputc+0x6e>
    1406:	22 ff       	sbrs	r18, 2
    1408:	16 c0       	rjmp	.+44     	; 0x1436 <fputc+0x46>
    140a:	46 81       	ldd	r20, Z+6	; 0x06
    140c:	57 81       	ldd	r21, Z+7	; 0x07
    140e:	24 81       	ldd	r18, Z+4	; 0x04
    1410:	35 81       	ldd	r19, Z+5	; 0x05
    1412:	42 17       	cp	r20, r18
    1414:	53 07       	cpc	r21, r19
    1416:	44 f4       	brge	.+16     	; 0x1428 <fputc+0x38>
    1418:	a0 81       	ld	r26, Z
    141a:	b1 81       	ldd	r27, Z+1	; 0x01
    141c:	9d 01       	movw	r18, r26
    141e:	2f 5f       	subi	r18, 0xFF	; 255
    1420:	3f 4f       	sbci	r19, 0xFF	; 255
    1422:	31 83       	std	Z+1, r19	; 0x01
    1424:	20 83       	st	Z, r18
    1426:	8c 93       	st	X, r24
    1428:	26 81       	ldd	r18, Z+6	; 0x06
    142a:	37 81       	ldd	r19, Z+7	; 0x07
    142c:	2f 5f       	subi	r18, 0xFF	; 255
    142e:	3f 4f       	sbci	r19, 0xFF	; 255
    1430:	37 83       	std	Z+7, r19	; 0x07
    1432:	26 83       	std	Z+6, r18	; 0x06
    1434:	14 c0       	rjmp	.+40     	; 0x145e <fputc+0x6e>
    1436:	8b 01       	movw	r16, r22
    1438:	ec 01       	movw	r28, r24
    143a:	fb 01       	movw	r30, r22
    143c:	00 84       	ldd	r0, Z+8	; 0x08
    143e:	f1 85       	ldd	r31, Z+9	; 0x09
    1440:	e0 2d       	mov	r30, r0
    1442:	09 95       	icall
    1444:	89 2b       	or	r24, r25
    1446:	e1 f6       	brne	.-72     	; 0x1400 <fputc+0x10>
    1448:	d8 01       	movw	r26, r16
    144a:	16 96       	adiw	r26, 0x06	; 6
    144c:	8d 91       	ld	r24, X+
    144e:	9c 91       	ld	r25, X
    1450:	17 97       	sbiw	r26, 0x07	; 7
    1452:	01 96       	adiw	r24, 0x01	; 1
    1454:	17 96       	adiw	r26, 0x07	; 7
    1456:	9c 93       	st	X, r25
    1458:	8e 93       	st	-X, r24
    145a:	16 97       	sbiw	r26, 0x06	; 6
    145c:	ce 01       	movw	r24, r28
    145e:	df 91       	pop	r29
    1460:	cf 91       	pop	r28
    1462:	1f 91       	pop	r17
    1464:	0f 91       	pop	r16
    1466:	08 95       	ret

00001468 <__ultoa_invert>:
    1468:	fa 01       	movw	r30, r20
    146a:	aa 27       	eor	r26, r26
    146c:	28 30       	cpi	r18, 0x08	; 8
    146e:	51 f1       	breq	.+84     	; 0x14c4 <__ultoa_invert+0x5c>
    1470:	20 31       	cpi	r18, 0x10	; 16
    1472:	81 f1       	breq	.+96     	; 0x14d4 <__ultoa_invert+0x6c>
    1474:	e8 94       	clt
    1476:	6f 93       	push	r22
    1478:	6e 7f       	andi	r22, 0xFE	; 254
    147a:	6e 5f       	subi	r22, 0xFE	; 254
    147c:	7f 4f       	sbci	r23, 0xFF	; 255
    147e:	8f 4f       	sbci	r24, 0xFF	; 255
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	af 4f       	sbci	r26, 0xFF	; 255
    1484:	b1 e0       	ldi	r27, 0x01	; 1
    1486:	3e d0       	rcall	.+124    	; 0x1504 <__ultoa_invert+0x9c>
    1488:	b4 e0       	ldi	r27, 0x04	; 4
    148a:	3c d0       	rcall	.+120    	; 0x1504 <__ultoa_invert+0x9c>
    148c:	67 0f       	add	r22, r23
    148e:	78 1f       	adc	r23, r24
    1490:	89 1f       	adc	r24, r25
    1492:	9a 1f       	adc	r25, r26
    1494:	a1 1d       	adc	r26, r1
    1496:	68 0f       	add	r22, r24
    1498:	79 1f       	adc	r23, r25
    149a:	8a 1f       	adc	r24, r26
    149c:	91 1d       	adc	r25, r1
    149e:	a1 1d       	adc	r26, r1
    14a0:	6a 0f       	add	r22, r26
    14a2:	71 1d       	adc	r23, r1
    14a4:	81 1d       	adc	r24, r1
    14a6:	91 1d       	adc	r25, r1
    14a8:	a1 1d       	adc	r26, r1
    14aa:	20 d0       	rcall	.+64     	; 0x14ec <__ultoa_invert+0x84>
    14ac:	09 f4       	brne	.+2      	; 0x14b0 <__ultoa_invert+0x48>
    14ae:	68 94       	set
    14b0:	3f 91       	pop	r19
    14b2:	2a e0       	ldi	r18, 0x0A	; 10
    14b4:	26 9f       	mul	r18, r22
    14b6:	11 24       	eor	r1, r1
    14b8:	30 19       	sub	r19, r0
    14ba:	30 5d       	subi	r19, 0xD0	; 208
    14bc:	31 93       	st	Z+, r19
    14be:	de f6       	brtc	.-74     	; 0x1476 <__ultoa_invert+0xe>
    14c0:	cf 01       	movw	r24, r30
    14c2:	08 95       	ret
    14c4:	46 2f       	mov	r20, r22
    14c6:	47 70       	andi	r20, 0x07	; 7
    14c8:	40 5d       	subi	r20, 0xD0	; 208
    14ca:	41 93       	st	Z+, r20
    14cc:	b3 e0       	ldi	r27, 0x03	; 3
    14ce:	0f d0       	rcall	.+30     	; 0x14ee <__ultoa_invert+0x86>
    14d0:	c9 f7       	brne	.-14     	; 0x14c4 <__ultoa_invert+0x5c>
    14d2:	f6 cf       	rjmp	.-20     	; 0x14c0 <__ultoa_invert+0x58>
    14d4:	46 2f       	mov	r20, r22
    14d6:	4f 70       	andi	r20, 0x0F	; 15
    14d8:	40 5d       	subi	r20, 0xD0	; 208
    14da:	4a 33       	cpi	r20, 0x3A	; 58
    14dc:	18 f0       	brcs	.+6      	; 0x14e4 <__ultoa_invert+0x7c>
    14de:	49 5d       	subi	r20, 0xD9	; 217
    14e0:	31 fd       	sbrc	r19, 1
    14e2:	40 52       	subi	r20, 0x20	; 32
    14e4:	41 93       	st	Z+, r20
    14e6:	02 d0       	rcall	.+4      	; 0x14ec <__ultoa_invert+0x84>
    14e8:	a9 f7       	brne	.-22     	; 0x14d4 <__ultoa_invert+0x6c>
    14ea:	ea cf       	rjmp	.-44     	; 0x14c0 <__ultoa_invert+0x58>
    14ec:	b4 e0       	ldi	r27, 0x04	; 4
    14ee:	a6 95       	lsr	r26
    14f0:	97 95       	ror	r25
    14f2:	87 95       	ror	r24
    14f4:	77 95       	ror	r23
    14f6:	67 95       	ror	r22
    14f8:	ba 95       	dec	r27
    14fa:	c9 f7       	brne	.-14     	; 0x14ee <__ultoa_invert+0x86>
    14fc:	00 97       	sbiw	r24, 0x00	; 0
    14fe:	61 05       	cpc	r22, r1
    1500:	71 05       	cpc	r23, r1
    1502:	08 95       	ret
    1504:	9b 01       	movw	r18, r22
    1506:	ac 01       	movw	r20, r24
    1508:	0a 2e       	mov	r0, r26
    150a:	06 94       	lsr	r0
    150c:	57 95       	ror	r21
    150e:	47 95       	ror	r20
    1510:	37 95       	ror	r19
    1512:	27 95       	ror	r18
    1514:	ba 95       	dec	r27
    1516:	c9 f7       	brne	.-14     	; 0x150a <__ultoa_invert+0xa2>
    1518:	62 0f       	add	r22, r18
    151a:	73 1f       	adc	r23, r19
    151c:	84 1f       	adc	r24, r20
    151e:	95 1f       	adc	r25, r21
    1520:	a0 1d       	adc	r26, r0
    1522:	08 95       	ret

00001524 <__prologue_saves__>:
    1524:	2f 92       	push	r2
    1526:	3f 92       	push	r3
    1528:	4f 92       	push	r4
    152a:	5f 92       	push	r5
    152c:	6f 92       	push	r6
    152e:	7f 92       	push	r7
    1530:	8f 92       	push	r8
    1532:	9f 92       	push	r9
    1534:	af 92       	push	r10
    1536:	bf 92       	push	r11
    1538:	cf 92       	push	r12
    153a:	df 92       	push	r13
    153c:	ef 92       	push	r14
    153e:	ff 92       	push	r15
    1540:	0f 93       	push	r16
    1542:	1f 93       	push	r17
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	cd b7       	in	r28, 0x3d	; 61
    154a:	de b7       	in	r29, 0x3e	; 62
    154c:	ca 1b       	sub	r28, r26
    154e:	db 0b       	sbc	r29, r27
    1550:	0f b6       	in	r0, 0x3f	; 63
    1552:	f8 94       	cli
    1554:	de bf       	out	0x3e, r29	; 62
    1556:	0f be       	out	0x3f, r0	; 63
    1558:	cd bf       	out	0x3d, r28	; 61
    155a:	09 94       	ijmp

0000155c <__epilogue_restores__>:
    155c:	2a 88       	ldd	r2, Y+18	; 0x12
    155e:	39 88       	ldd	r3, Y+17	; 0x11
    1560:	48 88       	ldd	r4, Y+16	; 0x10
    1562:	5f 84       	ldd	r5, Y+15	; 0x0f
    1564:	6e 84       	ldd	r6, Y+14	; 0x0e
    1566:	7d 84       	ldd	r7, Y+13	; 0x0d
    1568:	8c 84       	ldd	r8, Y+12	; 0x0c
    156a:	9b 84       	ldd	r9, Y+11	; 0x0b
    156c:	aa 84       	ldd	r10, Y+10	; 0x0a
    156e:	b9 84       	ldd	r11, Y+9	; 0x09
    1570:	c8 84       	ldd	r12, Y+8	; 0x08
    1572:	df 80       	ldd	r13, Y+7	; 0x07
    1574:	ee 80       	ldd	r14, Y+6	; 0x06
    1576:	fd 80       	ldd	r15, Y+5	; 0x05
    1578:	0c 81       	ldd	r16, Y+4	; 0x04
    157a:	1b 81       	ldd	r17, Y+3	; 0x03
    157c:	aa 81       	ldd	r26, Y+2	; 0x02
    157e:	b9 81       	ldd	r27, Y+1	; 0x01
    1580:	ce 0f       	add	r28, r30
    1582:	d1 1d       	adc	r29, r1
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
    158e:	ed 01       	movw	r28, r26
    1590:	08 95       	ret

00001592 <_exit>:
    1592:	f8 94       	cli

00001594 <__stop_program>:
    1594:	ff cf       	rjmp	.-2      	; 0x1594 <__stop_program>
